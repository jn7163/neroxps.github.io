<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Nero Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hexo.neroxps.cn/"/>
  <updated>2017-07-19T12:47:36.000Z</updated>
  <id>http://hexo.neroxps.cn/</id>
  
  <author>
    <name>Nero Hau</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>zabbix-agent 安装及升级</title>
    <link href="http://hexo.neroxps.cn/2017/07/15/Zabbix-agent-installation-Debian/"/>
    <id>http://hexo.neroxps.cn/2017/07/15/Zabbix-agent-installation-Debian/</id>
    <published>2017-07-14T16:00:00.000Z</published>
    <updated>2017-07-19T12:47:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装-zabbix-agent-到-Debian"><a href="#安装-zabbix-agent-到-Debian" class="headerlink" title="安装 zabbix-agent 到 Debian"></a>安装 zabbix-agent 到 Debian</h2><blockquote>
<p>参考 <a href="https://www.zabbix.com/documentation/3.2/manual/installation/install_from_packages/agent_installation" target="_blank" rel="external">Zabbix Documentation 3.2</a></p>
</blockquote>
<h3 id="通过默认源安装-zabbix-agent"><a href="#通过默认源安装-zabbix-agent" class="headerlink" title="通过默认源安装 zabbix-agent"></a>通过默认源安装 zabbix-agent</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install zabbix-agent</div></pre></td></tr></table></figure>
<p>但是这样安装的 zabbix-agent 版本是比较老的版本</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">zabbix_agent -V</div><div class="line">Zabbix agent v2.2.7 (revision 50148) (24 October 2014)</div><div class="line">Compilation time: Feb  3 2017 17:23:53</div></pre></td></tr></table></figure>
<h3 id="通过-Zabbix-源安装新版本"><a href="#通过-Zabbix-源安装新版本" class="headerlink" title="通过 Zabbix 源安装新版本"></a>通过 Zabbix 源安装新版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># wget http://repo.zabbix.com/zabbix/3.2/debian/pool/main/z/zabbix-release/zabbix-release_3.2-1+jessie_all.deb</div><div class="line"># dpkg -i zabbix-release_3.2-1+jessie_all.deb</div><div class="line"># apt-get update</div><div class="line"># apt-get install zabbix-agent</div><div class="line"># zabbix_agentd -V</div><div class="line">zabbix_agentd (daemon) (Zabbix) 3.2.6</div><div class="line">Revision 67849 4 May 2017, compilation time: May  6 2017 15:59:40</div></pre></td></tr></table></figure>
<h2 id="升级-zabbix-agent-到官方新版本-2-2-7-升级到-3-2-6）"><a href="#升级-zabbix-agent-到官方新版本-2-2-7-升级到-3-2-6）" class="headerlink" title="升级 zabbix-agent 到官方新版本(2.2.7 升级到 3.2.6）"></a>升级 zabbix-agent 到官方新版本(2.2.7 升级到 3.2.6）</h2><p>如果是之前安装 zabbix-agent 是用系统默认源安装的话，版本比较久，那么可以通过上面方法安装最新版本。</p>
<blockquote>
<p>注：笔者的 zabbix-server 版本是3.2版本，要确定自己的 zabbix-agent 是否适用于 zabbix-server。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ wget http://repo.zabbix.com/zabbix/3.2/debian/pool/main/z/zabbix-release/zabbix-release_3.2-1+jessie_all.deb</div><div class="line">$ sudo dpkg -i zabbix-release_3.2-1+jessie_all.deb</div><div class="line">$ sudo apt-get update</div><div class="line">$ sudo apt-get install --only-upgrade zabbix-agent</div><div class="line"></div><div class="line">注意，这里更新的时候会问你选择如何处理已有的配置文件，这里可以选择 N，使用原来的配置文件。</div></pre></td></tr></table></figure>
<h3 id="遇到错误"><a href="#遇到错误" class="headerlink" title="遇到错误"></a>遇到错误</h3><p>安装到最后会报告安装失败，其实已经安装好了，但是因为 2.2 的配置文件引入的其他配置的目录路径是 /etc/zabbix/zabbix_agentd.conf.d，而 3.2是 /etc/zabbix/zabbix_agentd.d 故此会刷出报错日志如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">7月 15 14:49:22 gooderp-backup zabbix_agentd[22098]: zabbix_agentd [22098]: /etc/zabbix/zabbix_agentd.conf.d: [2] No such file or directory</div><div class="line">7月 15 14:49:22 gooderp-backup systemd[1]: zabbix-agent.service: control process exited, code=exited status=1</div><div class="line">7月 15 14:49:22 gooderp-backup systemd[1]: Failed to start Zabbix Agent.</div></pre></td></tr></table></figure>
<p>这个简单，只需要替换下配置文件的路径名称即可。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo sed -i &quot;s/zabbix_agentd.conf.d/zabbix_agentd.d/g&quot; /etc/zabbix/zabbix_agentd.conf</div><div class="line">$ sudo systemctl restart zabbix-agent</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装-zabbix-agent-到-Debian&quot;&gt;&lt;a href=&quot;#安装-zabbix-agent-到-Debian&quot; class=&quot;headerlink&quot; title=&quot;安装 zabbix-agent 到 Debian&quot;&gt;&lt;/a&gt;安装 zabbix-ag
    
    </summary>
    
      <category term="IT技术 Linux" scheme="http://hexo.neroxps.cn/categories/IT%E6%8A%80%E6%9C%AF-Linux/"/>
    
    
      <category term="Zabbix" scheme="http://hexo.neroxps.cn/tags/Zabbix/"/>
    
  </entry>
  
  <entry>
    <title>Zabbix 邮件警告</title>
    <link href="http://hexo.neroxps.cn/2017/07/13/Zabbix-SMTP/"/>
    <id>http://hexo.neroxps.cn/2017/07/13/Zabbix-SMTP/</id>
    <published>2017-07-12T16:00:00.000Z</published>
    <updated>2017-07-19T12:47:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="触发器邮件警告"><a href="#触发器邮件警告" class="headerlink" title="触发器邮件警告"></a>触发器邮件警告</h1><p>Zabbix 默认的邮箱警告有个 SMTP HELO 的值，我一直不知道怎么填写，反正这个值一直报错，网上爬文一堆都是通过脚本来发邮件的。</p>
<h2 id="部署-sendEmail-环境"><a href="#部署-sendEmail-环境" class="headerlink" title="部署 sendEmail 环境"></a>部署 sendEmail 环境</h2><blockquote>
<p>参考文献1：<a href="http://www.jianshu.com/p/78ec2aba6824" target="_blank" rel="external">Zabbix通过stmp邮件报警</a></p>
<p>参考文献2：<a href="http://xiao987334176.blog.51cto.com/2202382/1768339" target="_blank" rel="external">zabbix 3.0.2邮件报警</a></p>
</blockquote>
<p>这里需要用到 sendEmail <a href="http://caspian.dotconf.net/menu/Software/SendEmail/" target="_blank" rel="external">下载地址</a>，它是基于 perl 写的一个脚本，如果用 SSL 加密的话需要依赖 perl 的 <strong>Net::SSLeay</strong> 和 <strong>IO::Socket::SSL</strong> 模块，debian 和 Ubuntu 的源都可以直接安装这个软件，另外安装 <code>libcrypt-ssleay-perl libio-socket-ssl-perl ca-certificates</code> 这三个包即可。</p>
<p>但是我查了下，zabbix/zabbix-server-mysql:latest 是使用 alpine 的，我测试的时候 sendEmail 官网下载的脚本会遇到 <code>invalid SSL_version</code> 的报错。Google 一番后据说要修改 <code>/usr/share/perl5/IO/Socket/SSL.pm</code> 这个依赖文件，但是我改了之后就会报 SSL 鉴定错误，故此不能这样做。</p>
<p>最终爬贴找到了这个帖子<strong><a href="https://sources.gentoo.org/cgi-bin/viewvc.cgi/gentoo-x86/net-mail/sendEmail/files/1.56-overzealous-version-check.patch?view=log" target="_blank" rel="external">1.56-overzealous-version-check.patch</a></strong></p>
<p>例子中是将 sendEmail 的 SSL_version 定义为 SSLv3，但是我使用的 QQ 邮箱和 Gmail 目前都在使用 TLSv1 协议，故此我需要将这个改成 TLSv1。</p>
<p>说回来我是 Docker 环境，故此我需要基于 zabbix/zabbix-server-mysql:latest 构建一个新的镜像。</p>
<h3 id="1-创建-Docker-构建文件夹"><a href="#1-创建-Docker-构建文件夹" class="headerlink" title="1. 创建 Docker 构建文件夹"></a>1. 创建 Docker 构建文件夹</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir ~/zabbix-server-mysql-sendEmail</div></pre></td></tr></table></figure>
<h3 id="2-创建-Dockerfile"><a href="#2-创建-Dockerfile" class="headerlink" title="2. 创建 Dockerfile"></a>2. 创建 Dockerfile</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">cat &lt;&lt;EOF | tee ~/zabbix-server-mysql-sendEmail/Dockerfile</div><div class="line">FROM zabbix/zabbix-server-mysql</div><div class="line">RUN sed -i &apos;s/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g&apos; /etc/apk/repositories &amp;&amp; \</div><div class="line">apk add --no-cache perl-crypt-ssleay perl-io-socket-ssl ca-certificates tzdata &amp;&amp; \</div><div class="line">wget http://caspian.dotconf.net/menu/Software/SendEmail/sendEmail-v1.56.tar.gz -P /tmp/ &amp;&amp; \</div><div class="line">tar xzf /tmp/sendEmail-v1.56.tar.gz -C /tmp/ &amp;&amp; \</div><div class="line">rm -f /tmp/sendEmail-v1.56.tar.gz &amp;&amp; \</div><div class="line">sed -i &quot;s/SSL_version =&gt; &apos;SSLv3 TLSv1&apos;/SSL_version =&gt; &apos;TLSv1&apos;/g&quot; /tmp/sendEmail-v1.56/sendEmail &amp;&amp; \</div><div class="line">mv /tmp/sendEmail-v1.56/sendEmail /usr/bin &amp;&amp; \</div><div class="line">chmod +x /usr/bin/sendEmail &amp;&amp; \</div><div class="line">rm -rf /tmp/* &amp;&amp; \</div><div class="line">ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; \</div><div class="line">echo &quot;Asia/Shanghai&quot; &gt; /etc/timezone </div><div class="line"></div><div class="line">EXPOSE 10051/TCP 162/UDP</div><div class="line"></div><div class="line">WORKDIR /var/lib/zabbix</div><div class="line"></div><div class="line">ENTRYPOINT [&quot;/bin/bash&quot;]</div><div class="line"></div><div class="line">CMD [&quot;/run_zabbix_component.sh&quot;, &quot;server&quot;, &quot;mysql&quot;]</div><div class="line">EOF</div></pre></td></tr></table></figure>
<h3 id="3-构建镜像"><a href="#3-构建镜像" class="headerlink" title="3. 构建镜像"></a>3. 构建镜像</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd ~/zabbix-server-mysql-sendEmail</div><div class="line">docker build -t nero/zabbix-server-mysql:latest .</div></pre></td></tr></table></figure>
<h3 id="4-停止官方使用的镜像，启用新镜像"><a href="#4-停止官方使用的镜像，启用新镜像" class="headerlink" title="4. 停止官方使用的镜像，启用新镜像"></a>4. 停止官方使用的镜像，启用新镜像</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">docker rm -f zabbix-server #这里我之前启用镜像的时候使用的是别名</div><div class="line">docker run --name zabbix-server \</div><div class="line">--link zabbix-db:mysql-server \</div><div class="line">--restart=always \</div><div class="line">-e MYSQL_USER=zabbix \</div><div class="line">-e MYSQL_PASSWORD=zabbix \</div><div class="line">-e ZBX_IPMIPOLLERS=3 \</div><div class="line">-e ZBX_STARTVMWARECOLLECTORS=5 \</div><div class="line">-e ZBX_DEBUGLEVEL=3 \</div><div class="line">-v /home/nero/zabbix/externalscripts:/usr/lib/zabbix/externalscripts \</div><div class="line">-v /home/nero/zabbix/alertscripts:/usr/lib/zabbix/alertscripts \</div><div class="line">-p 10051:10051 \</div><div class="line">-d nero/zabbix-server-mysql</div></pre></td></tr></table></figure>
<h3 id="5-编写-sendEmail-的发信脚本"><a href="#5-编写-sendEmail-的发信脚本" class="headerlink" title="5. 编写 sendEmail 的发信脚本"></a>5. 编写 sendEmail 的发信脚本</h3><blockquote>
<p>参考自 <a href="http://www.jianshu.com/p/78ec2aba6824" target="_blank" rel="external">Zabbix通过stmp邮件报警</a></p>
</blockquote>
<p>我修改了下他的脚本，他脚本会自动转换字符编码，另外输出日志方便排查，但是日志不太详细，我给 sendEmail 加了 -v 参数。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line">SMTP_server=&apos;smtp.qq.com:587&apos;    # SMTP服务器，我用 QQ TLS 的端口。</div><div class="line">username=&apos;email@email.com&apos;     # 用户名</div><div class="line">password=&apos; smtp_password&apos;             # 密码</div><div class="line">from_email_address=&apos;email@email.com&apos; # 发件人Email地址</div><div class="line">to_email_address=&quot;$1&quot;               # 收件人Email地址，zabbix传入的第一个参数</div><div class="line">message_subject_utf8=&quot;$2&quot;           # 邮件标题，zabbix传入的第二个参数</div><div class="line">message_body_utf8=&quot;$3&quot;              # 邮件内容，zabbix传入的第三个参数</div><div class="line"></div><div class="line">echo &quot;`date +&quot;%F %T&quot;` send to $to_email_address&quot; &gt;&gt; /tmp/send.log</div><div class="line"></div><div class="line"># 转换邮件标题为GB2312，解决邮件标题含有中文，收到邮件显示乱码的问题。</div><div class="line">message_subject_gb2312=`iconv -t GB2312 -f UTF-8 &lt;&lt; EOF</div><div class="line">$message_subject_utf8</div><div class="line">EOF`</div><div class="line">[ $? -eq 0 ] &amp;&amp; message_subject=&quot;$message_subject_gb2312&quot; || message_subject=&quot;$message_subject_utf8&quot;</div><div class="line">bhnaqekboudsdcca</div><div class="line"># 转换邮件内容为GB2312</div><div class="line">message_body_gb2312=`iconv -t GB2312 -f UTF-8 &lt;&lt; EOF</div><div class="line">$message_body_utf8</div><div class="line">EOF`</div><div class="line">[ $? -eq 0 ] &amp;&amp; message_body=&quot;$message_body_gb2312&quot; || message_body=&quot;$message_body_utf8&quot;</div><div class="line"></div><div class="line"># 发送邮件</div><div class="line">sendEmail=&apos;/usr/bin/sendEmail&apos;</div><div class="line">$sendEmail -s &quot;$SMTP_server&quot; -xu &quot;$username&quot; -xp &quot;$password&quot; -f &quot;$from_email_address&quot; -t &quot;$to_email_address&quot; -u &quot;$message_subject&quot; -m &quot;$message_body&quot; -o message-content-type=text -o message-charset=gb2312 -o tls=yes -v &gt;&gt; /tmp/send.log</div><div class="line"></div><div class="line">echo $? &gt;&gt; /tmp/send.log</div><div class="line">echo &quot;zabbix 参数1 = $1&quot; &gt;&gt; /tmp/send.log</div><div class="line">echo &quot;zabbix 参数2 = $2&quot; &gt;&gt; /tmp/send.log</div><div class="line">echo &quot;zabbix 参数3 = $3&quot; &gt;&gt; /tmp/send.log</div><div class="line">echo &gt;&gt; /tmp/send.log</div><div class="line">echo &gt;&gt; /tmp/send.log</div><div class="line">echo &gt;&gt; /tmp/send.log</div></pre></td></tr></table></figure>
<h2 id="Zabbix-设置邮件告警"><a href="#Zabbix-设置邮件告警" class="headerlink" title="Zabbix 设置邮件告警"></a>Zabbix 设置邮件告警</h2><blockquote>
<p>我这里的 Zabbix 版本是3.2版本，不同版本界面略有不同，据说2.0的版本不需要加脚本参数，3.0开始需要加脚本参数了。</p>
</blockquote>
<h3 id="1-创建报价媒介类型"><a href="#1-创建报价媒介类型" class="headerlink" title="1. 创建报价媒介类型"></a>1. 创建报价媒介类型</h3><p><img src="/2017/07/13/Zabbix-SMTP/zabbix-01.png" alt="zabbix-01"></p>
<h3 id="2-输入报警媒介类型参数"><a href="#2-输入报警媒介类型参数" class="headerlink" title="2. 输入报警媒介类型参数"></a>2. 输入报警媒介类型参数</h3><p><img src="/2017/07/13/Zabbix-SMTP/zabbix-02.png" alt="zabbix-02"></p>
<p>这里注意，脚本参数顺序不要错，否则会导致发信失败。</p>
<table>
<thead>
<tr>
<th>脚本参数</th>
<th>参数</th>
<th>注释</th>
</tr>
</thead>
<tbody>
<tr>
<td>第一个参数</td>
<td>{ALERT.SENDTO}</td>
<td>目的邮箱地址</td>
</tr>
<tr>
<td>第二个参数</td>
<td>{ALERT.SUBJECT}</td>
<td>邮件主题</td>
</tr>
<tr>
<td>第三个参数</td>
<td>{ALERT.MESSAGE}</td>
<td>邮件内容</td>
</tr>
</tbody>
</table>
<h3 id="3-配置用户收信邮箱"><a href="#3-配置用户收信邮箱" class="headerlink" title="3. 配置用户收信邮箱"></a>3. 配置用户收信邮箱</h3><p><img src="/2017/07/13/Zabbix-SMTP/zabbix-03.png" alt="zabbix-03"></p>
<hr>
<p><img src="/2017/07/13/Zabbix-SMTP/zabbix-04.png" alt="zabbix-04"></p>
<hr>
<p><img src="/2017/07/13/Zabbix-SMTP/zabbix-05.png" alt="zabbix-05"></p>
<hr>
<p><img src="/2017/07/13/Zabbix-SMTP/zabbix-06.png" alt="zabbix-06"></p>
<h3 id="4-配置动作"><a href="#4-配置动作" class="headerlink" title="4. 配置动作"></a>4. 配置动作</h3><p>这里我建立一个触发器警告，当触发器条件为真的时候，就发出警告邮件。</p>
<p><img src="/2017/07/13/Zabbix-SMTP/zabbix-07.png" alt="zabbix-07"></p>
<p><strong>注意这里事件源选择触发器</strong></p>
<hr>
<p>按图片重复添加动作条件</p>
<p><img src="/2017/07/13/Zabbix-SMTP/zabbix-08.png" alt="zabbix-08"></p>
<hr>
<p><img src="/2017/07/13/Zabbix-SMTP/zabbix-09.png" alt="zabbix-09"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">默认接收人：『服务器警报』 &#123;HOST.NAME&#125;:&#123;ITEM.NAME&#125;</div><div class="line"></div><div class="line">默认信息：</div><div class="line">告警主机: &#123;HOSTNAME1&#125;</div><div class="line">告警时间: &#123;EVENT.DATE&#125; &#123;EVENT.TIME&#125;</div><div class="line">告警等级: &#123;TRIGGER.SEVERITY&#125;</div><div class="line">告警信息: &#123;TRIGGER.NAME&#125;</div><div class="line">告警项目: &#123;TRIGGER.KEY1&#125;</div><div class="line">问题详情: &#123;ITEM.NAME&#125;: &#123;ITEM.VALUE&#125;</div><div class="line">当前状态: &#123;TRIGGER.STATUS&#125;: &#123;ITEM.VALUE1&#125;</div><div class="line">事件ID: &#123;EVENT.ID&#125;</div></pre></td></tr></table></figure>
<p>其余参数按照图片设置，目前还没理解透这里所有选项，这里就不班门弄斧。</p>
<hr>
<p><img src="/2017/07/13/Zabbix-SMTP/zabbix-10.png" alt="zabbix-10"></p>
<p>这里是触发器值为假后的操作，你可以自定义恢复公式，也可以按照原来的公式为假后发送邮件，告诉我们这个监控值正常了。</p>
<p>里面的内容除了<strong>默认接收人</strong>也就是邮件标题外，其余内容和上面的一样。</p>
<h4 id="调试邮件告警"><a href="#调试邮件告警" class="headerlink" title="调试邮件告警"></a>调试邮件告警</h4><p>监控邮件发送日志，就可以调试邮件的发送状态了。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">docker exec -it zabbix-server tail -f /tmp/send.log</div><div class="line">2017-07-12 17:53:07 send to neroxps@gmail.com</div><div class="line">Jul 12 17:53:07 1890ce4a57bf sendEmail[172]: DEBUG =&gt; Connecting to smtp.qq.com:587</div><div class="line">Jul 12 17:53:07 1890ce4a57bf sendEmail[172]: DEBUG =&gt; My IP address is: 172.17.0.3</div><div class="line">Jul 12 17:53:07 1890ce4a57bf sendEmail[172]: SUCCESS =&gt; Received:       220 smtp.qq.com Esmtp QQ Mail Server</div><div class="line">Jul 12 17:53:07 1890ce4a57bf sendEmail[172]: INFO =&gt; Sending:   EHLO </div><div class="line">Jul 12 17:53:07 1890ce4a57bf sendEmail[172]: SUCCESS =&gt; Received:       250-smtp.qq.com, 250-PIPELINING, 250-SIZE 73400320, 250-STARTTLS, 250-AUTH LOGIN PLAIN, 250-AUTH=LOGIN, 250-MAILCOMPRESS, 250 8BITMIME</div><div class="line">Jul 12 17:53:07 1890ce4a57bf sendEmail[172]: INFO =&gt; Sending:   STARTTLS</div><div class="line">Jul 12 17:53:07 1890ce4a57bf sendEmail[172]: SUCCESS =&gt; Received:       220 Ready to start TLS</div><div class="line">Jul 12 17:53:07 1890ce4a57bf sendEmail[172]: DEBUG =&gt; TLS session initialized :)</div><div class="line">Jul 12 17:53:07 1890ce4a57bf sendEmail[172]: INFO =&gt; Sending:   EHLO </div><div class="line">Jul 12 17:53:07 1890ce4a57bf sendEmail[172]: SUCCESS =&gt; Received:       250-smtp.qq.com, 250-PIPELINING, 250-SIZE 73400320, 250-AUTH LOGIN PLAIN, 250-AUTH=LOGIN, 250-MAILCOMPRESS, 250 8BITMIME</div><div class="line">Jul 12 17:53:07 1890ce4a57bf sendEmail[172]: DEBUG =&gt; SMTP-AUTH: Using LOGIN authentication method</div><div class="line">Jul 12 17:53:07 1890ce4a57bf sendEmail[172]: INFO =&gt; Sending:   AUTH LOGIN</div><div class="line">Jul 12 17:53:07 1890ce4a57bf sendEmail[172]: SUCCESS =&gt; Received:       334 VXNlcm5hbWU6</div><div class="line">Jul 12 17:53:07 1890ce4a57bf sendEmail[172]: INFO =&gt; Sending:   </div><div class="line">Jul 12 17:53:07 1890ce4a57bf sendEmail[172]: SUCCESS =&gt; Received:       334 UGFzc3dvcmQ6</div><div class="line">Jul 12 17:53:07 1890ce4a57bf sendEmail[172]: INFO =&gt; Sending:   </div><div class="line">Jul 12 17:53:08 1890ce4a57bf sendEmail[172]: SUCCESS =&gt; Received:       235 Authentication successful</div><div class="line">Jul 12 17:53:08 1890ce4a57bf sendEmail[172]: DEBUG =&gt; User authentication was successful (Method: LOGIN)</div><div class="line">Jul 12 17:53:08 1890ce4a57bf sendEmail[172]: INFO =&gt; Sending:   MAIL FROM:&lt;email@email.com&gt;</div><div class="line">Jul 12 17:53:08 1890ce4a57bf sendEmail[172]: SUCCESS =&gt; Received:       250 Ok</div><div class="line">Jul 12 17:53:08 1890ce4a57bf sendEmail[172]: INFO =&gt; Sending:   RCPT TO:&lt;neroxps@gmail.com&gt;</div><div class="line">Jul 12 17:53:08 1890ce4a57bf sendEmail[172]: SUCCESS =&gt; Received:       250 Ok</div><div class="line">Jul 12 17:53:08 1890ce4a57bf sendEmail[172]: INFO =&gt; Sending:   DATA</div><div class="line">Jul 12 17:53:08 1890ce4a57bf sendEmail[172]: SUCCESS =&gt; Received:       354 End data with &lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt;</div><div class="line">Jul 12 17:53:08 1890ce4a57bf sendEmail[172]: INFO =&gt; Sending message body</div><div class="line">Jul 12 17:53:08 1890ce4a57bf sendEmail[172]: Setting content-type: text/plain</div><div class="line">Jul 12 17:53:08 1890ce4a57bf sendEmail[172]: SUCCESS =&gt; Received:       250 Ok: queued as</div><div class="line">Jul 12 17:53:08 1890ce4a57bf sendEmail[172]: Email was sent successfully!  From: &lt;email@email.com&gt; To: &lt;neroxps@gmail.com&gt; Subject: [『服务器警报恢复』 Gen8-ipmi:02-CPU] Server: [smtp.qq.com:587]</div><div class="line">0</div><div class="line">zabbix 参数1 = neroxps@gmail.com</div><div class="line">zabbix 参数2 = 『服务器警报恢复』 Gen8-ipmi:02-CPU</div><div class="line">zabbix 参数3 = 告警主机: Gen8-ipmi</div><div class="line">告警时间: 2017.07.12 17:50:58</div><div class="line">告警等级: High</div><div class="line">告警信息: Gen8-ipmi CPU温度过高-test006</div><div class="line">告警项目: 02-CPU</div><div class="line">问题详情: 02-CPU: 40 ℃</div><div class="line">当前状态: OK: 40 ℃</div><div class="line">事件ID: 4858</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;触发器邮件警告&quot;&gt;&lt;a href=&quot;#触发器邮件警告&quot; class=&quot;headerlink&quot; title=&quot;触发器邮件警告&quot;&gt;&lt;/a&gt;触发器邮件警告&lt;/h1&gt;&lt;p&gt;Zabbix 默认的邮箱警告有个 SMTP HELO 的值，我一直不知道怎么填写，反正这个值一直报错
    
    </summary>
    
      <category term="IT技术 Linux" scheme="http://hexo.neroxps.cn/categories/IT%E6%8A%80%E6%9C%AF-Linux/"/>
    
    
      <category term="Zabbix" scheme="http://hexo.neroxps.cn/tags/Zabbix/"/>
    
  </entry>
  
  <entry>
    <title>使用 Docker 部署 Zabbix 3.2 记录</title>
    <link href="http://hexo.neroxps.cn/2017/07/01/Zabbix-Installation-Docker/"/>
    <id>http://hexo.neroxps.cn/2017/07/01/Zabbix-Installation-Docker/</id>
    <published>2017-06-30T16:00:00.000Z</published>
    <updated>2017-07-19T12:47:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Zabbix-搭建文档"><a href="#Zabbix-搭建文档" class="headerlink" title="Zabbix 搭建文档"></a>Zabbix 搭建文档</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>计划使用 docker 搭建 Zabbix 监控系统。</p>
<h2 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h2><p>参考 <a href="https://yeasy.gitbooks.io/docker_practice/content/install/ubuntu.html" target="_blank" rel="external">Ubuntu、Debian 系列安装 Docker</a></p>
<h2 id="部署-Mariadb-Server"><a href="#部署-Mariadb-Server" class="headerlink" title="部署 Mariadb-Server"></a>部署 Mariadb-Server</h2><h3 id="一、建立数据库本地目录"><a href="#一、建立数据库本地目录" class="headerlink" title="一、建立数据库本地目录"></a>一、建立数据库本地目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir -p ~/zabbix/database/mysql</div><div class="line">mkdir ~/zabbix/database/conf.d</div></pre></td></tr></table></figure>
<h3 id="二、运行-Mariadb-Server-Docker"><a href="#二、运行-Mariadb-Server-Docker" class="headerlink" title="二、运行 Mariadb-Server Docker"></a>二、运行 Mariadb-Server Docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">docker run --name zabbix-db \</div><div class="line">--restart=always \</div><div class="line">-e MYSQL_ROOT_PASSWORD=<span class="string">'mysql_root_password'</span> \</div><div class="line">-e MYSQL_DATABASE=zabbix \</div><div class="line">-e MYSQL_USER=zabbix \</div><div class="line">-e MYSQL_PASSWORD=zabbix \</div><div class="line">-v /home/nero/zabbix/database/mysql:/var/lib/mysql \</div><div class="line">-v /home/nero/zabbix/database/conf.d:/etc/mysql/conf.d \</div><div class="line">-d mariadb</div></pre></td></tr></table></figure>
<blockquote>
<p>这里会产生一个问题，由于默认的 mariadb 是使用<code>latin1</code>字符集来创建数据库，这时候我们在 Zabbix 录入中文字符的时候会导致出错，故此需要进入 mariadb-docker 内删除新建好的<code>zabbix</code>数据库，再使用<code>utf8</code>新建数据库。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ docker <span class="built_in">exec</span> -it zabbix-db mysql -uroot -p<span class="string">'mysql_root_password'</span></div><div class="line">MariaDB [(none)]&gt; drop database zabbix;</div><div class="line">MariaDB [(none)]&gt; create database zabbix default charset utf8;</div></pre></td></tr></table></figure>
<p>此时，数据库已经以 utf8 新建好了。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">MariaDB [(none)]&gt; show create database zabbix;</div><div class="line">+----------+-----------------------------------------------------------------+</div><div class="line">| Database | Create Database                                                 |</div><div class="line">+----------+-----------------------------------------------------------------+</div><div class="line">| zabbix   | CREATE DATABASE `zabbix` /*!40100 DEFAULT CHARACTER SET utf8 */ |</div><div class="line">+----------+-----------------------------------------------------------------+</div><div class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)</div><div class="line"></div><div class="line">MariaDB [(none)]&gt;quit</div></pre></td></tr></table></figure>
<blockquote>
<p>2017年07月15日更新<br>怪自己看文档不仔细，今天扒 zabbix 的部署文档发现，我应该运行 mariadb 容器的时候就要定义数据库字符编码。<br><a href="https://www.zabbix.com/documentation/3.2/manual/installation/containers" target="_blank" rel="external">Zabbix Documentation 3.2-5 Installation from containers</a></p>
</blockquote>
<p><strong>注意，这里我是使用 mariadb，和 zabbix 官方文档使用是 mysql 的 docker，参数会有所不同。</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">docker run --name zabbix-db \</div><div class="line">--restart=always \</div><div class="line">-e MYSQL_ROOT_PASSWORD=&apos;mysql_root_password&apos; \</div><div class="line">-e MYSQL_DATABASE=zabbix \</div><div class="line">-e MYSQL_USER=zabbix \</div><div class="line">-e MYSQL_PASSWORD=zabbix \</div><div class="line">-v /home/nero/zabbix/database/mysql:/var/lib/mysql \</div><div class="line">-v /home/nero/zabbix/database/conf.d:/etc/mysql/conf.d \</div><div class="line">-d mariadb --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci</div></pre></td></tr></table></figure>
<h2 id="部署-Zabbix-Server-MySQL-Docker"><a href="#部署-Zabbix-Server-MySQL-Docker" class="headerlink" title="部署 Zabbix-Server-MySQL Docker"></a>部署 Zabbix-Server-MySQL Docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">docker run --name zabbix-server \</div><div class="line">--link zabbix-db:mysql-server \</div><div class="line">--restart=always \</div><div class="line">-e MYSQL_USER=zabbix \</div><div class="line">-e MYSQL_PASSWORD=zabbix \</div><div class="line">-p 10051:10051 \</div><div class="line">-d zabbix/zabbix-server-mysql</div></pre></td></tr></table></figure>
<h2 id="部署-Zabbix-WEB-nginx-MySQL-Docerk"><a href="#部署-Zabbix-WEB-nginx-MySQL-Docerk" class="headerlink" title="部署 Zabbix-WEB-nginx-MySQL Docerk"></a>部署 Zabbix-WEB-nginx-MySQL Docerk</h2><p>由于 Zabbix 图形字体中文显示会产生乱码，故此需要将中文字体放入 Zabbix 的 WEB 目录中，并修改一个 php 文件才可以修正中文乱码问题。</p>
<h3 id="一、下载官方-zabbix-web-nginx-mysql-镜像"><a href="#一、下载官方-zabbix-web-nginx-mysql-镜像" class="headerlink" title="一、下载官方 zabbix-web-nginx-mysql 镜像"></a>一、下载官方 zabbix-web-nginx-mysql 镜像</h3><p><code>docker pull zabbix-web-nginx-mysql</code></p>
<h3 id="二、上传中文字体-simhei-ttf（本例使用黑体字体）"><a href="#二、上传中文字体-simhei-ttf（本例使用黑体字体）" class="headerlink" title="二、上传中文字体 simhei.ttf（本例使用黑体字体）"></a>二、上传中文字体 simhei.ttf（本例使用黑体字体）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir ~/zabbix-web-docker-cn</div><div class="line">rz <span class="comment">#使用 rz 命令传输文件，如何传输本文档不体现</span></div></pre></td></tr></table></figure>
<h3 id="三、编写-Dockerfile-文件"><a href="#三、编写-Dockerfile-文件" class="headerlink" title="三、编写 Dockerfile 文件"></a>三、编写 Dockerfile 文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">cat &lt;&lt;EOF | tee ~/zabbix-web-docker-cn/Dockerfile</div><div class="line">FROM zabbix/zabbix-web-nginx-mysql</div><div class="line">COPY simhei.ttf /usr/share/zabbix/fonts</div><div class="line">EXPOSE 80/TCP 443/TCP</div><div class="line">WORKDIR /usr/share/zabbix</div><div class="line">RUN sed -i <span class="string">'s/graphfont/simhei/g'</span> ./include/defines.inc.php</div><div class="line">VOLUME [<span class="string">"/etc/ssl/nginx"</span>]</div><div class="line">CMD [<span class="string">"/run_zabbix_component.sh"</span>, <span class="string">"frontend"</span>, <span class="string">"mysql"</span>, <span class="string">"nginx"</span>]</div><div class="line">EOF</div></pre></td></tr></table></figure>
<h3 id="四、构建镜像"><a href="#四、构建镜像" class="headerlink" title="四、构建镜像"></a>四、构建镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">$ docker build -t nero/zabbix-web-nginx-mysql .</div><div class="line"></div><div class="line">Sending build context to Docker daemon  9.755MB</div><div class="line">Step 1/7 : FROM zabbix/zabbix-web-nginx-mysql</div><div class="line"> ---- 256dc87663d0</div><div class="line">Step 2/7 : COPY simhei.ttf /usr/share/zabbix/fonts</div><div class="line"> ---- 5743f1ab270b</div><div class="line">Removing intermediate container 78381e68fbbe</div><div class="line">Step 3/7 : EXPOSE 80/TCP 443/TCP</div><div class="line"> ---- Running <span class="keyword">in</span> 0c6786e828fc</div><div class="line"> ---- d24d892858a6</div><div class="line">Removing intermediate container 0c6786e828fc</div><div class="line">Step 4/7 : WORKDIR /usr/share/zabbix</div><div class="line"> ---- dc7c79f00b1c</div><div class="line">Removing intermediate container e6975c59dbc8</div><div class="line">Step 5/7 : RUN sed -i <span class="string">'s/graphfont/simhei/g'</span> ./include/defines.inc.php</div><div class="line"> ---- Running <span class="keyword">in</span> 27e5405d3ca7</div><div class="line"> ---- 6ca4c53d4b51</div><div class="line">Removing intermediate container 27e5405d3ca7</div><div class="line">Step 6/7 : VOLUME /etc/ssl/nginx</div><div class="line"> ---- Running <span class="keyword">in</span> 8f28060ed68e</div><div class="line"> ---- 2b4307bc9c9a</div><div class="line">Removing intermediate container 8f28060ed68e</div><div class="line">Step 7/7 : CMD /run_zabbix_component.sh frontend mysql nginx</div><div class="line"> ---- Running <span class="keyword">in</span> 184feb09f237</div><div class="line"> ---- b6da55ae29b6</div><div class="line">Removing intermediate container 184feb09f237</div><div class="line">Successfully built b6da55ae29b6</div><div class="line">Successfully tagged nero/zabbix-web-nginx-mysql:latest</div></pre></td></tr></table></figure>
<h3 id="五、运行镜像"><a href="#五、运行镜像" class="headerlink" title="五、运行镜像"></a>五、运行镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">docker run --name zabbix-web \</div><div class="line">--link zabbix-db:mysql-server \</div><div class="line">--link zabbix-server:zabbix-server \</div><div class="line">-e MYSQL_USER=zabbix \</div><div class="line">-e MYSQL_PASSWORD=zabbix \</div><div class="line">-e PHP_TZ=<span class="string">'Asia/Hong_Kong'</span> \</div><div class="line">-e ZBX_SERVER_NAME=<span class="string">'Rslnc monit Server'</span> \</div><div class="line">-p 80:80 \</div><div class="line">--restart=always \</div><div class="line">-d nero/zabbix-web-nginx-mysql</div></pre></td></tr></table></figure>
<h2 id="遇到的坑"><a href="#遇到的坑" class="headerlink" title="遇到的坑"></a>遇到的坑</h2><h3 id="数据库编码格式导致中文输入字符无法保存"><a href="#数据库编码格式导致中文输入字符无法保存" class="headerlink" title="数据库编码格式导致中文输入字符无法保存"></a>数据库编码格式导致中文输入字符无法保存</h3><p>由于之前使用的 docker 创建的 zabbix 数据库默认是以<code>latin1</code>字符编码创建的，故此在问题输入『消息』的时候会报字符编码错误。</p>
<p>那么数据库里面已经有原始数据存在，所以我需要将数据导出，再将数据转换成<code>utf8</code>编码。</p>
<blockquote>
<p>参考：# <a href="http://www.cnblogs.com/iloveyoucc/p/4763244.html" target="_blank" rel="external">MySQL数据库从GBK转换到UTF-8最简单解决方案（也适用于其它编码转换）</a></p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ docker <span class="built_in">exec</span> -it zabbix-db bash</div><div class="line"><span class="comment"># mysqldump -d -u root -p'mysql_root_password' zabbix &gt; /etc/mysql/conf.d/zabbix.sql</span></div><div class="line"><span class="comment"># mysqldump --default-character-set=utf8 -t -u root -p'mysql_root_password' zabbix &gt; /etc/mysql/conf.d/zabbix-data.sql</span></div><div class="line"><span class="comment"># sed -i 's/latin1/utf8/g' /etc/mysql/conf.d/zabbix.sql</span></div><div class="line"><span class="comment"># mysql -uroot -p'mysql_root_password'</span></div><div class="line">MariaDB [(none)]&gt; drop database zabbix;</div><div class="line">MariaDB [(none)]&gt; create database zabbix default charset utf8;</div><div class="line">MariaDB [(none)]&gt; use zabbix;</div><div class="line">MariaDB [zabbix]&gt; <span class="built_in">source</span> /etc/mysql/conf.d/zabbix.sql</div><div class="line">MariaDB [zabbix]&gt; <span class="built_in">source</span> /etc/mysql/conf.d/zabbix-data.sql</div><div class="line">MariaDB [zabbix]&gt; quit</div><div class="line"><span class="comment"># exit</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Zabbix-搭建文档&quot;&gt;&lt;a href=&quot;#Zabbix-搭建文档&quot; class=&quot;headerlink&quot; title=&quot;Zabbix 搭建文档&quot;&gt;&lt;/a&gt;Zabbix 搭建文档&lt;/h1&gt;&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;head
    
    </summary>
    
      <category term="IT技术 Linux" scheme="http://hexo.neroxps.cn/categories/IT%E6%8A%80%E6%9C%AF-Linux/"/>
    
    
      <category term="Zabbix" scheme="http://hexo.neroxps.cn/tags/Zabbix/"/>
    
  </entry>
  
  <entry>
    <title>记 GoodERP 部署</title>
    <link href="http://hexo.neroxps.cn/2017/06/15/GoodERP-Setup-Debian-8/"/>
    <id>http://hexo.neroxps.cn/2017/06/15/GoodERP-Setup-Debian-8/</id>
    <published>2017-06-14T16:00:00.000Z</published>
    <updated>2017-07-19T12:47:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><ul>
<li><a href="www.gooderp.org">GoodERP 官方网址</a></li>
<li><a href="https://github.com/osbzr/gooderp_addons" target="_blank" rel="external">GoodERP GitHub</a> </li>
<li><a href="https://github.com/osbzr/base" target="_blank" rel="external">GoodERP 核心基于 Odoo 项目</a></li>
<li><a href="http://best.gooderp.org/" target="_blank" rel="external">GoodERP 论坛</a></li>
</ul>
<h1 id="部署环境"><a href="#部署环境" class="headerlink" title="部署环境"></a>部署环境</h1><ul>
<li>系统：Debian 8 最小化安装</li>
<li>内存：4G </li>
<li>硬盘：40G </li>
</ul>
<blockquote>
<p>参考官方论坛：<a href="http://best.gooderp.org/d/7" target="_blank" rel="external">Debian\ubuntu上源码安装GoodERP</a></p>
</blockquote>
<h2 id="GoodERP-需要准备"><a href="#GoodERP-需要准备" class="headerlink" title="GoodERP 需要准备"></a>GoodERP 需要准备</h2><p>由于 GoodERP 是基于 Odoo 做的二次开发，故此可以参考 Odoo 的源码搭建文档。</p>
<ul>
<li><strong>Python 2.7</strong></li>
<li><strong>PostgreSQL</strong></li>
<li><strong>Nodejs</strong></li>
</ul>
<h3 id="切换国内163源"><a href="#切换国内163源" class="headerlink" title="切换国内163源"></a>切换国内163源</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">cat &lt;&lt;EOF | sudo tee /etc/apt/sources.list</div><div class="line">deb http://mirrors.163.com/debian/ jessie main non-free contrib</div><div class="line">deb http://mirrors.163.com/debian/ jessie-updates main non-free contrib</div><div class="line">deb http://mirrors.163.com/debian/ jessie-backports main non-free contrib</div><div class="line">deb-src http://mirrors.163.com/debian/ jessie main non-free contrib</div><div class="line">deb-src http://mirrors.163.com/debian/ jessie-updates main non-free contrib</div><div class="line">deb-src http://mirrors.163.com/debian/ jessie-backports main non-free contrib</div><div class="line">deb http://mirrors.163.com/debian-security/ jessie/updates main non-free contrib</div><div class="line">deb-src http://mirrors.163.com/debian-security/ jessie/updates main non-free contrib</div><div class="line">EOF</div><div class="line">sudo apt update &amp;&amp; sudo apt -y upgrade</div></pre></td></tr></table></figure>
<h3 id="安装必要的软件"><a href="#安装必要的软件" class="headerlink" title="安装必要的软件"></a>安装必要的软件</h3><blockquote>
<p><strong>注意：由于使用了 nodesource.com 的安装脚本，建议搭建翻墙环境运行以下命令</strong></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">sudo apt install -y curl wget git vim unzip python python-setuptools\</div><div class="line">&amp;&amp; curl -sL https://bootstrap.pypa.io/get-pip.py | sudo -E python - \</div><div class="line">&amp;&amp; curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash - \</div><div class="line">&amp;&amp; sudo apt-get install -y nodejs \</div><div class="line">&amp;&amp; sudo npm config set registry https://registry.npm.taobao.org \</div><div class="line">&amp;&amp; sudo npm install -g less \</div><div class="line">&amp;&amp; sudo apt-get -y build-dep python-lxml \</div><div class="line">&amp;&amp; sudo apt-get -y install libldap2-dev libsasl2-dev \</div><div class="line">&amp;&amp; curl -o wkhtmltox.deb -SL http://nightly.odoo.com/extra/wkhtmltox-0.12.1.2_linux-jessie-amd64.deb \</div><div class="line">&amp;&amp; echo &apos;40e8b906de658a2221b15e4e8cd82565a47d7ee8 wkhtmltox.deb&apos; | sha1sum -c - \</div><div class="line">&amp;&amp; sudo dpkg --force-depends -i wkhtmltox.deb \</div><div class="line">&amp;&amp; sudo apt-get -y install -f --no-install-recommends</div></pre></td></tr></table></figure>
<h1 id="PostgreSQL-安装"><a href="#PostgreSQL-安装" class="headerlink" title="PostgreSQL 安装"></a>PostgreSQL 安装</h1><h2 id="通过-apt-get-安装-PostgreSQL"><a href="#通过-apt-get-安装-PostgreSQL" class="headerlink" title="通过 apt-get 安装 PostgreSQL"></a>通过 apt-get 安装 PostgreSQL</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install -y postgresql postgresql-server-dev-9.4</div></pre></td></tr></table></figure>
<h2 id="配置-PostgreSQL"><a href="#配置-PostgreSQL" class="headerlink" title="配置 PostgreSQL"></a>配置 PostgreSQL</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo -u postgres createuser --createdb --no-createrole --no-superuser --pwprompt good #创建数据库用户good，输入两次密码good</div></pre></td></tr></table></figure>
<h1 id="GoodERP-安装"><a href="#GoodERP-安装" class="headerlink" title="GoodERP 安装"></a>GoodERP 安装</h1><h2 id="步骤1：新建-good-用户"><a href="#步骤1：新建-good-用户" class="headerlink" title="步骤1：新建 good 用户"></a>步骤1：新建 good 用户</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo adduser good</div><div class="line">sudo su good</div><div class="line">cd ~</div></pre></td></tr></table></figure>
<h2 id="步骤2：从-Github-中下载-GoodERP-源代码"><a href="#步骤2：从-Github-中下载-GoodERP-源代码" class="headerlink" title="步骤2：从 Github 中下载 GoodERP 源代码"></a>步骤2：从 Github 中下载 GoodERP 源代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git clone http://github.com/osbzr/gooderp_addons </div><div class="line">git clone http://github.com/osbzr/base</div><div class="line">exit</div></pre></td></tr></table></figure>
<h2 id="步骤3：修改-pip-源为国内源（豆瓣）"><a href="#步骤3：修改-pip-源为国内源（豆瓣）" class="headerlink" title="步骤3：修改 pip 源为国内源（豆瓣）"></a>步骤3：修改 pip 源为国内源（豆瓣）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo mkdir ~/.pip</div><div class="line">cat &lt;&lt;EOF | sudo tee ~/.pip/pip.conf</div><div class="line">[global]</div><div class="line">index-url = https://pypi.douban.com/simple</div><div class="line">EOF</div></pre></td></tr></table></figure>
<h2 id="步骤4：使用-pip-安装-GoodERP-的-Python-模块（这里的过程会很漫长）"><a href="#步骤4：使用-pip-安装-GoodERP-的-Python-模块（这里的过程会很漫长）" class="headerlink" title="步骤4：使用 pip 安装 GoodERP 的 Python 模块（这里的过程会很漫长）"></a>步骤4：使用 pip 安装 GoodERP 的 Python 模块（这里的过程会很漫长）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo pip install -r base/requirements.txt -i https://pypi.douban.com/simple \</div><div class="line">&amp;&amp; sudo pip install simplejson httplib2 -i https://pypi.douban.com/simple</div></pre></td></tr></table></figure>
<h1 id="配置-GoodERP"><a href="#配置-GoodERP" class="headerlink" title="配置 GoodERP"></a>配置 GoodERP</h1><h2 id="编辑-gooderp-conf"><a href="#编辑-gooderp-conf" class="headerlink" title="编辑 ~/gooderp.conf"></a>编辑 ~/gooderp.conf</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">cat &lt;&lt;EOF | tee ~/gooderp.conf</div><div class="line">[options]</div><div class="line">db_user = good</div><div class="line">db_password = good</div><div class="line">addons_path = /home/good/gooderp_addons</div><div class="line">logfile = /home/good/gooderp.log</div><div class="line">EOF</div></pre></td></tr></table></figure>
<h2 id="开机启动"><a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h2><h3 id="1-创建服务文件"><a href="#1-创建服务文件" class="headerlink" title="1. 创建服务文件"></a>1. 创建服务文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">cat &lt;&lt;EOF | sudo tee /etc/systemd/system/gooderp.service </div><div class="line">[Unit]</div><div class="line">Description=GoodERP</div><div class="line">Documentation=http://www.gooderp.org/</div><div class="line">After=network.target postgresql.service</div><div class="line"></div><div class="line">[Service]</div><div class="line"># Ubuntu/Debian convention:</div><div class="line">Type=simple</div><div class="line">User=good</div><div class="line">ExecStart=/usr/bin/python /home/good/base/odoo-bin -c /home/good/gooderp.conf</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div><div class="line">EOF</div></pre></td></tr></table></figure>
<h3 id="2-让配置文件生效"><a href="#2-让配置文件生效" class="headerlink" title="2. 让配置文件生效"></a>2. 让配置文件生效</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo systemctl daemon-reload</div></pre></td></tr></table></figure>
<h3 id="3-设置开机启动"><a href="#3-设置开机启动" class="headerlink" title="3.设置开机启动"></a>3.设置开机启动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo systemctl enable gooderp.service</div><div class="line">sudo systemctl enable postgresql.service</div><div class="line">sudo systemctl start gooderp.service</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;www.gooderp.org&quot;&gt;GoodERP 官方网址&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;htt
    
    </summary>
    
      <category term="Linux" scheme="http://hexo.neroxps.cn/categories/Linux/"/>
    
    
      <category term="ERP" scheme="http://hexo.neroxps.cn/tags/ERP/"/>
    
      <category term="Linux" scheme="http://hexo.neroxps.cn/tags/Linux/"/>
    
      <category term="GoodERP" scheme="http://hexo.neroxps.cn/tags/GoodERP/"/>
    
      <category term="Odoo" scheme="http://hexo.neroxps.cn/tags/Odoo/"/>
    
  </entry>
  
  <entry>
    <title>给 Seafile 部署 onlyoffice</title>
    <link href="http://hexo.neroxps.cn/2017/05/27/%E7%BB%99_Seafile_%E9%83%A8%E7%BD%B2_onlyoffice/"/>
    <id>http://hexo.neroxps.cn/2017/05/27/给_Seafile_部署_onlyoffice/</id>
    <published>2017-05-26T16:00:00.000Z</published>
    <updated>2017-07-19T12:47:36.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h3><blockquote>
<p>参考 <a href="https://www.gitbook.com/book/yeasy/docker_practice/details" target="_blank" rel="external">《Docker 从入门到实践》</a></p>
</blockquote>
<p>我是在 Centos 7下搭建 Seafile，这里使用阿里云的 Centos 7 Docker 安装脚本。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -sSL http://acs-public-mirror.oss-cn-hangzhou.aliyuncs.com/docker-engine/internet | sh -</div></pre></td></tr></table></figure>
<h3 id="给-Docker-添加加速器"><a href="#给-Docker-添加加速器" class="headerlink" title="给 Docker 添加加速器"></a>给 Docker 添加加速器</h3><p>因为 Docker 的镜像服务器是在国外，所以我们给 Docker 添加国内镜像加速器，这里我使用阿里云的镜像加速器，如何申请阿里云的镜像加速器请自行百度。</p>
<p>编辑 /usr/lib/systemd/system/docker.service 找到 <code>ExecStart=/usr/bin/dockerd</code> 改成如下配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ExecStart=/usr/bin/dockerd --registry-mirror=https://xxxxxxxx.mirror.aliyuncs.com</div></pre></td></tr></table></figure>
<p><strong>注：–registry-mirror= 后的网址请修改成阿里云申请的加速器地址</strong></p>
<p>修改后重载 systemd 配置、启动 Docker、设置 Docker 为开机自启动。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">systemctl daemon-reload</div><div class="line">systemctl start docker</div><div class="line">systemctl enable docker</div></pre></td></tr></table></figure>
<h3 id="部署-OnlyOffice-documentserver"><a href="#部署-OnlyOffice-documentserver" class="headerlink" title="部署 OnlyOffice-documentserver"></a>部署 OnlyOffice-documentserver</h3><ul>
<li>构建 OnlyOffice-documentserver 镜像</li>
</ul>
<p>这里，你有两个选择</p>
<ol>
<li>部署官方的 onlyoffice Docker 镜像，但因为官方的 Docker 镜像里没有中文字体，故此显示中文字体上会出现各种异常。</li>
<li>我基于官方的 Docker 镜像制作了一个 Dockerfile <a href="https://github.com/neroxps/Docker-Only-Office-Chinese-font" target="_blank" rel="external">项目地址</a>，只要利用这个 Dockerfile 构建镜像即可。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/neroxps/Docker-Only-Office-Chinese-font.git</div><div class="line">cd Docker-Only-Office-Chinese-font</div><div class="line">docker build -t onlyoffice/chinese .</div></pre></td></tr></table></figure>
<blockquote>
<p>winfont 目录下是 windows 下的中文字体，如果你有其他字体需要，也可以将字体上传到这个目录里面，再构建镜像。</p>
</blockquote>
<p>构建完毕后查看下我们现在的镜像</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@seafile-server Docker-Only-Office-Chinese-font]# docker images</div><div class="line">REPOSITORY                  TAG                 IMAGE ID            CREATED              SIZE</div><div class="line">onlyoffice/chinese          latest              5065553b1240        About a minute ago   1.68GB</div><div class="line">onlyoffice/documentserver   latest              f5ff5f9ec0c4        2 weeks ago          1.41GB</div></pre></td></tr></table></figure>
<p>onlyoffice 的 documentserver 镜像是提供在线编辑服务的，镜像内已包含了 nginx 服务器，支持 80 端口和 443 端口，如果有合法证书，我们可以使用 https 连接。</p>
<blockquote>
<p>onlyoffice-documentserver Docker 使用方法参考 <a href="https://github.com/ONLYOFFICE/Docker-DocumentServer" target="_blank" rel="external">Docker-DocumentServer</a></p>
</blockquote>
<ul>
<li>将证书复制到 onlyoffice 证书目录路径</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#假设当前目录在证书目录下</div><div class="line">mkdir -p /app/onlyoffice/DocumentServer/data/certs</div><div class="line">cp fullchain1.pem /app/onlyoffice/DocumentServer/data/certs/onlyoffice.crt</div><div class="line">cp privkey1.pem /app/onlyoffice/DocumentServer/data/certs/onlyoffice.key</div><div class="line">openssl dhparam -out /app/onlyoffice/DocumentServer/data/certs/dhparam.pem 2048</div></pre></td></tr></table></figure>
<ul>
<li>生成 onlyoffice 日志目录</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir -p /app/onlyoffice/DocumentServer/logs</div></pre></td></tr></table></figure>
<h3 id="运行-OnlyOffice-documentserver"><a href="#运行-OnlyOffice-documentserver" class="headerlink" title="运行 OnlyOffice-documentserver"></a>运行 OnlyOffice-documentserver</h3><p>完成部署后我们就可以运行 OnlyOffice-documentserver 了。</p>
<p>由于我的 Seafile 是用 nginx 部署了 https，443端口已被占用了，大家如果公网 ip 多可以忽略，我是部署在内网，公网是 ADSL，故此只有一个公网 ip，所以 OnlyOffice-documentserver 不能使用 443 端口了。</p>
<ul>
<li>使用 https</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">docker run -itd -p 7443:443 -v /app/onlyoffice/DocumentServer/data:/var/www/onlyoffice/Data \</div><div class="line">-v /app/onlyoffice/DocumentServer/logs:/var/log/onlyoffice \</div><div class="line">--restart=always \</div><div class="line">--name office onlyoffice/chinese</div></pre></td></tr></table></figure>
<ul>
<li>使用 http</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">docker run -itd -p 780:80 -v /app/onlyoffice/DocumentServer/data:/var/www/onlyoffice/Data \</div><div class="line">-v /app/onlyoffice/DocumentServer/logs:/var/log/onlyoffice \</div><div class="line">--restart=always \</div><div class="line">--name office onlyoffice/chinese</div></pre></td></tr></table></figure>
<p>这时候我们可以运行 <code>docker logs office</code> 来观察运行情况。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[root@seafile-server certs]# docker logs office</div><div class="line">guest</div><div class="line"> * Starting PostgreSQL 9.3 database server                               [ OK ] </div><div class="line"> * Starting message broker rabbitmq-server                               [ OK ] </div><div class="line">Starting redis-server: redis-server.</div><div class="line">Starting supervisor: supervisord.</div><div class="line">Generating AllFonts.js, please wait...Done</div><div class="line">onlyoffice-documentserver:docservice: stopped</div><div class="line">onlyoffice-documentserver:docservice: started</div><div class="line">onlyoffice-documentserver:converter: stopped</div><div class="line">onlyoffice-documentserver:converter: started</div></pre></td></tr></table></figure>
<p>通过 web 访问 <a href="https://demo.domain.com:7443" target="_blank" rel="external">https://demo.domain.com:7443</a> 可以看到 『Document Server is running』表明服务已经正常运行了。</p>
<h3 id="配置-Seafile-6-1-0，让其使用-onlyoffice"><a href="#配置-Seafile-6-1-0，让其使用-onlyoffice" class="headerlink" title="配置 Seafile 6.1.0，让其使用 onlyoffice"></a>配置 Seafile 6.1.0，让其使用 onlyoffice</h3><blockquote>
<p>参考 <a href="https://manual.seafile.com/deploy/only_office.html" target="_blank" rel="external">Seafile Manual/Only Office</a></p>
</blockquote>
<ul>
<li>编辑 seahub_settings.py 加入下方配置</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># Enable Only Office</div><div class="line">ENABLE_ONLYOFFICE = True</div><div class="line">VERIFY_ONLYOFFICE_CERTIFICATE = True</div><div class="line">ONLYOFFICE_APIJS_URL = &apos;https://demo.domain.com:7443/web-apps/apps/api/documents/api.js&apos;</div><div class="line">ONLYOFFICE_FILE_EXTENSION = (&apos;doc&apos;, &apos;docx&apos;, &apos;ppt&apos;, &apos;pptx&apos;, &apos;xls&apos;, &apos;xlsx&apos;, &apos;odt&apos;, &apos;fodt&apos;, &apos;odp&apos;, &apos;fodp&apos;, &apos;ods&apos;, &apos;fods&apos;)</div></pre></td></tr></table></figure>
<p><strong>注1：其中 <code>VERIFY_ONLYOFFICE_CERTIFICATE</code> 选项如果 onlyoffice 使用了 https 的话可以选择更改为 True 提高安全性，如果是使用 http 协议则改为 False</strong></p>
<p><strong>注2：如果没使用 memcached 的话，还需要执行 <code>rm /tmp/seahub_cached/</code>清空缓存</strong></p>
<ul>
<li>重启 seahub 使得配置生效</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#假设当前在 seafile-server-latest 目录下</div><div class="line">rm -f ../conf/seahub_settings.pyc</div><div class="line">./seahub.sh restart-fastcgi</div></pre></td></tr></table></figure>
<p>尽情享受吧！</p>
<h3 id="使用体会"><a href="#使用体会" class="headerlink" title="使用体会"></a>使用体会</h3><p>onlyoffice 还是不错的，加载速度快，界面友善，我与同事测试过，多人同时编辑一个文件的时候毫无问题。</p>
<p>但是它目前缺点也十分明显，界面没有中文语言，对中文支持也不好，例如我们在 word 里面的字体叫『等线』，但是 onlyoffice 里面叫 『DengXian』，有时候它并不能识别，故此会识别成默认英文字体，导致一堆口口。</p>
<p>据说 Seafile 在端午节后会着重优化 onlyoffice 的体验，我们期待吧。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装-Docker&quot;&gt;&lt;a href=&quot;#安装-Docker&quot; class=&quot;headerlink&quot; title=&quot;安装 Docker&quot;&gt;&lt;/a&gt;安装 Docker&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;参考 &lt;a href=&quot;https://www.gitbo
    
    </summary>
    
      <category term="Seafile" scheme="http://hexo.neroxps.cn/categories/Seafile/"/>
    
    
      <category term="seafile" scheme="http://hexo.neroxps.cn/tags/seafile/"/>
    
      <category term="onlyoffice" scheme="http://hexo.neroxps.cn/tags/onlyoffice/"/>
    
  </entry>
  
  <entry>
    <title>最近小记（2017年04月18日）</title>
    <link href="http://hexo.neroxps.cn/2017/04/18/2017-04-18-blog/"/>
    <id>http://hexo.neroxps.cn/2017/04/18/2017-04-18-blog/</id>
    <published>2017-04-17T16:00:00.000Z</published>
    <updated>2017-07-19T12:47:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>开年至今，一直非常忙碌，过年前后将老婆公司送的华硕 VM510LI 装成黑苹果，并逐步完善了。</p>
<p>但是好景不长，更新 macOS 10.12.4 正式版后睡眠唤醒屏幕无显示，仅有背光。郁闷了我很久，该情况在10.12.3也出现，后来更换显卡 ig 解决的，现在又出现，我将情况发到 tonymacx86 请教 RehabMan 大神（<a href="https://www.tonymacx86.com/threads/macos10-12-4-wake-up-black-screen-only-backlight.218828/" target="_blank" rel="external">macOS10.12.4 Wake up black screen(Only backlight)</a>），谁知道大神给我说，我的 hotpatch 太复杂了，他也没空调试，让我使用静态方式来修改 ACPI。</p>
<p>只是最近工作都比较多，屁事一堆，今天终于比较有空，继续研究下怎么修复这个问题。（然而既然有空搞，为何浪费时间来写这篇废话呢？xD）</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;开年至今，一直非常忙碌，过年前后将老婆公司送的华硕 VM510LI 装成黑苹果，并逐步完善了。&lt;/p&gt;
&lt;p&gt;但是好景不长，更新 macOS 10.12.4 正式版后睡眠唤醒屏幕无显示，仅有背光。郁闷了我很久，该情况在10.12.3也出现，后来更换显卡 ig 解决的，现在又
    
    </summary>
    
      <category term="日记" scheme="http://hexo.neroxps.cn/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="日记" scheme="http://hexo.neroxps.cn/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>使二合一声卡耳机麦克风生效整理</title>
    <link href="http://hexo.neroxps.cn/2017/03/13/Combo-Audio-Ext-Mic/"/>
    <id>http://hexo.neroxps.cn/2017/03/13/Combo-Audio-Ext-Mic/</id>
    <published>2017-03-12T16:00:00.000Z</published>
    <updated>2017-07-20T00:35:23.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>自我这台华硕 VM510LI 安装黑苹果以来一直留下两个问题未解决，一是 VGA，二是耳机麦克风无输入。今天终于在远景坛友关云长羽帖子的帮助下解决了麦克风无输入的问题。</p>
<blockquote>
<p>帖子链接：<a href="http://bbs.pcbeta.com/viewthread-1734702-1-1.html" target="_blank" rel="external">【声卡驱动完善进阶】——关于耳机杂音解决办法及三节点信息驱动双麦克风的猜想</a></p>
</blockquote>
<h1 id="修改-AppleALC"><a href="#修改-AppleALC" class="headerlink" title="修改 AppleALC"></a>修改 AppleALC</h1><h2 id="过程整理"><a href="#过程整理" class="headerlink" title="过程整理"></a>过程整理</h2><p>根据关云长羽的帖子，启发了我，我是 ALC233，和他的声卡一摸一样，但是我们两个的 Codec 并不一样，他内置麦克风有效节点是 Node 0x1a 而我的是 Node 0x1b，故此我并不可以直接使用他的驱动以及方法。</p>
<p>后来我看他的过程，是使用 layout13，他 layout13 本来就有 LineIn 这个线路输入节点，而我并没有，Pathmap 里面也没有关于 0x19 （25）节点的路径，故此我声卡要耳机麦克风生效的话，必须使用符合以下条件。</p>
<ul>
<li>layout4.xml 设定 Inputs 的 Mic 和 LineIn。</li>
<li>添加 LineIn 的 MuteGPIO（如果你的节点是 VREF_80 或者其他数值的话）</li>
<li>PlatformsX.xml 中需要添加 Node 0X19 的有效路径。</li>
<li>PinConfigData.kext 里添加 Node 0x19的 ConfigData。</li>
</ul>
<blockquote>
<p>关于 LineIn 这个节点查找，为何是0X19，关云长羽原贴上有说，而我猜测是不是和修改 Pin Widget Control 后耳机正常无杂音的节点有关系？关于耳机杂音问题参考我之前写的帖子：<a href="http://bbs.pcbeta.com/viewthread-1733228-1-1.html" target="_blank" rel="external">http://bbs.pcbeta.com/viewthread-1733228-1-1.html</a></p>
</blockquote>
<h2 id="layout4-xml"><a href="#layout4-xml" class="headerlink" title="layout4.xml"></a>layout4.xml</h2><p><img src="/2017/03/13/Combo-Audio-Ext-Mic/Combo-Audio-Ext-Mic-01.png" alt="layout4配置"></p>
<ul>
<li>MuteGPIO 由 Noid 0x19 的VREF_80 0x50+0x0100+0x19 &gt; 1342242841（我的 Node 节点是 VREF_HIZ，但是从 ID3 和 ID13 提取的都有这个，当时我不确定是否这个值会影响结果，故此我也加进去了）</li>
<li>SignalProcessing 可以放在 Mic，也可以放在 LineIn，放在那里那里就有麦克风降噪。详细可以看看紫米的帖子<strong><a href="http://bbs.pcbeta.com/viewthread-623626-1-1.html" target="_blank" rel="external">完整製作仿冒 LegacyHDA.kext (12/16)</a></strong></li>
</ul>
<h2 id="Platforms4-xml"><a href="#Platforms4-xml" class="headerlink" title="Platforms4.xml"></a>Platforms4.xml</h2><p>在 AppleALC 里面，ALC233 ID4 的 PathMaps 是没有 Node 0x19 的路径的，因为 Node 19在我们的 Codec 里面根本不是有效节点。</p>
<p>但既然关云长羽说尝试一下将 Node 0x19这个当成有效的 LineIn 节点来做，那么我就直接按照仿冒贴的方法，找到 0X19的 PathMaps。（怎么找请看上面说到的紫米帖）</p>
<p><img src="/2017/03/13/Combo-Audio-Ext-Mic/Combo-Audio-Ext-Mic-02.png" alt="PathMaps配置"></p>
<h2 id="PinConfigData-kext-添加-Node-0X19-的-ConfigData"><a href="#PinConfigData-kext-添加-Node-0X19-的-ConfigData" class="headerlink" title="PinConfigData.kext 添加 Node 0X19 的 ConfigData"></a>PinConfigData.kext 添加 Node 0X19 的 ConfigData</h2><p>这里我偷了下懒，直接从 ID3 和 ID13 复制了 019开头的四组节点信息过来，因为同款声卡，Codec 是一样的，既然前人已经写了数据，那么应该差不了多少。</p>
<p>提取 AppleALC ID4 的 ConfigData</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">01471C10 01471D00 01471E17 01471F90 </div><div class="line">01B71C20 01B71D00 01B71EA0 01B71F90 </div><div class="line">02171C30 02171D10 02171E21 02171F01 </div><div class="line">01470C02</div></pre></td></tr></table></figure>
<p>AppleALC 提取的 ID13</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">01471C10 01471D00 01471E17 01471F99 </div><div class="line">02171C20 02171D10 02171E21 02171F03 </div><div class="line">01A71C30 01A71D01 01A71EA0 01A71F99 </div><div class="line">01971C40 01971D10 01971E81 01971F03</div></pre></td></tr></table></figure>
<p>后来我将 Node 0X19 从 ID13提取出来，然后放入 ID4 的 ConfigData 中，最终的 ConfigData（其中我将最后一个数字改成1，并不是必须，我看紫米的帖子后瞎折腾的，后来成功后发现可用，也就留着没改了。）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">01471C10 01471D00 01471E17 01471F90 </div><div class="line">01B71C10 01B71D00 01B71EA0 01B71F90 </div><div class="line">02171C30 02171D10 02171E21 02171F01 </div><div class="line">01971C20 01971D10 01971E81 01971F01</div></pre></td></tr></table></figure>
<h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p>OK 修改好 AppleALC 编译后，测试一下关云长羽的方法，的确成功了，线路输入有了，而且也有电频输入。</p>
<p>可是，发现了一个问题，第二次插入后再也无法切换回线路输入，而且耳机插入后，又像以前那样只有背景声了。（感觉问题更糟糕了）</p>
<p>用 EAPD-Codec-Commander-master RM 项目的 widget_dump.sh 查看，发现一开机因为我用了脚本，开机是设置 0X19为24，故此第一次插入是正常的，然而拔出后，0X19变成02了，而 0X1B（内置麦克风节点）变成24，再插入耳机，这两个数字不会变了，一直是那样。</p>
<p>后来反复研究无果，编译 AppleALC，修改了无数遍 layout 和 Pathmap，折腾的死去活来的。</p>
<p>第二天，复习关云长羽的帖子，发现他提到的 ALCPlugFix 帖子，我又去看了下这个项目的代码和关云长羽提到的 main.m 文件源码部分，不会编程，但是我发现了一个比较有趣的地方。</p>
<p><img src="/2017/03/13/Combo-Audio-Ext-Mic/Combo-Audio-Ext-Mic-03.png" alt="main.m"></p>
<h1 id="使用-ALCPlugFix-解决耳机插入拔出的-Pin-Widget-Control-设定"><a href="#使用-ALCPlugFix-解决耳机插入拔出的-Pin-Widget-Control-设定" class="headerlink" title="使用 ALCPlugFix 解决耳机插入拔出的 Pin Widget Control 设定"></a>使用 ALCPlugFix 解决耳机插入拔出的 Pin Widget Control 设定</h1><p>ALCPlugFix 这个程序，作者没有写任何的说明，我也是从关云长羽的帖子得知这个程序。</p>
<p><strong><a href="https://github.com/goodwin/ALCPlugFix" target="_blank" rel="external">ALCPlugFix 项目地址</a></strong></p>
<p>后来发现个程序会检测耳机的插入和拔出情况，根据插入或者拔出，可以运行 Shell。</p>
<p>我现在需要的就是：</p>
<p>插入耳机的时候 Node 0x19 Pin Widget Control 为 24，Node 0X1B Pin Widget Control 为 02。</p>
<p>拔出耳机时候 Node 0x19 Pin Widget Control 为 02，Node 0X1B Pin Widget Control 为 24。</p>
<p>最终我根据上章节结果里截图的设置。并且编译后运行 ALCPlugFix 后，耳机的所有问题都得到解决了。</p>
<p>还发现作者已经写好了开机自运行的安装脚本。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>下载我编译好的 <strong><a href="https://blog.neroxps.cn/blog/macOS/ALCPlugFix.zip" target="_blank" rel="external">ALCPlugFix.zip</a></strong>（编译只适合 ALC233 的情况，如果是需要运行其他的 hda-verb 命令，自己按照上图填好你需要的 hda-verb 命令。）</p>
<p>cd 到 ALCPlugFix 的解压目录，运行以下命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo chmod +x install.sh</div><div class="line">sudo ./install.sh</div></pre></td></tr></table></figure>
<p>脚本会安装 ALCPlugFix 和 hda-verb 到 /usr/bin，然后安装 good.win.ALCPlugFix.plist 自启动服务，并加载。（hda-verb 需要放入 CodecCommander.kext）</p>
<p>和我一样都是 9CC3 的朋友可以直接下载我做好的 <strong><a href="https://blog.neroxps.cn/blog/macOS/AppleALC_For_ALC233_LayoutID4.zip" target="_blank" rel="external">AppleALC_For_ALC233_LayoutID4.zip</a></strong>驱动。</p>
<p>提供 <strong><a href="https://blog.neroxps.cn/blog/macOS/AppleALC_For_ALC233_LayoutID4_Codec.zip" target="_blank" rel="external">AppleALC_For_ALC233_LayoutID4 源码参考</a></strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;自我这台华硕 VM510LI 安装黑苹果以来一直留下两个问题未解决，一是 VGA，二是耳机麦克风无输入。今天终于在远景坛友关云长羽帖子的帮助
    
    </summary>
    
      <category term="黑苹果" scheme="http://hexo.neroxps.cn/categories/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
    
      <category term="黑苹果" scheme="http://hexo.neroxps.cn/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
      <category term="Mac" scheme="http://hexo.neroxps.cn/tags/Mac/"/>
    
      <category term="Hackintosh" scheme="http://hexo.neroxps.cn/tags/Hackintosh/"/>
    
      <category term="ASUS" scheme="http://hexo.neroxps.cn/tags/ASUS/"/>
    
      <category term="VM510LI" scheme="http://hexo.neroxps.cn/tags/VM510LI/"/>
    
      <category term="ALC233" scheme="http://hexo.neroxps.cn/tags/ALC233/"/>
    
  </entry>
  
  <entry>
    <title>华硕 VM510L EFI 分享 9CC3笔记本主板芯片通用</title>
    <link href="http://hexo.neroxps.cn/2017/03/09/9CC3-EFI-README/"/>
    <id>http://hexo.neroxps.cn/2017/03/09/9CC3-EFI-README/</id>
    <published>2017-03-08T16:00:00.000Z</published>
    <updated>2017-07-19T12:47:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p>
<h1 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h1><p>本文件适用于华硕 9CC3 笔记本芯片组。查看方法，win 下鲁大师 &gt; 详细报表。</p>
<p>本 CLOVER 所有的 ACPI 修改均使用 Hotpatch 方式，补丁模块化，故无 DSDT。</p>
<p>本 EFI 在 VM510LI 测试通过</p>
<p>欢迎各位 9CC3 笔记本芯片组的朋友测试，可加群一齐讨论与反馈问题 QQ 群号:621151130</p>
<p>EFI 下载地址：<a href="https://blog.neroxps.cn/blog/macOS/9CC3-EFI-2017-03-09.zip" target="_blank" rel="external">9CC3-EFI-2017-03-09.zip</a></p>
<h2 id="目录说明"><a href="#目录说明" class="headerlink" title="目录说明"></a>目录说明</h2><ul>
<li>CLOVER （Clover 目录，请放置在 EFI目录下。需要注意的只有两个地方，CLOVER 的 ACPI 文件夹和 Kext 文件夹。）</li>
<li>Hotpatch （ 所使用到的 hotpatch 源代码。）</li>
<li>Library/Extensions/DummyX86PP_MBP121_800.kext （建议放在系统盘 /Library/Extensions 下并修复权限，DummyX86PP_MBP121_800.kext 是为了修改 X86PlatformPlugin 中的机型数据，将最低 1300MHz 频率改成最低 800MHz。（可要可不要））</li>
<li>UHD-4K/SSDT-Config.aml（如果是4K 屏幕请替换此文件到 CLOVER/ACPI/patched。</li>
<li>usr/bin/hda-verb （睡眠唤醒无声及开机耳机只有背景声使用，配合 CodecCommander.kext 使用，详见帖子 <a href="http://bbs.pcbeta.com/viewthread-1733228-1-1.html" target="_blank" rel="external">http://bbs.pcbeta.com/viewthread-1733228-1-1.html</a></li>
</ul>
<h2 id="ACPI-文件说明"><a href="#ACPI-文件说明" class="headerlink" title="ACPI 文件说明"></a>ACPI 文件说明</h2><h3 id="SSDT-BATT-VM510LI-aml"><a href="#SSDT-BATT-VM510LI-aml" class="headerlink" title="SSDT-BATT-VM510LI.aml"></a>SSDT-BATT-VM510LI.aml</h3><blockquote>
<p>ASUS R557LI 无需使用此 SSDT，仅需放入 ACPIBatteryManager.kext<br>ASUS W519LI 电量无法显示，暂时未知什么问题导致。#2017年03月09日10:24:06</p>
</blockquote>
<p><strong>作用：</strong></p>
<p>修复 9CC3 的电量显示，需要配合 ACPIBatteryManager.kext 驱动使用。</p>
<p><strong>使用方法：</strong></p>
<ol>
<li>在 CLOVER 的 config.list &gt; ACPI &gt; DSDT &gt; Patches 添加以下补丁，并且 SortedOrder 加入 SSDT-BATT-VM510LI.aml</li>
<li>EFI &gt; CLOVER &gt; ACPI &gt; Patches 放入本 SSDT。</li>
</ol>
<p>补丁1：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Comment：change Method(TACH,1,N) to XACH, optionally pair with SSDT-BATT-VM510LI.aml</div><div class="line">Find：54414348 09</div><div class="line">Replace：58414348 09</div></pre></td></tr></table></figure>
<p>补丁2：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Comment：change Method(_BIX,0,N) to XBIX, optionally pair with SSDT-BATT-VM510LI.aml</div><div class="line">Find：5F424958 00</div><div class="line">Replace：58424958 00</div><div class="line">``` </div><div class="line"></div><div class="line"></div><div class="line">补丁3：</div></pre></td></tr></table></figure>
<p>Comment：change Method(BIFA,0,N) to XIFA, optionally pair with SSDT-BATT-VM510LI.aml<br>Find：42494641 00<br>Replace：58494641 00<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div><div class="line">补丁4：</div></pre></td></tr></table></figure></p>
<p>Comment：change Method(SMBR,3,N) to XMBR, optionally pair with SSDT-BATT-VM510LI.aml<br>Find：534D4252 0B<br>Replace：584D4252 0B<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div><div class="line">补丁5：</div></pre></td></tr></table></figure></p>
<p>Comment：change Method(ECSB,7,N) to XCSB, optionally pair with SSDT-BATT-VM510LI.aml<br>Find：45435342 07<br>Replace：58435342 07<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div><div class="line">补丁6：</div></pre></td></tr></table></figure></p>
<p>Comment：change Method(SMBW,5,N) to XMBW, optionally pair with SSDT-BATT-VM510LI.aml<br>Find：534D4257 0D<br>Replace：584D4257 0D<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">### SSDT-CodecCommander.aml</div><div class="line"></div><div class="line">**作用：**</div><div class="line"></div><div class="line">用于配置 CodecCommander.kext，修复睡眠唤醒无声问题。</div><div class="line"></div><div class="line">**使用方法：**</div><div class="line"></div><div class="line">1. 将本 SSDT 放入 EFI &gt; CLOVER &gt; ACPI &gt; Patches，并且 SortedOrder 加入 SSDT-CodecCommander.aml。</div><div class="line">2. 将 CodecCommander.kext 放入 CLOVER &gt; Kext</div><div class="line"></div><div class="line">### SSDT-Config.aml</div><div class="line"></div><div class="line">**作用：**</div><div class="line"></div><div class="line">用于配置 Hotpatch 其他补丁，例如 SSDT-PNLF.aml、SSDT-IGPU.aml 等都需要读取这 SSDT 里面的配置。</div><div class="line"></div><div class="line">**使用方法：**</div><div class="line"></div><div class="line">将本 SSDT 放入 EFI &gt; CLOVER &gt; ACPI &gt; Patches。</div><div class="line"></div><div class="line">**配置说明：**</div></pre></td></tr></table></figure></p>
<p>// configuration data for other SSDTs in this pack</p>
<p>DefinitionBlock(“”, “SSDT”, 2, “hack”, “RMCF”, 0)<br>{<br>    Device(RMCF)<br>    {<br>        Name(_ADR, 0)   // do not remove</p>
<pre><code>    Method(HELP)
    {
        Store(&quot;TYPE indicates type of the computer. 0: desktop, 1: laptop&quot;, Debug)
        Store(&quot;HIGH selects display type. 1: high resolution, 2: low resolution&quot;, Debug)
        Store(&quot;DPTS for laptops only. 1: enables/disables DGPU in _WAK/_PTS&quot;, Debug)
        Store(&quot;SHUT enables shutdown fix. 1: disables _PTS code when Arg0==5&quot;, Debug)
        Store(&quot;AUDL indicates audio layout-id for patched AppleHDA. Ones: no injection&quot;, Debug)
        Store(&quot;BKLT indicates the type of backlight control. 0: IntelBacklight, 1: AppleBacklight&quot;, Debug)
        Store(&quot;LMAX indicates max for IGPU PWM backlight. Ones: Use default, other values must match framebuffer&quot;, Debug)
    }

    // TYPE: Indicates the type of computer... desktop or laptop
    //
    //  0: desktop
    //  0: 台式机
    //  1: laptop
    //  1: 笔记本
    Name(TYPE, 1)

    // HIGH: High resolution/low resolution selection.  Affects IGPU injection.
    // HIGH: 高分辨率/低分辨率选择。 影响IGPU注入。
    // For 1600x900+ on Sandy/Ivy, use 1
    // 对于1600x900 +在Sandy / Ivy，请使用1
    // For UHD/QHD+ on Haswell/Broadwell, use 1
    // 对于Haswell / Broadwell的UHD / QHD +，请使用1
    // Others (low resolution), use 0
    // 其他（低分辨率），使用0
    Name(HIGH, 0)

    // DPTS: For laptops only: set to 1 if you want to enable and
    // DPTS：仅适用于笔记本电脑：如果要启用和，请设置为1
    //  disable the DGPU _PTS and _WAK.
    //  禁用DGPU _PTS和_WAK。
    //  0: does not manipulate the DGPU in _WAK and _PTS
    //  0：不操作_WAK和_PTS中的DGPU
    //  1: disables the DGPU in _WAK and enables it in _PTS
    //  1：禁用_WAK中的DGPU，并在_PTS中启用它
    Name(DPTS, 0)

    // SHUT: Shutdown fix, disable _PTS code when Arg0==5 (shutdown)
    // SHUT：关闭修复，当Arg0 == 5（关闭）时禁用_PTS代码，
    //  0: does not affect _PTS behavior during shutdown
    //  0：在关闭期间不影响_PTS行为
    //  1: disables _PTS code during shutdown
    //  1：在关闭期间禁用_PTS代码
    Name(SHUT, 0)

    // AUDL: Audio Layout
    // AUDL：音频布局
    // The value here will be used to inject layout-id for HDEF and HDAU
    // 这里的值将用于注入HDEF和HDAU的layout-id
    // If set to Ones, no audio injection will be done.
    // 如果设置为Ones，则不会进行音频插入。
    Name(AUDL, Ones)

    // BKLT: Backlight control type
    // BKLT：背光控制类型
    // 0: Using IntelBacklight.kext
    // 0：使用IntelBacklight.kext
    // 1: Using AppleBacklight.kext + AppleBacklightInjector.kext
    // 1：使用AppleBacklight.kext + AppleBacklightInjector.kext
    Name(BKLT, 0)

    // LMAX: Backlight PWM MAX.  Must match framebuffer in use.
    // LMAX：背光PWM最大值。 必须匹配使用中的帧缓冲区。
    // Ones: Default will be used (0x710 for Ivy/Sandy, 0xad9 for Haswell/Broadwell)
    // Ones：将使用默认（Ivy / Sandy 的默认值是 0x710，Haswell / Broadwell 的默认值是 0xad9）
    // Other values: must match framebuffer
    // 其他值：必须与framebuffer相匹配
    Name(LMAX, Ones)
}
</code></pre><p>}<br>//EOF<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">上面 RM 都注释了，我以 Google 翻译过来，方便理解。</div><div class="line"></div><div class="line">* 第一个值，**TYPE** 从 SSDT-IGPU 调用，影响显卡 ID 的注入。查看了下代码，好像是区分是否注入高分屏 ID 有关。</div><div class="line">* 第二个值，**HIGH** 从 SSDT-IGPU 调用，影响点卡 ID 的注入。当 TYPE 设置成笔记本才生效。</div><div class="line">* 第三个值，**DPTS** 从 SSDT-PTSWAK 调用，这个 SSDT 是重写了睡眠和唤醒的方法，加入了一些我们补丁需要用到的代码，这里设置 1 则会在睡眠的时候开启显卡，唤醒后关闭显卡。</div><div class="line">* 第四个值，**SHUT** 从 SSDT-PTSWAK 调用，这个 SSDT 功能同上，这里设置 1 则会在关机的时候禁用 _PTS，和 Shutdown fix 同理。</div><div class="line">* 第五个值，**AUDL** 从 SSDT-HDAU 和 SSDT-HDEF 调用，这两个 SSDT 前者负责注入声卡 ID，后者则负责注入 HDMI 声卡 ID，而这个值就是控制两个 SSDT 注入声卡的行为，如果写 Ones 则什么都不注入，如果写 3，则声卡的 layout-id 则为 3。</div><div class="line">* 第六个值，**BKLT** 从 SSDT-PNLF 调用，这个 SSDT 看名字大家应该都很熟悉，就是加入 PNLF 设备，用来启用我们的笔记本亮度调节驱动的，而这个值是控制亮度调节的驱动是用哪一种，0 是使用 IntelBacklight.kext，1 是使用 AppleBacklight.kext + AppleBacklightInjector.kext。</div><div class="line">* 第七个值，**LMAX** 从 SSDT-PNLF 调用，这个 SSDT 同上，这个值是设置背光的 PWM 最大值，Ones 是使用默认值，Ivy / Sandy 的默认值是 0x710，Haswell / Broadwell 的默认值是 0xad9，你也可以设置其他值，但是这个值必须与 framebuffer 相匹配。</div><div class="line"></div><div class="line"></div><div class="line">### SSDT-DAMD-VM510LI.aml</div><div class="line"></div><div class="line">**作用：**</div><div class="line"></div><div class="line">用于屏蔽 9CC3 芯片组的独立显卡（AMD 与 NVIDIA 通用）</div><div class="line"></div><div class="line">**使用方法：**</div><div class="line"></div><div class="line">1. 在 CLOVER 的 config.list &gt; ACPI &gt; DSDT &gt; Patches 添加以下补丁，并且 SortedOrder 加入 SSDT-DAMD-VM510LI.aml。</div><div class="line">2. EFI &gt; CLOVER &gt; ACPI &gt; Patches 放入本 SSDT。</div><div class="line"></div><div class="line"></div><div class="line">补丁1：</div></pre></td></tr></table></figure></p>
<p>Comment：change Method(SGOF,0,Serialized) to XGOF, optionally pair with SSDT-DAMD-VM510LI.aml<br>Find：53474F46 08<br>Replace：58474F46 08<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div><div class="line">补丁2：</div></pre></td></tr></table></figure></p>
<p>Comment：Comment:change Method(_REG,0,Serialized) to XREG, optionally pair with SSDT-DAMD-VM510LI.aml<br>Find：5F524547 02<br>Replace：58524547 02<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">### SSDT-Fn-VM510LI.aml</div><div class="line"></div><div class="line">**作用：**</div><div class="line"></div><div class="line">配合 AsusNBFnKeys.kext 驱动使用，修改 _QE0 和 _QF0 方法而实现 FN 亮度调整功能。</div><div class="line"></div><div class="line">**使用方法：**</div><div class="line"></div><div class="line">1. 在 CLOVER 的 config.list &gt; ACPI &gt; DSDT &gt; Patches 添加以下补丁，并且 SortedOrder 加入 SSDT-Fn-VM510LI.aml。</div><div class="line">2. EFI &gt; CLOVER &gt; ACPI &gt; Patches 放入本 SSDT。</div><div class="line"></div><div class="line"></div><div class="line">补丁1：</div></pre></td></tr></table></figure></p>
<p>Comment：change _Q0E to XQ0E, optionally pair with SSDT-Fn.aml<br>Find：5F513045<br>Replace：58513045<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div><div class="line">补丁2：</div></pre></td></tr></table></figure></p>
<p>Comment：change _Q0F to XQ0F, optionally pair with SSDT-Fn.aml<br>Find：5F513046<br>Replace：58513046<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">### SSDT-HDAU.aml 与 SSDT-HDEF.aml</div><div class="line"></div><div class="line">**作用：**</div><div class="line"></div><div class="line">注入音频 layout-id 使得声卡出声，需要配合 AppleALC.kext。</div><div class="line"></div><div class="line">**使用方法：**</div><div class="line"></div><div class="line">1. 在 CLOVER 的 config.list &gt; ACPI &gt; DSDT &gt; Patches 添加以下补丁，并且 SortedOrder 加入 SSDT-HDEF.aml 和 SSDT-HDEF.aml。</div><div class="line">2. EFI &gt; CLOVER &gt; ACPI &gt; Patches 放入本 SSDT。</div><div class="line">3. 修改 SSDT-Config.aml 的 AUDL 字段为所对应的  layout-id，9CC3 是 ALC233（ALC3236），最佳的 layout-id 是4，故此此值应当设置为4。</div><div class="line"></div><div class="line">补丁：</div></pre></td></tr></table></figure></p>
<p>Comment：change B0D3 to HDAU, optionally pair with SSDT-HDAU.aml<br>Find：42304433<br>Replace：48444155<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div><div class="line">### SSDT-IGPU.aml</div><div class="line"></div><div class="line">**作用：**</div><div class="line"></div><div class="line">注入显卡 AAPL,snb-platform-id 驱动核心显卡。</div><div class="line"></div><div class="line">**使用方法：**</div><div class="line"></div><div class="line">1. 在 CLOVER 的 config.list &gt; ACPI &gt; DSDT &gt; Patches 添加以下补丁，并且 SortedOrder 加入 SSDT-IGPU.aml。</div><div class="line">2. EFI &gt; CLOVER &gt; ACPI &gt; Patches 放入本 SSDT。</div><div class="line">3. 修改 SSDT-Config.aml 的 TYPE 字段为 1。</div><div class="line">4. 如果是高分辨率（超过1080P）屏幕，请修改 SSDT-Config.aml 的 HIGH 字段为 1，其余分辨率为 0。</div><div class="line"></div><div class="line"></div><div class="line">补丁：</div></pre></td></tr></table></figure></p>
<p>Comment：change GFX0 to IGPU, optionally pair with SSDT-IGPU.aml<br>Find：47465830<br>Replace：49475055<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">### SSDT-PNLF.aml</div><div class="line"></div><div class="line">**作用：**</div><div class="line"></div><div class="line">亮度调节补丁，本补丁支持两种驱动方式。（AppleBacklight.kext + AppleBacklightInjector.kext 或 IntelBacklight.kext） 目前使用的是 IntelBacklight.kext</div><div class="line"></div><div class="line">**使用方法：**</div><div class="line"></div><div class="line">1. 在 CLOVER 的 config.list &gt; ACPI &gt; SortedOrder 加入 SSDT-PNLF.aml。</div><div class="line">2. EFI &gt; CLOVER &gt; ACPI &gt; Patches 放入本 SSDT。</div><div class="line"></div><div class="line">### SSDT-PRW.aml</div><div class="line"></div><div class="line">**作用：**</div><div class="line"></div><div class="line">修复 USB 睡眠唤醒补丁。</div><div class="line"></div><div class="line"></div><div class="line">**使用方法：**</div><div class="line"></div><div class="line">1. 在 CLOVER 的 config.list &gt; ACPI &gt; DSDT &gt; Patches 添加以下补丁，并且 SortedOrder 加入 SSDT-PRW.aml。</div><div class="line">2. EFI &gt; CLOVER &gt; ACPI &gt; Patches 放入本 SSDT。</div><div class="line"></div><div class="line"></div><div class="line">补丁：</div></pre></td></tr></table></figure></p>
<p>Comment：change Method(GPRW,2,N) to XPRW, pair with SSDT-PRW.aml<br>Find：47505257 02<br>Replace：58505257 02<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">### SSDT-SMBUS.aml</div><div class="line"></div><div class="line">**作用：**</div><div class="line"></div><div class="line">SMBUS fix 补丁。</div><div class="line"></div><div class="line">**使用方法：**</div><div class="line"></div><div class="line">1. 在 CLOVER 的 config.list &gt; ACPI &gt; SortedOrder 加入 SSDT-SMBUS.aml。</div><div class="line">2. EFI &gt; CLOVER &gt; ACPI &gt; Patches 放入本 SSDT。</div><div class="line"></div><div class="line">### SSDT-ssdtPRGen.aml</div><div class="line"></div><div class="line">**作用：**</div><div class="line"></div><div class="line">CPU I5 5200U 的 SSDT，用于加载 X86PlatformPlugin 的机型参数，使得加载原生电源管理。</div><div class="line"></div><div class="line">如果是其他 CPU，请自行使用 ssdtPRGen.sh 生成自己 CPU 的 SSDT，重命名为 SSDT-ssdtPRGen.aml 放入 EFI &gt; CLOVER &gt; ACPI &gt; Patches。</div><div class="line"></div><div class="line">**使用方法：**</div><div class="line"></div><div class="line">1. 在 CLOVER 的 config.list &gt; ACPI &gt; SortedOrder 加入 SSDT-ssdtPRGen.aml。</div><div class="line">2. EFI &gt; CLOVER &gt; ACPI &gt; Patches 放入本 SSDT。</div><div class="line"></div><div class="line">### SSDT-XOSI.aml</div><div class="line"></div><div class="line">**作用：**</div><div class="line"></div><div class="line">OS Check Fix</div><div class="line"></div><div class="line">**使用方法：**</div><div class="line"></div><div class="line">1. 在 CLOVER 的 config.list &gt; ACPI &gt; DSDT &gt; Patches 添加以下补丁，并且 SortedOrder 加入 SSDT-XOSI.aml。</div><div class="line">2. EFI &gt; CLOVER &gt; ACPI &gt; Patches 放入本 SSDT。</div><div class="line"></div><div class="line">补丁：</div></pre></td></tr></table></figure></p>
<p>Comment：change _OSI to XOSI, pair with SSDT-XOSI.aml<br>Find：5F4F5349<br>Replace：584F5349<br>```</p>
<h2 id="Kext-文件说明"><a href="#Kext-文件说明" class="headerlink" title="Kext 文件说明"></a>Kext 文件说明</h2><table>
<thead>
<tr>
<th>驱动名称</th>
<th>版本号</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td>ACPIBatteryManager.kext</td>
<td>2016-1118</td>
<td>配合 SSDT-BATT-VM510LI 显示电量。</td>
</tr>
<tr>
<td>AppleALC.kext</td>
<td>1.0.19</td>
<td>驱动声卡，需配合 SSDT-HDAU.aml 与 SSDT-HDEF.aml 使用。 另注入 ID 需在 SSDT-Config.aml 的 AUDL 字段注入 layout-id，根据 9CC3 提取的 Codec 得出，最符合的 layout-id 是4。</td>
</tr>
<tr>
<td>ApplePS2SmartTouchPad.kext</td>
<td>v4.7 beta 5</td>
<td>触摸板与键盘驱动</td>
</tr>
<tr>
<td>AsusNBFnKeys.kext</td>
<td>v2.6</td>
<td>华硕专用 FN 驱动，需配合 SSDT-Fn-VM510LI.aml 使用。</td>
</tr>
<tr>
<td>CodecCommander.kext</td>
<td>2016-0721</td>
<td>修复睡眠唤醒后无声问题，修复耳机只有背景声问题。</td>
</tr>
<tr>
<td>IntelBacklight.kext</td>
<td>2017-0206</td>
<td>显示屏亮度驱动，需配合 SSDT-PNLF.aml 使用。</td>
</tr>
<tr>
<td>RealtekRTL8111.kext</td>
<td>2015-1230</td>
<td>有线网卡驱动</td>
</tr>
<tr>
<td>FakeSMC.kext and FakeSMC*.kext</td>
<td>2017-0117</td>
<td>黑苹果必备驱动</td>
</tr>
</tbody>
</table>
<h2 id="Clover-配置文件-Config-list-说明"><a href="#Clover-配置文件-Config-list-说明" class="headerlink" title="Clover 配置文件 Config.list 说明"></a>Clover 配置文件 Config.list 说明</h2><h3 id="ACPI"><a href="#ACPI" class="headerlink" title="ACPI"></a>ACPI</h3><h4 id="Fixes"><a href="#Fixes" class="headerlink" title="Fixes"></a>Fixes</h4><ul>
<li>AddDTGP_0001 （添加 DTGP 方法，修复 ACPI 出现的 DTGP 错误）</li>
<li>FIX_ACST_4000000 （修复 ASUS 与 Apple 的电源管理寄存器命名冲突）</li>
<li>FIX_RTC_20000 （RTC Fix 从RTC设备中排除IRQ（0））</li>
<li>FIX_S3D_2000000 （通过更正_S3D方法解决一些睡眠/唤醒问题。）</li>
<li>FIX_WAK_200000 （同等于 DSDT Fix _WAK Arg0 v2 补丁）</li>
<li>FixHPET_0010 （同等于 DSDT HPET Fix 补丁）</li>
<li>FixIPIC_0040 （同等于 IRQ Fix 补丁）</li>
<li>NewWay_80000000 （应用新补丁，Clover 从 4006 版本开始取消此选项。）</li>
</ul>
<h4 id="Patches"><a href="#Patches" class="headerlink" title="Patches"></a>Patches</h4><ul>
<li>change _OSI to XOSI, pair with SSDT-XOSI.aml （配合 SSDT-XOSI 使用，同等于 OS Check Fix。）</li>
<li>change EHC1 to EH01 （修复 USB 设备命名，使其更符合 Apple 规范。）</li>
<li>change EHC2 to EH02 （同上）</li>
<li>Rename _DSM to XDSM （修复开机关于 _DSM 五国问题。）</li>
<li>change GFX0 to IGPU, optionally pair with SSDT-IGPU.aml （修改 GFX0 设备名称，更符合 Apple 规范，另配合 SSDT-IGPU.aml 注入显卡 ID，驱动显卡。）</li>
<li>change Method(GPRW,2,N) to XPRW, pair with SSDT-PRW.aml （配合 SSDT-PRW.aml 修复 USB 唤醒问题，同等于 USB3 _PRW 0X0D（或0X6D）(instant wake）。）</li>
<li>change B0D3 to HDAU, optionally pair with SSDT-HDAU.aml （配合 SSDT-HDAU.aml 与 SSDT-HDEF.aml 和 AppleALC.kext 驱动声卡。）</li>
<li>change _Q0E to XQ0E, optionally pair with SSDT-Fn.aml （配合 SSDT-Fn.aml 与 AsusNBFnKeys.kext 使 FN f5 f6 的亮度调整按键生效。）</li>
<li>change _Q0F to XQ0F, optionally pair with SSDT-Fn.aml （同上。）</li>
<li>change Method(TACH,1,N) to XACH, optionally pair with SSDT-BATT-VM510LI.aml （配合 SSDT-BATT-VM510LI.aml 和 ACPIBatteryManager.kext 显示电量。）</li>
<li>change Method(_BIX,0,N) to XBIX, optionally pair with SSDT-BATT-VM510LI.aml （同上。）</li>
<li>change Method(BIFA,0,N) to XIFA, optionally pair with SSDT-BATT-VM510LI.aml（同上。）</li>
<li>change Method(SMBR,3,N) to XMBR, optionally pair with SSDT-BATT-VM510LI.aml（同上。）</li>
<li>change Method(ECSB,7,N) to XCSB, optionally pair with SSDT-BATT-VM510LI.aml（同上。）</li>
<li>change Method(SMBW,5,N) to XMBW, optionally pair with SSDT-BATT-VM510LI.aml（同上。）</li>
<li>change Method(SGOF,0,Serialized) to XGOF, optionally pair with SSDT-DAMD-VM510LI.aml （配合 SSDT-DAMD-VM510LI.aml 屏蔽独显。）</li>
<li>Comment:change Method(_REG,0,Serialized) to XREG, optionally pair with SSDT-DAMD-VM510LI.aml （同上。）</li>
</ul>
<h4 id="DropTables"><a href="#DropTables" class="headerlink" title="DropTables"></a>DropTables</h4><ul>
<li>SSDT Cpc_Tabl （禁用主板提供的 cpuPR SSDT，换成我们使用 ssdtPRGen 生成的 ssdt。）</li>
<li>DMAR</li>
</ul>
<h3 id="KernelAndKextPatches"><a href="#KernelAndKextPatches" class="headerlink" title="KernelAndKextPatches"></a>KernelAndKextPatches</h3><h4 id="KextsToPatch"><a href="#KextsToPatch" class="headerlink" title="KextsToPatch"></a>KextsToPatch</h4><ul>
<li>AirPort Extreme （我更换了 BCM94352hmb 使用的补丁，9CC3 是 ar9565 的网卡，无需此补丁，我这里禁用了此补丁）</li>
<li>AirPortBrcm4360 - fcvo, 10.12.x (credit the-darkvoid) （同上）</li>
<li>10.11-BCM94352-5GHz-US-FCC-dv （同上）</li>
<li>TRIM function for non-Apple SSDs （为 SSDT 开启 TRIM）</li>
<li>Boot graphics glitch, 10.12.dp1 （改善 10.12 开机撕裂苹果图标的补丁，只能加快撕裂的消失时间，并不能完全去掉。）</li>
<li>Disable minStolenSize less or equal fStolenMemorySize assertion, 10.12.0 ( (based on Austere.J patch) （取消 10.12 限制 minStolenSize 的限制，9CC3 可以在 Bios 设置，故此我禁用此补丁。）</li>
<li>HDMI-audio 0x16260006 （HDMI 音频补丁）</li>
<li>change 15 port limit to 20 in AppleUSBXHCIPCI （15个 USB 端口限制补丁，9CC3 并没有超过15个，可不用此补丁，这里默认禁用）</li>
</ul>
<h3 id="SMBIOS"><a href="#SMBIOS" class="headerlink" title="SMBIOS"></a>SMBIOS</h3><ul>
<li>机型选择 MacBookPro12,1</li>
<li>如果开机遇到 can’t perform kext scan: no kext summary 的五国，请勾上 Trust，默认是启用 Trust。</li>
</ul>
<h1 id="AR9565"><a href="#AR9565" class="headerlink" title="AR9565"></a>AR9565</h1><p><strong>AR9565 蓝牙无解</strong></p>
<p>驱动下载地址：<a href="https://blog.neroxps.cn/blog/macOS/9565.zip" target="_blank" rel="external">9565.zip</a></p>
<p>作者发布下载地址：<a href="http://www.mediafire.com/file/2rjm76vro8ha28l/9565.zip" target="_blank" rel="external">9565.zip</a></p>
<p>发布地址（需要翻墙）：<a href="https://www.youtube.com/watch?v=4Q_bLKSCFDU" target="_blank" rel="external">Kext for wifi ar9565 for hackintosh macOS Sierra 10.12 (16A323)</a></p>
<p>使用说明：</p>
<ol>
<li>open terminal and write</li>
<li>defaults write com.apple.finder AppleShowAllFiles YES</li>
<li>killall Finder</li>
<li>go to System/Library/Extensions and delete IO80211Family.kext and IO80211FamilyV2.kext</li>
<li>open kext utility and install corecapture.kext and CoreCaptureResponder.kext</li>
<li>open clover configurator and mount your efi partition</li>
<li>go to EFI/CLOVER/kexts/10.12 and move IO80211Family.kext</li>
<li>reboot enjoy</li>
</ol>
<p>My youtube channel <a href="https://www.youtube.com/channel/UCzxRc20c5_bC2zaBFQ4GFsQ" target="_blank" rel="external">https://www.youtube.com/channel/UCzxRc20c5_bC2zaBFQ4GFsQ</a></p>
<p>Like and fap thanks for watching.</p>
<ol>
<li>打开终端 执行 （显示隐藏文件）<br><code>defaults write com.apple.finder AppleShowAllFiles YES</code><br><code>killall Finder</code></li>
<li>删除S/L/E内的 IO80211Family.kext和IO80211FamilyV2.kext</li>
<li>使用kext utility 安装 corecapture.kext 和 CoreCaptureResponder.kext</li>
<li>把IO80211Family.kext放到EFI/CLOVER/kexts/10.12</li>
<li>重启</li>
</ol>
<h1 id="解决-ALC233-唤醒无声及带麦克风耳机只有背景声"><a href="#解决-ALC233-唤醒无声及带麦克风耳机只有背景声" class="headerlink" title="解决 ALC233 唤醒无声及带麦克风耳机只有背景声"></a>解决 ALC233 唤醒无声及带麦克风耳机只有背景声</h1><p>请看此贴 <a href="http://bbs.pcbeta.com/viewthread-1733228-1-1.html" target="_blank" rel="external">关于耳机只有背景声及唤醒无声的探讨【更新ALC233解决方案】</a></p>
<h1 id="已知问题"><a href="#已知问题" class="headerlink" title="已知问题"></a>已知问题</h1><ol>
<li>二合一耳机麦克风无输入。</li>
<li>SD 读卡器 ID 为 0x0129 无解。</li>
<li>亮度无法保存。</li>
<li>VGA 无输出。</li>
<li>ASUS W519LI 电量无法显示，暂时未知什么问题导致。 #2017年03月09日10:24:06</li>
</ol>
<h1 id="高分屏"><a href="#高分屏" class="headerlink" title="高分屏"></a>高分屏</h1><p>如 ASUS FL5800L </p>
<ol>
<li>更换 UHD 目录下的 SSDT-Config.aml 文件（HIGH 字段改成1）。</li>
<li>突破高分屏限制开启内屏请参考 <a href="http://bbs.pcbeta.com/viewthread-1730701-1-1.html" target="_blank" rel="external">驱动显卡后4k屏幕点不亮的问题</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;使用说明&quot;&gt;&lt;a href=&quot;#使用说明&quot; class=&quot;headerlink&quot; title=&quot;使用说明&quot;&gt;&lt;/a&gt;使用说明&lt;/h1&gt;&lt;p&gt;本文件适用于华硕 9CC3 笔记本芯片组。查看方法，win 下鲁大师 &amp;gt; 详细报表。&lt;/p&gt;
    
    </summary>
    
      <category term="黑苹果" scheme="http://hexo.neroxps.cn/categories/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
    
      <category term="黑苹果" scheme="http://hexo.neroxps.cn/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
      <category term="Mac" scheme="http://hexo.neroxps.cn/tags/Mac/"/>
    
      <category term="Hackintosh" scheme="http://hexo.neroxps.cn/tags/Hackintosh/"/>
    
      <category term="ASUS" scheme="http://hexo.neroxps.cn/tags/ASUS/"/>
    
      <category term="VM510LI" scheme="http://hexo.neroxps.cn/tags/VM510LI/"/>
    
  </entry>
  
  <entry>
    <title>BCM94252HMB 国家地区代码修改</title>
    <link href="http://hexo.neroxps.cn/2017/03/07/BCM94352-5GHz-CN/"/>
    <id>http://hexo.neroxps.cn/2017/03/07/BCM94352-5GHz-CN/</id>
    <published>2017-03-06T16:00:00.000Z</published>
    <updated>2017-07-19T12:47:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>我们常用的 5G 频道补丁</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Name：AirPortBrccom.apple.driver.AirPort.Brcm4360m4360</div><div class="line">Find：4183FCFF742C48</div><div class="line">Replace：66C7065553EB2B</div></pre></td></tr></table></figure>
<p>其中修改的 55 53 就是 US 的意思.</p>
<p>那么修改成 CN 就是 43 4E</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">neros-MBP:~ nero$ echo -n CN |xxd</div><div class="line">00000000: 434e                                     CN</div><div class="line">neros-MBP:~ nero$ echo -n US |xxd</div><div class="line">00000000: 5553                                     US</div></pre></td></tr></table></figure>
<p>故此,我们将补丁修改为</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Name：AirPortBrccom.apple.driver.AirPort.Brcm4360m4360</div><div class="line">Find：4183FCFF742C48</div><div class="line">Replace：66C706434EEB2B</div><div class="line">Comment10.11-BCM94352-5GHz-CN-dv</div></pre></td></tr></table></figure>
<blockquote>
<p>出处 <a href="https://www.tonymacx86.com/threads/guide-airport-pcie-half-mini-v2.104850/page-209#post-1350761" target="_blank" rel="external">https://www.tonymacx86.com/threads/guide-airport-pcie-half-mini-v2.104850/page-209#post-1350761</a></p>
</blockquote>
<p>2017年03月12日 更新</p>
<p>将代码改成 #a 可以开启所有频段，自适应所有国家代码。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Name：com.apple.driver.AirPort.Brcm4360</div><div class="line">Find：4183fcff 742c48</div><div class="line">Replace：66c70623 61eb2b</div><div class="line">Comment：10.11-BCM94352-5GHz-#a-dv</div></pre></td></tr></table></figure>
<p>另 Name 最好写com.apple.driver.AirPort.Brcm4360，不要写 AirPortBrcm4360，因为这样 Kext to Patch 会寻找所有包含 AirPortBrcm4360 的 Kext 都修补一次。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们常用的 5G 频道补丁&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;d
    
    </summary>
    
      <category term="黑苹果" scheme="http://hexo.neroxps.cn/categories/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
    
      <category term="黑苹果" scheme="http://hexo.neroxps.cn/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
      <category term="Mac" scheme="http://hexo.neroxps.cn/tags/Mac/"/>
    
      <category term="Hackintosh" scheme="http://hexo.neroxps.cn/tags/Hackintosh/"/>
    
      <category term="ASUS" scheme="http://hexo.neroxps.cn/tags/ASUS/"/>
    
      <category term="VM510LI" scheme="http://hexo.neroxps.cn/tags/VM510LI/"/>
    
      <category term="BCM94252HMB" scheme="http://hexo.neroxps.cn/tags/BCM94252HMB/"/>
    
  </entry>
  
  <entry>
    <title>ACPI 一些备忘</title>
    <link href="http://hexo.neroxps.cn/2017/02/26/ACPI-Memo/"/>
    <id>http://hexo.neroxps.cn/2017/02/26/ACPI-Memo/</id>
    <published>2017-02-25T16:00:00.000Z</published>
    <updated>2017-07-19T12:47:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>有时候查看 ACPI 时候，为了熟悉他的逻辑，需要学习一些 ACPI 语法，这里是关于 ACPI 语法的备忘录。</strong></p>
<p><strong>本备忘均从 《Advanced Configuration and Power Interface Specification》 查阅，并使用 Google 翻译得来，本人英语极渣故此不确保翻译准确，如有需要请查阅原版文档。</strong></p>
<h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><h2 id="LEqual（逻辑等）"><a href="#LEqual（逻辑等）" class="headerlink" title="LEqual（逻辑等）"></a>LEqual（逻辑等）</h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p><code>LEqual（Source1，Source2）=&gt; Boolean Source1 == Source2 =&gt; Boolean</code></p>
<h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><p>Source1和Source2必须各自求值为整数，字符串或缓冲区。 Source1的数据类型指示所需的Source2类型。 如果需要匹配Source1的类型，则会隐式转换Source2。</p>
<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>如果值相等，则返回True; 否则返回False。 对于整数，执行数字比较。 对于字符串和缓冲区，只有当两个长度相同并且逐字节比较的结果表明完全相等时才返回True。</p>
<h2 id="LOr（逻辑或）"><a href="#LOr（逻辑或）" class="headerlink" title="LOr（逻辑或）"></a>LOr（逻辑或）</h2><h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><p><code>LOr（Source1，Source2）=&gt; Boolean Source1 || Source2 =&gt; Boolean</code></p>
<h3 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h3><p>Source1和Source2被计算为整数。 </p>
<h3 id="描述-1"><a href="#描述-1" class="headerlink" title="描述"></a>描述</h3><p>如果任一值不为零，则返回True; 否则返回False。</p>
<h2 id="Decrement-整数递减"><a href="#Decrement-整数递减" class="headerlink" title="Decrement (整数递减)"></a>Decrement (整数递减)</h2><h3 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h3><p><code>Decrement (Minuend) =&gt; Integer Minuend-- =&gt; Integer</code></p>
<h3 id="参数-2"><a href="#参数-2" class="headerlink" title="参数"></a>参数</h3><p>Minuend应该为一个整数。</p>
<h3 id="描述-2"><a href="#描述-2" class="headerlink" title="描述"></a>描述</h3><p>此操作将Minuend减1，并将结果存储回Minuend。 等效于 <code>Subtract（Minuend，1，Minuend）</code>。 下溢条件被忽略，结果为Ones。</p>
<hr>
<h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><h2 id="Sleep-（毫秒级-Sleep）"><a href="#Sleep-（毫秒级-Sleep）" class="headerlink" title="Sleep （毫秒级 Sleep）"></a>Sleep （毫秒级 Sleep）</h2><h3 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h3><p><code>Sleep (数值 毫秒)</code></p>
<h3 id="参数-3"><a href="#参数-3" class="headerlink" title="参数"></a>参数</h3><p>Sleep项用于实现长期定时要求。 执行被延迟至少所需的毫秒数。</p>
<h3 id="描述-3"><a href="#描述-3" class="headerlink" title="描述"></a>描述</h3><p>睡眠的实现是将请求舍入直到由OS支持的最接近的睡眠时间并放弃处理器。（The implementation of Sleep is to round the request up to the closest sleep time supported by the OS and relinquish the processor.）</p>
<p><em>以上我猜测：使用此方法可以将该设备进入休眠状态（切断电源）</em></p>
<h2 id="Stall-短时间停止"><a href="#Stall-短时间停止" class="headerlink" title="Stall (短时间停止)"></a>Stall (短时间停止)</h2><h3 id="语法-4"><a href="#语法-4" class="headerlink" title="语法"></a>语法</h3><p><code>Stall (微秒=10^6 秒)</code></p>
<h3 id="参数-4"><a href="#参数-4" class="headerlink" title="参数"></a>参数</h3><p>Stall项用于实现短期时序要求。 执行被延迟至少所需的微秒数。</p>
<h3 id="描述-4"><a href="#描述-4" class="headerlink" title="描述"></a>描述</h3><p>Stall的实现是特定于OS的，但不能放弃对处理器的控制。 因此，超过100微秒的延迟必须使用Sleep而不是Stall。</p>
<h1 id="系统保留方法"><a href="#系统保留方法" class="headerlink" title="系统保留方法"></a>系统保留方法</h1><h2 id="INI-（init）"><a href="#INI-（init）" class="headerlink" title="_INI （init）"></a>_INI （init）</h2><p>_INI是执行设备特定初始化的设备初始化对象。 此控制方法位于设备对象下，并且仅当OSPM加载描述表时运行。 有一些限制，当这个方法被调用和管理写这个方法的代码。 _INI方法只能访问已被指示为可用的操作区域，由_REG方法定义。 _REG方法在第6.5.4节“_REG（Region）”中描述。此控制方法在运行_ADR，_CID，_HID，_SUN和_UID之前运行。</p>
<p>返回值：没有</p>
<p>在评估_INI对象之前，OSPM评估设备的_STA对象。如果设备不存在_STA对象，则假定设备既存在又起作用。如果_STA方法指示设备存在，OSPM将评估设备的_INI（如果存在_INI方法），并将检查_INI方法的设备的每个子项。如果_STA方法指示设备不存在并且不起作用，则OSPM将不运行_INI，并且不会检查设备的_INI方法的子代。如果_STA对象评估指示设备不存在但是功能正常，OSPM将不会评估_INI对象，但会检查设备的每个子对象的_INI对象（有关此特殊情况的说明，请参阅_STA的说明） 。）如果在表已经加载后设备出现，OSPM将不会评估_INI方法，也不会检查_INI方法的子项。</p>
<p>OSPM根据_STA Present和Functional位执行_INI对象操作，总结在下表中。</p>
<p>Table 6-223 OSPM _INI Object Actions</p>
<table>
<thead>
<tr>
<th>_STA Present Bit</th>
<th>_STA 功能Bit</th>
<th>操作</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>0</td>
<td>不要运行_INI，不要检查设备的子项。</td>
</tr>
<tr>
<td>0</td>
<td>1</td>
<td>不要运行_INI，检查设备的子项。</td>
</tr>
<tr>
<td>1</td>
<td>0</td>
<td>运行_INI，检查设备子项。</td>
</tr>
<tr>
<td>1</td>
<td>1</td>
<td>运行_INI，检查设备子项。</td>
</tr>
</tbody>
</table>
<p>_INI控制方法通常用于将设备切换到传统操作模式。 例如，平台引导固件通常将旧式模式下的CardBus控制器配置为支持传统操作系统。 在使用ACPI操作系统枚举设备之前，必须将CardBus控制器初始化为CardBus模式。 对于这样的系统，供应商可以在CardBus控制器下包括_INI控制方法以将设备切换到CardBus模式。</p>
<p>除了设备初始化之外，OSPM在命名空间初始化的开始时无条件地评估\ _SB命名空间下的_INI对象（如果存在）。</p>
<h2 id="REG-Region"><a href="#REG-Region" class="headerlink" title="_REG(Region)"></a>_REG(Region)</h2><p>OS运行_REG控制方法以通知AML代码操作区域的可用性的改变。当操作区域处理程序不可用时，AML无法访问该区域中的数据字段。 （操作区域写入将被忽略，读取将返回不确定的数据。）</p>
<p>参数：（2）</p>
<p>Arg0 - 包含操作区域地址空间ID的整数</p>
<p>Arg1 - 包含处理程序连接代码的整数</p>
<p>0 - 断开处理程序<br>1 - 连接处理程序</p>
<p>返回值：<br>没有</p>
<p>除了下面所示的情况，控制方法必须假设所有操作区域都不可访问，直到执行_REG（RegionSpace，1）方法。一旦对特定操作区域执行了_REG，指示操作区域处理程序就绪，则控制方法可以访问操作区域中的字段。相反，当_REG方法执行未指示操作区域处理程序就绪时，控制方法不得访问操作区域中的字段。</p>
<p>例如，在嵌入式控制器驱动程序就绪之前，控制方法无法访问嵌入式控制器。一旦OSPM运行_REG（EmbeddedControl，1），控制方法就可以访问嵌入式控制器地址空间中的操作区域。此外，如果OSPM执行_REG（EmbeddedControl，0），控制方法必须停止访问嵌入式控制器地址空间中的操作区域。</p>
<p>此规则的例外情况如下：</p>
<ol>
<li>OSPM必须保证以下操作区域始终可访问：</li>
</ol>
<ul>
<li>包含_BBN对象的PCI根总线上的PCI_Config操作区域。</li>
<li>SystemIO操作区域。</li>
<li>访问系统地址映射报告接口返回的内存时的SystemMemory操作区域。</li>
</ul>
<ol>
<li>OSPM必须通过ECDT中描述的嵌入式控制器访问嵌入式控制器操作区域，然后才能执行任何控制方法。 在OSPM运行_REG（EmbeddedControl，0）后，这些操作区域可能无法访问。将_REG放置在与操作区域声明相同的范围中。 当在该范围中声明的操作区域可供使用时，OS将在给定范围中运行_REG。</li>
</ol>
<p>Example:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Scope(\_SB.PCI0) &#123;    OperationRegion(OPR1, PCI_Config, ...)    Method(_REG, 2) &#123;...&#125;            // OSPM在PCIO操作区域处理程序时执行此操作                                     // 状态更改    Device(PCI1) &#123;        Method(2) &#123;...&#125;        Device(ETH0) &#123;            OperationRegion(OPR2, PCI_Config, ...)            Method(_REG,2) &#123;...&#125;        &#125;</div><div class="line">    &#125;    Device(ISA0) &#123;        OperationRegion(OPR3, SystemIO, ...)        Method(_REG, 2) &#123;...&#125;       // OSPM在ISAO操作区域处理程序时执行此操作                                    // 状态更改        Device(EC0) &#123;            Name(_HID, EISAID(&quot;PNP0C09&quot;))            OperationRegion(OPR4, EmbeddedControl, ...)            Method(_REG, 2) &#123;...&#125;    // OSPM在EC操作区域执行此操作        &#125;</div><div class="line">    &#125;&#125;</div></pre></td></tr></table></figure>
<p>当PCI0操作区域处理程序就绪时，OSPM将运行在PCI0范围中声明的_REG方法，以指示PCI0空间操作区域访问在PCI0范围内可用（换句话说，允许OPR1访问）。</p>
<p>当ISA0操作处理程序就绪时，OSPM将在ISA0作用域中运行_REG方法，以指示I / O空间操作区域访问在该范围内可用（换句话说，允许OPR3访问）。</p>
<p>最后，当嵌入式控制器操作区域处理程序就绪时，OSPM将在EC0作用域中运行_REG方法，以指示EC空间操作区域访问在EC0范围内可用（换句话说，允许OPR4访问）。</p>
<p>应当注意，一旦主控制器或桥控制器已经用总线编号编程，则PCI配置空间操作区就准备就绪。 PCI1的_REG方法将不会运行，直到PCI-PCI桥已正确配置。同时，操作系统也将运行ETH0的_REG方法，因为它的PCI配置空间也可用。当ETH0设备启动时，OS将再次运行ETH0的_REG方法。此外，当主机控制器或桥控制器被关闭或禁用时，子设备的PCI配置空间操作区域不再​​可用。因此，ETH0的_REG方法将在关闭时运行，并在PCI1关闭时再次运行。</p>
<p>注意：操作系统只运行与使用刚刚可用的操作区域类型的操作区域声明出现在相同范围内的_REG方法。 例如，当加载PCI总线驱动程序时，EC设备中的_REG不会运行，因为在EC下声明的操作区域不使用PCI驱动程序提供的任何操作区域类型（即配置空间，I / O ，和存储器）。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;有时候查看 ACPI 时候，为了熟悉他的逻辑，需要学习一些 ACPI 语法，这里是关于 ACPI 语法的备忘录。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;本备忘均从 《Advanced Configuration and Power Interfac
    
    </summary>
    
      <category term="黑苹果" scheme="http://hexo.neroxps.cn/categories/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
    
      <category term="黑苹果" scheme="http://hexo.neroxps.cn/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
      <category term="Mac" scheme="http://hexo.neroxps.cn/tags/Mac/"/>
    
      <category term="Hackintosh" scheme="http://hexo.neroxps.cn/tags/Hackintosh/"/>
    
      <category term="ASUS" scheme="http://hexo.neroxps.cn/tags/ASUS/"/>
    
      <category term="ACPI" scheme="http://hexo.neroxps.cn/tags/ACPI/"/>
    
  </entry>
  
  <entry>
    <title>华硕 VM510LI Hotpatch</title>
    <link href="http://hexo.neroxps.cn/2017/02/25/Hotpatch/"/>
    <id>http://hexo.neroxps.cn/2017/02/25/Hotpatch/</id>
    <published>2017-02-24T16:00:00.000Z</published>
    <updated>2017-07-19T12:47:36.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本笔记参考 RehabMan 指南 <a href="https://www.tonymacx86.com/threads/guide-using-clover-to-hotpatch-acpi.200137/" target="_blank" rel="external">[Guide] Using Clover to “hotpatch” ACPI</a> </p>
</blockquote>
<p>[TOC]</p>
<h2 id="Hotpatch-简述"><a href="#Hotpatch-简述" class="headerlink" title="Hotpatch 简述"></a>Hotpatch 简述</h2><p>什么是 Hotpatch? </p>
<p><strong>RehabMan 的介绍是:</strong></p>
<blockquote>
<p>That guide uses what is known as “static patching”. In order to inject patched ACPI files, we extract native ACPI, disassemble them, make changes, then recompile and place the files in ACPI/patched, so that Clover injects the patched ACPI instead of native ACPI. With the techniques detailed in this guide, the changes can be made directly to the ACPI binaries provided by BIOS, skipping the extract, disassembly, and recompilation steps.</p>
<p>该指南使用所谓的“静态修补”。 为了注入修补的ACPI文件，我们提取本地ACPI，反汇编，进行更改，然后重新编译并将文件放在ACPI / patched中，以便Clover注入修补的ACPI而不是本机ACPI。 使用本指南中详述的技术，可以直接对BIOS提供的ACPI二进制文件进行更改，跳过提取，反汇编和重新编译步骤。(翻译来自 Google 翻译)</p>
</blockquote>
<p><strong>我的理解:</strong></p>
<p>其实 Hotpatch 就是将所有修补 ACPI 文件的补丁变成一个一个模块,通过重命名主板提供的 ACPI 文件原来的 Method (方法/函数) 来禁用原有的方法,再用 SSDT 来放入我们修改后的(已修补)的 Method (方法/函数).</p>
<p>当然上面所说的是终极解决的办法,其实还有很多很简单的方法能够完成 ACPI 补丁的功能.</p>
<p>如果有兴趣可以去看看 RahabMan 帖子.</p>
<p>之前我在 DSDT 打的补丁有.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&quot;Fix _WAK Arg0 v2&quot; </div><div class="line">&quot;HPET Fix&quot; </div><div class="line">&quot;SMBUS Fix&quot;</div><div class="line">&quot;IRQ Fix&quot; </div><div class="line">&quot;RTC Fix&quot; </div><div class="line">&quot;OS Check Fix（Windows 7）&quot; </div><div class="line">&quot;OS Check Fix（Windows 8）&quot; </div><div class="line">&quot;Fix Mutex with non-zero SyncLevel&quot; //对比了下 这个补丁是不需要打的</div><div class="line">&quot;Rename GFX0 to IGPU&quot; </div><div class="line">&quot;Brightness fix(Haswell/Broadwell)&quot;</div></pre></td></tr></table></figure>
<h2 id="Clover-常规补丁"><a href="#Clover-常规补丁" class="headerlink" title="Clover 常规补丁"></a>Clover 常规补丁</h2><ul>
<li><code>Fix _WAK Arg0 v2</code>  →   <code>ACPI &gt; DSDT &gt; FIX_WAK_200000</code></li>
<li><code>IRQ Fix</code> 和 <code>HPET Fix</code> → <code>ACPI &gt; DSDT &gt; FixHPET_0010</code> 和 <code>ACPI &gt; DSDT &gt; FixIPIC_0040</code></li>
<li><code>RTC Fix</code> → <code>ACPI &gt; DSDT &gt; FIX_RTC_20000</code></li>
</ul>
<h2 id="OS-Check-Fix（Windows-7）和-OS-Check-Fix（Windows-8）"><a href="#OS-Check-Fix（Windows-7）和-OS-Check-Fix（Windows-8）" class="headerlink" title="OS Check Fix（Windows 7）和 OS Check Fix（Windows 8）"></a>OS Check Fix（Windows 7）和 OS Check Fix（Windows 8）</h2><p>HotPatch 的方式是,将调用 _OSI  的方法重命名为 XOSI. 然后再放入 SSDT-XOSI.aml 到 Clover &gt; ACPI &gt; Patched</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Comment: Change _OSI to XOSI</div><div class="line">Find: &lt;5f4f 5349&gt;</div><div class="line">Replace: &lt;584f 5349&gt;</div></pre></td></tr></table></figure>
<p>意思就是,将调用 _OSI 方法的地方都改成调用 XOSI,而 XOSI 方法则是从 SSDT-XOSI.aml 引入的,我们再从 XOSI 方法修补.</p>
<h2 id="Rename-GFX0-to-IGPU"><a href="#Rename-GFX0-to-IGPU" class="headerlink" title="Rename GFX0 to IGPU"></a>Rename GFX0 to IGPU</h2><p>和上面重命名方法一样</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Comment: Rename GFX0 to IGPU</div><div class="line">Find: &lt;4746 5830&gt;</div><div class="line">Replace: &lt;4947 5055&gt;</div></pre></td></tr></table></figure>
<h2 id="Brightness-fix-Haswell-Broadwell"><a href="#Brightness-fix-Haswell-Broadwell" class="headerlink" title="Brightness fix(Haswell/Broadwell)"></a>Brightness fix(Haswell/Broadwell)</h2><p>这个补丁方法</p>
<ol>
<li>GFX 重命名为 IGPU,上一节补丁已经应用了.</li>
<li>放入 SSDT-PNLF.aml</li>
<li>SSDT-Config.aml 需要定义 BKLT 的值为 0.</li>
</ol>
<h2 id="USB3-PRW-0X6D-instant-wake"><a href="#USB3-PRW-0X6D-instant-wake" class="headerlink" title="USB3_PRW 0X6D(instant wake)"></a>USB3_PRW 0X6D(instant wake)</h2><p>这个补丁方法,的方法遇上面的不太一样.</p>
<p><strong>补丁片段</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"># some _PRW have three entries in the Package </div><div class="line">into device name_adr 0x001D0000 code_regex Name.*_PRW.*\n.*\n.*\n.*\n.*\n.*\&#125;\) remove_matched;</div><div class="line"></div><div class="line"># 找到设备名称地址 0x001D0000 然后移除该设备的 _PRW 方法.</div><div class="line"></div><div class="line"># seems to work better if _PRW is present, but returns 0 (original was 3) for sleep state</div><div class="line">into device name_adr 0x001D0000 insert begin Name(_PRW, Package() &#123; 0x6D, 0 &#125;) end;</div><div class="line"></div><div class="line"># 找到设备名称地址 0x001D0000  输入变量名 _PRW 变量内容 &#123; 0x6D, 0 &#125;</div><div class="line"></div><div class="line">PS: 以上纯属猜测,本人未学习过 IASL 的编程语法,全靠蒙,如果错了请指正.</div></pre></td></tr></table></figure>
<p> 这样修改后,USB 总线 EHC1和 EHC2 设备中没有了 _PRW 方法了,直接变成了 _PRW 变量. </p>
<p> 至于为何需要这样改,我并不清楚,这必须了解 USB 导致睡眠唤醒的代码原理,我看不懂.但是看补丁的修改方法还是会的.</p>
<p> 那么将上面的补丁换成 Hotpatch 应该如何表现呢?</p>
<p> 搜索了下, DSDT 中还有非常多的 _PRW 方法,他们遍布了整个 DSDT 的各种设备,如果还是使用简单的改名是不可靠的.</p>
<p> 因为 Clover 的 Patches 是搜索 DSDT 的二进制版本进行修补,二进制中无法识别整个_PRW 方法是否属于 USB 设备下的,也就是是否属于 EHC1 EHC2 的设备,那么是否就没办法用 Hotpatch 方法来修补这个问题呢?</p>
<p> 我们来看看被补丁修补的源代码是什么样的</p>
<p> 下面是 EHC1 的 _PRW 方法</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake</div><div class="line">&#123;</div><div class="line">    Return (GPRW (0x6D, 0x03))</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>下面是 EHC2 的 _PRW 方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake</div><div class="line">&#123;</div><div class="line">    Return (GPRW (0x6D, 0x03))</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>下面是 XHC 的 _PRW 方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake</div><div class="line">&#123;</div><div class="line">    Return (GPRW (0x6D, 0x03))</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>我们可以发现我们补丁修改的每个 _PRW 方法都会调用一个方法 GPRW,并且调用 GPRW 方法的变量内容都是 0X6D.</p>
<p>再看看 RehabMan 写的 SSDT-PRW.dsl 内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">// For solving instant wake by hooking GPRW or UPRW</div><div class="line"></div><div class="line">DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;PRW&quot;, 0)</div><div class="line">&#123;</div><div class="line">    External(XPRW, MethodObj)</div><div class="line"></div><div class="line">    // In DSDT, native GPRW is renamed to XPRW with Clover binpatch.</div><div class="line">    // (or UPRW to XPRW)</div><div class="line">    // As a result, calls to GPRW (or UPRW) land here.</div><div class="line">    // The purpose of this implementation is to avoid &quot;instant wake&quot;</div><div class="line">    // by returning 0 in the second position (sleep state supported)</div><div class="line">    // of the return package.</div><div class="line">    Method(GPRW, 2)</div><div class="line">    &#123;</div><div class="line">        If (0x6d == Arg0) &#123; Return (Package() &#123; 0x6d, 0, &#125;) &#125;   //检查第一个变量是否为 0X6D 如果结果为真,返回 &#123; 0x6d, 0, &#125;</div><div class="line">        If (0x0d == Arg0) &#123; Return (Package() &#123; 0x0d, 0, &#125;) &#125;   //检查第一个变量是否是 0X0D 如果结果为真,返回 &#123; 0x0d, 0, &#125;</div><div class="line">        Return (XPRW(Arg0, Arg1))                               //如果上述都不对,则转跳到 XPRW方法 (函数为转跳过来的值)</div><div class="line">    &#125;</div><div class="line">    Method(UPRW, 2)</div><div class="line">    &#123;</div><div class="line">        If (0x6d == Arg0) &#123; Return (Package() &#123; 0x6d, 0, &#125;) &#125;</div><div class="line">        If (0x0d == Arg0) &#123; Return (Package() &#123; 0x0d, 0, &#125;) &#125;</div><div class="line">        Return (XPRW(Arg0, Arg1))</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">//EOF</div></pre></td></tr></table></figure>
<p>上面的逻辑很清晰了, 其实就是要将我们需要改的地方,直接用代码发回我们希望他得到的变量,那么我们就不必想如何识别哪些是 USB 的 _PRW 方法了.</p>
<p>Hotpatch 我觉得就是,复杂的逻辑交给 ASL 代码来解决, Clover 的 Patch 只需要修改源代码的调用即可.</p>
<p>那么上面多了个 XPRW 是什么东东?为啥其余调用 GPRW 方法都调用他呢?</p>
<p>这个就是 Clover 需要做的,我要将所有原来调用 GPRW 方法的都调用到这个 SSDT-PRW 来,原来的 GPRW 我们更名为 XPRW.</p>
<p>明白了吧?所有代码都经过上面的逻辑,最终跑回被我们更名为 XPRW 的方法(也就是原来的GPRW 方法).</p>
<p>故此应用这个 SSDT 之前,我们需要将 DSDT 原来的 GPRW 方法重命名为 XPRW 方法</p>
<p>但是由遇到了一个问题,如何定位 GPRW 方法在二进制文件 aml 中的位置呢?</p>
<blockquote>
<p>小笔记: aml 是 ASL 编程语言编译后的二进制文件,但是我们一般反编译或者 Patch都是讨论十六进制,因为每8个二进制代表一个字符</p>
</blockquote>
<p>RehabMan 在 <a href="https://www.tonymacx86.com/threads/guide-using-clover-to-hotpatch-acpi.200137/" target="_blank" rel="external">[Guide] Using Clover to “hotpatch” ACPI</a> <strong>Rename and Replace</strong> 章节有讲到这个问题</p>
<p>大概的意思就是因为不同主板可能情况不同,我们需要使用 <a href="https://github.com/ridiculousfish/HexFiend" target="_blank" rel="external">Hex Fiend</a> 这样的软件来验证 GPRW 方法的十六进制代码.</p>
<p>方法就是用 Hex Fiend 打开 DSDT 的 aml 文件,然后搜索 GPRW, 你会看到有很多 GPRW, 我的 GPRW 方法在 DSDT 的最下面,所以我直接拉到最下面反向搜索.</p>
<p>最终找到以下十六进制代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">47 50 52 57 02      GPRW</div></pre></td></tr></table></figure>
<p>再看看 GPRW 的十六进制代码是怎么样的?</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">neros-MBP:<span class="built_in">test</span> nero$ <span class="built_in">echo</span> -n GPRW|xxd</div><div class="line">00000000: 4750 5257                                GPRW</div></pre></td></tr></table></figure>
<p>奇怪了,为何我在上面列举的代码多了一个 02 ?</p>
<p>我们看看原来 GPRW 方法源代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">Method (GPRW, 2, NotSerialized)</div><div class="line">&#123;</div><div class="line">    Store (Arg0, Index (PRWP, Zero))</div><div class="line">    Store (ShiftLeft (SS1, One), Local0)</div><div class="line">    Or (Local0, ShiftLeft (SS2, 0x02), Local0)</div><div class="line">    Or (Local0, ShiftLeft (SS3, 0x03), Local0)</div><div class="line">    Or (Local0, ShiftLeft (SS4, 0x04), Local0)</div><div class="line">    If (And (ShiftLeft (One, Arg1), Local0))</div><div class="line">    &#123;</div><div class="line">        Store (Arg1, Index (PRWP, One))</div><div class="line">    &#125;</div><div class="line">    Else</div><div class="line">    &#123;</div><div class="line">        ShiftRight (Local0, One, Local0)</div><div class="line">        FindSetLeftBit (Local0, Index (PRWP, One))</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    Return (PRWP)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>看到了吧,方法名称紧挨着就是2,这个2就是 02.</p>
<p><strong>发现下面的方法好像并不是所有都这样,需要验证.</strong></p>
<p><del>根据上述帖子内容,aml 编译后会留下一个位置符来定义这个前面这个字符到底是方法,还是变量,还是设备.</del></p>
<p><del>根据我观察所得,(不同的 ASL 版本或者不同电脑获得的位置符号未必相同)</del></p>
<p>~~<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">Method  位置符号是   06  [xx xx xx xx]</div><div class="line">Name    位置符号是   08  [xx xx xx xx]</div><div class="line">```~~</div><div class="line"></div><div class="line">~~搜索 `06 47 50 52 57`~~</div><div class="line"></div><div class="line">~~一样可以定位到 GPRW 方法上,而且这个代码是唯一的,因为整个 DSDT 里面只有一个 GPRW 函数.~~</div><div class="line"></div><div class="line">**翻看 RM 的帖子,再验证了下,发现一个更好的规律和方法**</div><div class="line"></div><div class="line">将我们的 DSDT.dsl 文件使用如下命令编译.</div></pre></td></tr></table></figure></p>
<p>iasl -l DSDT.dsl<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">它会产生两个文件</div><div class="line"></div><div class="line">* DSDT.aml 编译后文件</div><div class="line">* DSDT.lst 混合列表文件</div><div class="line"></div><div class="line">用文字编辑软件打开 DSDT.lst, 会发现机械码和 iASL 代码混合在一齐,这个就是一个翻译文件一样,列举了各种代码的机械码模式,这样我们就可以更好的找到我们需要打补丁的代码原来是怎么样的.</div><div class="line"></div><div class="line">例如:我们需要将 `Method (TACH,1` 的方法重命名为 `Method(XACH,1` 来使得 TACH 方法失效,再注入 SSDT 中写入 TACH 方法,来代替它.</div><div class="line"></div><div class="line">那么我只需要搜索 **Method (TACH,1** 就能找到他机械码的模样.</div></pre></td></tr></table></figure></p>
<p>   22490:          }<br>   22492:          Method (TACH, 1, Serialized)</p>
<p>00015565:  14 40 06 54 41 43 48 09     “.@.TACH.”<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">那么我们补丁就可以这样写</div></pre></td></tr></table></figure></p>
<p>Find:14 40 06 54 41 43 48 09<br>Replace:14 40 06 58 41 43 48 09<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">将我们字符转换成 Hex 形式可以用如下命令</div></pre></td></tr></table></figure></p>
<p>neros-MBP:~ nero$ echo -n TACH |xxd<br>00000000: 5441 4348                                TACH<br>neros-MBP:~ nero$ echo -n XACH |xxd<br>00000000: 5841 4348                                XACH<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">**小结**</div><div class="line"></div><div class="line">说了那么多,这个 USB3_PRW 0X6D(instant wake) 唤醒补丁的 Hotpatch 的方法就是</div><div class="line"></div><div class="line">1. 将 DSDT 的 GPRW 方法重命名为 XPRW</div><div class="line">2. 放入 RehabMan 写的 SSDT-PRW.aml 到 Clover &gt; ACPI &gt; patch  </div><div class="line"></div><div class="line">**PS: 后来测试发现开机的时候系统日志会提示没有找到 UPRW ,这个是因为 SSDT-PRW.aml 包含了 UPRW 这个方法,而这个方法对我来说是没用的,故此放入 SSDT-PRW.aml 后如果不想出现 ACPI Error 的话,最好确认下自己的唤醒是调用 GPRW 还是 UPRW,然后将另一个方法注释掉.**</div><div class="line"></div><div class="line">## SMBUS Fix</div><div class="line"></div><div class="line">这个补丁就是在 SBUS 加入 BUS0 设备,只需要放入 SSDT-SMBUS.aml 即可.</div><div class="line"></div><div class="line">## Rename B0D3 to HDAU</div><div class="line"></div><div class="line">先将 B0D3 重命名为 HDAU</div></pre></td></tr></table></figure></p>
<p>Comment: change B0D3 to HDAU, optionally pair with SSDT-HDAU.aml<br>Find: 42304433<br>Replace: 48444155<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">再放入 SSDT-HDAU.aml</div><div class="line"></div><div class="line">**注意修改 layout-id 的值为你声卡的 layout-id 值,我声卡的 layout-id 是4**</div><div class="line"></div><div class="line">```iASL</div><div class="line">// Automatic injection of HDAU properties</div><div class="line"></div><div class="line">// Note: Only for Haswell and Broadwell</div><div class="line"></div><div class="line">DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;HDAU&quot;, 0)</div><div class="line">&#123;</div><div class="line">    External(_SB.PCI0.HDAU, DeviceObj)</div><div class="line">    External(RMCF.AUDL, IntObj)</div><div class="line"></div><div class="line">    // inject properties for audio</div><div class="line">    Method(_SB.PCI0.HDAU._DSM, 4)</div><div class="line">    &#123;</div><div class="line">        If (CondRefOf(\RMCF.AUDL)) &#123; If (Ones == \RMCF.AUDL) &#123; Return(0) &#125; &#125;</div><div class="line">        If (!Arg2) &#123; Return (Buffer() &#123; 0x03 &#125; ) &#125;</div><div class="line">        Local0 = Package()</div><div class="line">        &#123;</div><div class="line">            &quot;layout-id&quot;, Buffer(4) &#123; 4, 0, 0, 0 &#125;, //需要注意修改此 layout-id 值</div><div class="line">            &quot;hda-gfx&quot;, Buffer() &#123; &quot;onboard-1&quot; &#125;,</div><div class="line">        &#125;</div><div class="line">        If (CondRefOf(\RMCF.AUDL))</div><div class="line">        &#123;</div><div class="line">            CreateDWordField(DerefOf(Local0[1]), 0, AUDL)</div><div class="line">            AUDL = \RMCF.AUDL</div><div class="line">        &#125;</div><div class="line">        Return(Local0)</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">//EOF</div></pre></td></tr></table></figure></p>
<h2 id="ApplePS2SmartTouchPad-驱动的-Fn-按键补丁"><a href="#ApplePS2SmartTouchPad-驱动的-Fn-按键补丁" class="headerlink" title="ApplePS2SmartTouchPad 驱动的 Fn 按键补丁"></a>ApplePS2SmartTouchPad 驱动的 Fn 按键补丁</h2><p>这个补丁需要打上 Fn 功能键才能调整亮度,我们先看看补丁都干了些什么</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"># Patch by EMlyDinEsH (OSXLatitude)</div><div class="line"># Enables Fn brightness keys to work with my kext AsusNBFnKeys</div><div class="line"></div><div class="line"># Replacing method _Q0E with code for Brightness down key to work</div><div class="line">into Method label _Q0E replace_content begin </div><div class="line">             If (ATKP)\n</div><div class="line">                &#123;\n</div><div class="line">                   ^^^^ATKD.IANE (0x20)\n</div><div class="line">                &#125;</div><div class="line">end;</div><div class="line"></div><div class="line"># Replacing method _Q0F with code for Brightness up key to work</div><div class="line">into Method label _Q0F replace_content begin </div><div class="line">             If (ATKP)\n</div><div class="line">                &#123;\n</div><div class="line">                   ^^^^ATKD.IANE (0x10)\n</div><div class="line">                &#125;</div><div class="line">end;</div></pre></td></tr></table></figure>
<p>上面这个补丁是将 _Q0E 方法和 _Q0F 方法的内容替换如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">Method (_Q0E, 0, NotSerialized)  // _Qxx: EC Query</div><div class="line">&#123;</div><div class="line">    </div><div class="line">    If (ATKP)</div><div class="line">    &#123;</div><div class="line">        ^^^^ATKD.IANE (0x20)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">Method (_Q0F, 0, NotSerialized)  // _Qxx: EC Query</div><div class="line">&#123;</div><div class="line">    </div><div class="line">    If (ATKP)</div><div class="line">    &#123;</div><div class="line">        ^^^^ATKD.IANE (0x10)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>参考章节 USB3_PRW 0X6D(instant wake) 的方法.</p>
<ol>
<li>重命名 _Q0E 方法和 _Q0F 方法为 XQ0E 和 XQ0F,使原先的方法失效.</li>
<li>再放入我们自己定义的 _Q0E 方法和 _Q0F 方法.</li>
</ol>
<h3 id="替换-Q0E-和-Q0F-方法名称"><a href="#替换-Q0E-和-Q0F-方法名称" class="headerlink" title="替换 _Q0E 和 _Q0F 方法名称"></a>替换 _Q0E 和 _Q0F 方法名称</h3><p>命令行查找下以上两个方法的十六进制代码</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">neros-MacBook-Pro:hotpatch nero$ <span class="built_in">echo</span> -n _Q0E | xxd </div><div class="line">00000000: 5f51 3045                                _Q0E</div><div class="line">neros-MacBook-Pro:hotpatch nero$ <span class="built_in">echo</span> -n XQ0E | xxd </div><div class="line">00000000: 5851 3045                                XQ0E</div><div class="line">neros-MacBook-Pro:hotpatch nero$ <span class="built_in">echo</span> -n _Q0F | xxd </div><div class="line">00000000: 5f51 3046                                _Q0F</div><div class="line">neros-MacBook-Pro:hotpatch nero$ <span class="built_in">echo</span> -n XQ0F | xxd </div><div class="line">00000000: 5851 3046                                XQ0F</div></pre></td></tr></table></figure>
<p>那么在 Clover 配置文件 ACPI &gt; DSDT &gt; Patches 写入如下补丁</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">#补丁-1</div><div class="line">Comment: change _Q0E to XQ0E, optionally pair with SSDT-Fn.aml</div><div class="line">Find: 5f51 3045</div><div class="line">Replace: 5851 3045</div><div class="line"></div><div class="line">#补丁-2</div><div class="line">Comment: change _Q0F to XQ0F, optionally pair with SSDT-Fn.aml</div><div class="line">Find: 5f51 3046</div><div class="line">Replace: 5851 3046</div></pre></td></tr></table></figure>
<p>如果觉得不放心,可以用 Hex Fiend 打开 DSDT.aml 文件来搜索替换一下,之后再用 iasl 来反编译,再用 MaciASL dsl 文件看看,是否已经被重命名为 XQ0E 和 XQ0F</p>
<h3 id="重定义新的-Q0E-和-Q0F-方法"><a href="#重定义新的-Q0E-和-Q0F-方法" class="headerlink" title="重定义新的 _Q0E 和 _Q0F 方法"></a>重定义新的 _Q0E 和 _Q0F 方法</h3><p>我不会编写 SSDT, 但是我会抄~</p>
<p>复制一份 SSDT-PRW.dsl 下来重命名为 SSDT-FN.dsl</p>
<p>用 MaciASL 打开.</p>
<p>将其修改为如下代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">//Enables Fn brightness keys to work with my kext AsusNBFnKeys</div><div class="line"></div><div class="line">DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;Fn&quot;, 0)</div><div class="line">&#123;</div><div class="line">    // In DSDT, native _Q0E and _Q0F is renamed to XQ0E and XQ0F with Clover binpatch.</div><div class="line">    // (or UPRW to XPRW)</div><div class="line">    // As a result, calls to _Q0E and _Q0F land here.</div><div class="line">    </div><div class="line">    External(ATKP, IntObj)</div><div class="line">    External(\_SB.ATKD.IANE, MethodObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0, DeviceObj)</div><div class="line">    </div><div class="line">    Scope(\_SB.PCI0.LPCB.EC0)</div><div class="line">    &#123;</div><div class="line">        Method (_Q0E, 0, NotSerialized)  // _Qxx: EC Query</div><div class="line">            &#123;</div><div class="line">            </div><div class="line">                If (ATKP)</div><div class="line">                &#123;</div><div class="line">                    \_SB.ATKD.IANE (0x20)</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        Method (_Q0F, 0, NotSerialized)  // _Qxx: EC Query</div><div class="line">        &#123;</div><div class="line">            </div><div class="line">            If (ATKP)</div><div class="line">            &#123;</div><div class="line">                \_SB.ATKD.IANE (0x10)</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">//EOF</div></pre></td></tr></table></figure>
<p><strong>PS:以上代码纯属乱搞,如果能用,纯属巧合哈~</strong></p>
<p>最终将此 SSDT-FN.dsl 编译成 aml, 再放入 Clover &gt; ACPI &gt; patches</p>
<h2 id="电池补丁"><a href="#电池补丁" class="headerlink" title="电池补丁"></a>电池补丁</h2><h3 id="方法分析"><a href="#方法分析" class="headerlink" title="方法分析"></a>方法分析</h3><p>根据远景论坛的教学贴,我学会了编写自己笔记本的电池电量补丁.</p>
<p>以下是我 华硕 VM510LI 的电量补丁</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div></pre></td><td class="code"><pre><div class="line">#Maintained by: Nero for: Laptop Patches</div><div class="line">#battery_ASUS-VM510LI.txt</div><div class="line"></div><div class="line"># created by Nero 1/2017</div><div class="line"></div><div class="line">#Create B1B2 Method</div><div class="line">into method label B1B2 remove_entry;</div><div class="line">into definitionblock code_regex . insert</div><div class="line">begin</div><div class="line">Method (B1B2, 2, NotSerialized)\n</div><div class="line">&#123;\n</div><div class="line">Return(Or(Arg0, ShiftLeft(Arg1, 8)))\n</div><div class="line">&#125;\n</div><div class="line">end;</div><div class="line"></div><div class="line"># utility methods to read/write buffers from/to EC</div><div class="line">into method label RE1B parent_label EC0 remove_entry;</div><div class="line">into method label RECB parent_label EC0 remove_entry;</div><div class="line">into device label EC0 insert</div><div class="line">begin</div><div class="line">Method (RE1B, 1, NotSerialized)\n</div><div class="line">&#123;\n</div><div class="line">    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n</div><div class="line">    Field(ERAM, ByteAcc, NoLock, Preserve) &#123; BYTE, 8 &#125;\n</div><div class="line">    Return(BYTE)\n</div><div class="line">&#125;\n</div><div class="line">Method (RECB, 2, Serialized)\n</div><div class="line">&#123;\n</div><div class="line">    ShiftRight(Arg1, 3, Arg1)\n</div><div class="line">    Name(TEMP, Buffer(Arg1) &#123; &#125;)\n</div><div class="line">    Add(Arg0, Arg1, Arg1)\n</div><div class="line">    Store(0, Local0)\n</div><div class="line">    While (LLess(Arg0, Arg1))\n</div><div class="line">    &#123;\n</div><div class="line">        Store(RE1B(Arg0), Index(TEMP, Local0))\n</div><div class="line">        Increment(Arg0)\n</div><div class="line">        Increment(Local0)\n</div><div class="line">    &#125;\n</div><div class="line">    Return(TEMP)\n</div><div class="line">&#125;\n</div><div class="line">end;</div><div class="line"></div><div class="line"># utility method to write to EC buffers</div><div class="line">into method label WE1B parent_label EC0 remove_entry;</div><div class="line">into method label WECB parent_label EC0 remove_entry;</div><div class="line">into device label EC0 insert</div><div class="line">begin</div><div class="line">Method (WE1B, 2, NotSerialized)\n</div><div class="line">&#123;\n</div><div class="line">    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n</div><div class="line">    Field(ERAM, ByteAcc, NoLock, Preserve) &#123; BYTE, 8 &#125;\n</div><div class="line">    Store(Arg1, BYTE)\n</div><div class="line">&#125;\n</div><div class="line">Method (WECB, 3, Serialized)\n</div><div class="line">&#123;\n</div><div class="line">    ShiftRight(Arg1, 3, Arg1)\n</div><div class="line">    Name(TEMP, Buffer(Arg1) &#123; &#125;)\n</div><div class="line">    Store(Arg2, TEMP)\n</div><div class="line">    Add(Arg0, Arg1, Arg1)\n</div><div class="line">    Store(0, Local0)\n</div><div class="line">    While (LLess(Arg0, Arg1))\n</div><div class="line">    &#123;\n</div><div class="line">        WE1B(Arg0, DerefOf(Index(TEMP, Local0)))\n</div><div class="line">        Increment(Arg0)\n</div><div class="line">        Increment(Local0)\n</div><div class="line">    &#125;\n</div><div class="line">&#125;\n</div><div class="line">end;</div><div class="line"></div><div class="line">#Convert 16 bit to 8 bit registers</div><div class="line">into device label EC0 code_regex TAH0,\s+16, replace_matched begin TA00,8,TA01,8, end;</div><div class="line">into device label EC0 code_regex TAH1,\s+16, replace_matched begin TA20,8,TA21,8, end;</div><div class="line">into device label EC0 code_regex B0C3,\s+16, replace_matched begin B001,8,B002,8, end;</div><div class="line">into device label EC0 code_regex B0SN,\s+16, replace_matched begin B0S0,8,B0S1,8, end;</div><div class="line">into device label EC0 code_regex B1SN,\s+16 replace_matched begin B1S0,8,B1S1,8 end;</div><div class="line">into device label EC0 code_regex DT2B,\s+16 replace_matched begin DT01,8,DT02,8 end;</div><div class="line"></div><div class="line">#Fix 16 bit registers</div><div class="line">into method label TACH code_regex \(TAH0, replaceall_matched begin (B1B2(TA00,TA01), end;</div><div class="line">into method label TACH code_regex \(TAH1, replaceall_matched begin (B1B2(TA20,TA21), end;</div><div class="line">into method label _BIX code_regex \^\^LPCB.EC0.B0C3, replaceall_matched begin B1B2(^^LPCB.EC0.B001,^^LPCB.EC0.B002), end;</div><div class="line">into method label BIFA code_regex \(B0SN, replaceall_matched begin (B1B2(B0S0,B0S1), end;</div><div class="line">into method label BIFA code_regex \(B1SN, replaceall_matched begin (B1B2(B1S0,B1S1), end;</div><div class="line">into method label SMBR code_regex \(DT2B, replaceall_matched begin (B1B2(DT01,DT02), end;</div><div class="line">into method label SMBW code_regex Store\s\(Arg4,\sDT2B\) replaceall_matched begin Store (ShiftRight(Arg4,8),DT02)\nStore (Arg4,DT01) end;</div><div class="line"></div><div class="line">#fix 256 bit registers</div><div class="line">into method label SMBR code_regex Store\s+\((.*),\s+BDAT\) replaceall_matched begin WECB(0x1c,256,%1) end;</div><div class="line">into method label SMBW code_regex Store\s+\((.*),\s+BDAT\) replaceall_matched begin WECB(0x1c,256,%1) end;</div><div class="line">into method label ECSB code_regex Store\s+\((.*),\s+BDAT\) replaceall_matched begin WECB(0x1c,256,%1) end;</div><div class="line">into method label ECSB code_regex Store\s+\((.*),\s+BDA2\) replaceall_matched begin WECB(0x44,256,%1) end;</div><div class="line">into method label ECSB code_regex \(BDAT, replaceall_matched begin (RECB(0x1c,256), end;</div><div class="line">into method label ECSB code_regex \(BDA2, replaceall_matched begin (RECB(0x44,256), end;</div><div class="line">into method label SMBR code_regex \(BDAT, replaceall_matched begin (RECB(0x1c,256), end;</div></pre></td></tr></table></figure>
<p>大家都知道电量修补是一项非常复杂的修改,需要将调用到的变量高于8位的数值拆分成8位来处理.</p>
<p>故此修改代码量非常多,并且变量名称均需要重命名及重新赋值.</p>
<p>Hotpatch 因为是注入 SSDT 来实现补丁效果,故此我们需要找到补丁修改的各个变量赋值与函数调用的变量.</p>
<p>RM 教给大家一个办法,先将 DSDT.dsl 打上电池补丁,然后另存为 DSDT-Patch.dsl 然后使用 <a href="http://www.diffmerge.net/" target="_blank" rel="external">DiffMerge</a> 来对比两个文件的修改代码的情况,就可以最简单的知道补丁到底修改了哪些变量.</p>
<p>当然读懂补丁的语法其实并不需要这样做,我们可以读一下补丁到底修改了哪些变量,做了哪些操作就可以了,这个补丁是我自己写的,所以我并不需要用 DiffMerge 来查询.</p>
<p>经过研究,我发现单纯用 Clover Patches 方式来修改变量是行不通的,因为例如 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">//拆分前</div><div class="line">TAH0,16         Hex: 54 41 48 30 10</div><div class="line"></div><div class="line">//拆分后</div><div class="line">TA01,8,TA02,8   Hex: 54 41 30 31 08 54 41 30 32 08</div></pre></td></tr></table></figure>
<p>拆分前是占用5个字节,拆分后我们需要10个字节的空间,这样打补丁的话,会导致 TAH0 下面的变量被覆盖,导致出错.</p>
<p>那么如此大量的变量更改,我们应当如何修改呢?</p>
<p>我参考了 RM 给 HP ProBook 的电量补丁以及 Hotpatch 电量修补 SSDT</p>
<p>SSDT:<a href="https://raw.githubusercontent.com/RehabMan/HP-ProBook-4x30s-DSDT-Patch/master/hotpatch/SSDT-BATT.dsl" target="_blank" rel="external">https://raw.githubusercontent.com/RehabMan/HP-ProBook-4x30s-DSDT-Patch/master/hotpatch/SSDT-BATT.dsl</a></p>
<p>电量补丁:<a href="https://raw.githubusercontent.com/RehabMan/HP-ProBook-4x30s-DSDT-Patch/master/patches/06_Battery.txt" target="_blank" rel="external">https://raw.githubusercontent.com/RehabMan/HP-ProBook-4x30s-DSDT-Patch/master/patches/06_Battery.txt</a></p>
<p>发现他的解决办法如下</p>
<ol>
<li>新建一个 SSDT 写入 EC 方法,方法中赋予我们拆分后的电池变量.</li>
<li>在新建的 SSDT 中复制修改好的方法.</li>
<li>利用 MaciASL 编译功能来协助检查缺少的 External().</li>
<li>将原来调用电池变量的方法一一用 Clover Patches 更名(将原来的方法全部禁用).</li>
</ol>
<h3 id="将-EC-赋值的需要拆分的变量写入到-SSDT-BATT-dsl"><a href="#将-EC-赋值的需要拆分的变量写入到-SSDT-BATT-dsl" class="headerlink" title="将 EC 赋值的需要拆分的变量写入到 SSDT-BATT.dsl"></a>将 EC 赋值的需要拆分的变量写入到 SSDT-BATT.dsl</h3><p>我不会写 SSDT, 但是我会抄.抄 RM 写的 SSDT 再修改</p>
<p>下面是 EC0 设备拆分后的代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">// battery status patched for Ausu VM510LI</div><div class="line"></div><div class="line">DefinitionBlock (&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0)</div><div class="line">&#123;</div><div class="line">    External(\_SB.PCI0, DeviceObj)</div><div class="line">    External(\_SB.PCI0.LPCB, DeviceObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0, DeviceObj)</div><div class="line"></div><div class="line">    Scope(\_SB.PCI0.LPCB.EC0)</div><div class="line">    &#123;</div><div class="line">        // This is an override for battery methods that access EC fields</div><div class="line">        // larger than 8-bit.</div><div class="line">        OperationRegion (ECOR, EmbeddedControl, Zero, 0xFF)</div><div class="line">        Field (ECOR, ByteAcc, Lock, Preserve)</div><div class="line">        &#123;</div><div class="line">            //Offset (0x04), </div><div class="line">            //CMD1,   8, </div><div class="line">            //...</div><div class="line">            Offset (0x93),</div><div class="line">            TA00,8,TA01,8, </div><div class="line">            TA20,8,TA21,8, </div><div class="line">            //...</div><div class="line">            Offset (0xBE), </div><div class="line">            ,   16, //B0TM,   16</div><div class="line">            ,   16, //B0C1,   16,</div><div class="line">            ,   16, //B0C2,   16,</div><div class="line">            B001,8,B002,8, </div><div class="line">            //...</div><div class="line">            Offset (0xF4), </div><div class="line">            B0S0,8,B0S1,8, </div><div class="line">            //Offset (0xF8), </div><div class="line">            //Offset (0xFA), </div><div class="line">            Offset (0xFC), </div><div class="line">            B1S0,8,B1S1,8</div><div class="line">        &#125;</div><div class="line">        OperationRegion (SMBX, EmbeddedControl, 0x18, 0x28)</div><div class="line">        Field (SMBX, ByteAcc, NoLock, Preserve)</div><div class="line">        &#123;</div><div class="line">            Offset (0x04), </div><div class="line">            DT01,8,DT02,8</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>其中 <code>OperationRegion (ECOR, EmbeddedControl, Zero, 0xFF)</code> 和 <code>OperationRegion (SMBX, EmbeddedControl, 0x18, 0x28)</code> 原来的 DSDT 都存在,按照 RM 修改的方法,他的方式应该是从每个 <code>Offset (0X00)</code> 偏移量定义去写,如果偏移量下面第四个才是需要拆的,那么上面的可以使用 <code>,   16,</code> 这种方法来代替偏移量,好像这样就不会覆盖到原先的变量.(猜测罢了)</p>
<blockquote>
<p>2017年04月30日：根据远景坛友 gujiangjiang 提醒，EC Field需要改个名字才能用，不然无效，会出现很多ACPI Error。</p>
</blockquote>
<p>将上述的 ECOR 和 SMBX 重命名。</p>
<p>在 Clover DSDT Patches 添加如下补丁</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Comment:change ECOR to XCOR</div><div class="line">Find:45434F52 </div><div class="line">Replace:58434F52 </div><div class="line"></div><div class="line">Comment:change SMBX to XMBX</div><div class="line">Find:534D4258 </div><div class="line">Replace:584D4258</div></pre></td></tr></table></figure>
<h3 id="将调用了以上变量的方法复制到-SSDT-BATT-dsl"><a href="#将调用了以上变量的方法复制到-SSDT-BATT-dsl" class="headerlink" title="将调用了以上变量的方法复制到 SSDT-BATT.dsl"></a>将调用了以上变量的方法复制到 SSDT-BATT.dsl</h3><p>从已经打了电量补丁的 DSDT 中找出上方调用这些变量的方法所在地,不要忘记了补丁中 #fix 256 bit registers 的方法,因为电量补丁中,大于32的变量无需拆分,只需要将调动变量的代码用 WECB 方法与 RECB 方法来更改代替即可.</p>
<ul>
<li>Method (TACH, 1, Serialized)<ul>
<li>TA00</li>
<li>TA01</li>
<li>TA20</li>
<li>TA21</li>
</ul>
</li>
<li>Method (_BIX, 0, NotSerialized)<ul>
<li>B001</li>
<li>B002</li>
</ul>
</li>
<li>Method (BIFA, 0, NotSerialized)<ul>
<li>B0S0</li>
<li>B0S1</li>
<li>B1S0</li>
<li>B1S1</li>
</ul>
</li>
<li>Method (SMBR, 3, Serialized)<ul>
<li>WECB(0x1c,256,Zero)</li>
<li>WECB(0x1c,256,Zero)</li>
<li>WECB(0x1c,256,Arg4)</li>
<li>Store (RECB(0x1c,256), Index (Local0, 0x02))</li>
</ul>
</li>
<li>Method (ECSB, 7, NotSerialized)<ul>
<li>WECB(0x1c,256,DerefOf (Index (Arg6, One)))</li>
<li>WECB(0x44,256,DerefOf (Index (Arg6, One)))</li>
<li>Store (RECB(0x1c,256), Index (Local1, 0x04))</li>
<li>Store (RECB(0x44,256), Index (Local1, 0x04))</li>
</ul>
</li>
<li>Method (SMBW, 5, Serialized)<ul>
<li>Store (ShiftRight(Arg4,8),DT02)</li>
<li>Store (Arg4,DT01)</li>
</ul>
</li>
</ul>
<p>总共发现6个方法,我们将这6个方法一个一个从修不好电量补丁的 DSDT 中复制到 SSDT-BATT.dsl</p>
<p>TACH 方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">Method (TACH, 1, Serialized)</div><div class="line">&#123;</div><div class="line">    Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler</div><div class="line">    If (ECAV ())</div><div class="line">    &#123;</div><div class="line">        While (One)</div><div class="line">        &#123;</div><div class="line">            Store (Arg0, _T_0)</div><div class="line">            If (LEqual (_T_0, Zero))</div><div class="line">            &#123;</div><div class="line">                Store (B1B2(TA00,TA01), Local0)</div><div class="line">                Break</div><div class="line">            &#125;</div><div class="line">            ElseIf (LEqual (_T_0, One))</div><div class="line">            &#123;</div><div class="line">                Store (B1B2(TA20,TA21), Local0)</div><div class="line">                Break</div><div class="line">            &#125;</div><div class="line">            Else</div><div class="line">            &#123;</div><div class="line">                Return (Ones)</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            Break</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        Multiply (Local0, 0x02, Local0)</div><div class="line">        If (LNotEqual (Local0, Zero))</div><div class="line">        &#123;</div><div class="line">            Divide (0x0041CDB4, Local0, Local1, Local0)</div><div class="line">            Return (Local0)</div><div class="line">        &#125;</div><div class="line">        Else</div><div class="line">        &#123;</div><div class="line">            Return (Ones)</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    Else</div><div class="line">    &#123;</div><div class="line">        Return (Ones)</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>当你复制这个方法到 SSDT-BATT.dsl 时候,编译时会遇到一个错误.(这里我已经将拆分需要的 B1B2,WE1B,WECB,RE1B,RECB 等方法放入 <code>Scope(\_SB.PCI0.LPCB.EC0)</code> 域里面)</p>
<p><strong>49, 6084, Object does not exist (ECAV)</strong></p>
<p>看看 ECAV 是哪行调用的.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler</div><div class="line">If (ECAV ())</div><div class="line">&#123;</div></pre></td></tr></table></figure>
<p>这个是一个判断语句内嵌了一个方法的调用,初步判断 ECAV 就是一个方法,那么这个方法在哪里呢?回到我们的 DSDT.dsl</p>
<p>搜索 ECAV ,你会在 _SB.PCI0.LPCB.EC0 中发现 ECAV 这个方法,那么我们需要在 SSDT-BATT.dsl 中外部引入这个方法,来达到编译通过的目的.</p>
<p>只需要在 TACH 上方写入 <code>External(\_SB.PCI0.LPCB.EC0.ECAV, MethodObj)</code></p>
<p>再次编译,已通过编译.</p>
<p>我们需要注意的是外部引入的路径与外部引入的类型.</p>
<p>路径在 MaciASL 中,只要你光标移动到这个方法上,程序的左下角会显示当前方法(或变量)所在的路径.</p>
<p>一般 Name ( ABCD , 0X10) 这类的变量引入我们使用 IntObj 类型引入.</p>
<p>而上述的 Method (ECAV, 0, NotSerialized) 这一类,当然是使用 MethodObj 类型引入了.</p>
<p><strong>注意,复制方法过来的时候,需要注意该方法本来是在哪个域里面的,我们在 SSDT-BATT.dsl 也要将其放到哪个域里</strong></p>
<p>例如:Method (_BIX, 0, NotSerialized)</p>
<p>这个方法是在 _SB.PCI0.BAT0 这个域里面,那么我们需要将_BIX 方法放在这个域里面</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line">External(\_SB.PCI0, DeviceObj)</div><div class="line">External(\_SB.PCI0.BAT0, DeviceObj)</div><div class="line"></div><div class="line">    Scope(\_SB.PCI0.BAT0)</div><div class="line">    &#123;</div><div class="line">            Method (_BIX, 0, NotSerialized)  // _BIX: Battery Information Extended</div><div class="line">            &#123;</div><div class="line">                If (LNot (^^LPCB.EC0.BATP (Zero)))</div><div class="line">                &#123;</div><div class="line">                    Return (NBIX)</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                If (LEqual (^^LPCB.EC0.GBTT (Zero), 0xFF))</div><div class="line">                &#123;</div><div class="line">                    Return (NBIX)</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                _BIF ()</div><div class="line">                Store (DerefOf (Index (PBIF, Zero)), Index (BIXT, One))</div><div class="line">                Store (DerefOf (Index (PBIF, One)), Index (BIXT, 0x02))</div><div class="line">                Store (DerefOf (Index (PBIF, 0x02)), Index (BIXT, 0x03))</div><div class="line">                Store (DerefOf (Index (PBIF, 0x03)), Index (BIXT, 0x04))</div><div class="line">                Store (DerefOf (Index (PBIF, 0x04)), Index (BIXT, 0x05))</div><div class="line">                Store (DerefOf (Index (PBIF, 0x05)), Index (BIXT, 0x06))</div><div class="line">                Store (DerefOf (Index (PBIF, 0x06)), Index (BIXT, 0x07))</div><div class="line">                Store (DerefOf (Index (PBIF, 0x07)), Index (BIXT, 0x0E))</div><div class="line">                Store (DerefOf (Index (PBIF, 0x08)), Index (BIXT, 0x0F))</div><div class="line">                Store (DerefOf (Index (PBIF, 0x09)), Index (BIXT, 0x10))</div><div class="line">                Store (DerefOf (Index (PBIF, 0x0A)), Index (BIXT, 0x11))</div><div class="line">                Store (DerefOf (Index (PBIF, 0x0B)), Index (BIXT, 0x12))</div><div class="line">                Store (DerefOf (Index (PBIF, 0x0C)), Index (BIXT, 0x13))</div><div class="line">                If (LEqual (DerefOf (Index (BIXT, One)), One))</div><div class="line">                &#123;</div><div class="line">                    Store (Zero, Index (BIXT, One))</div><div class="line">                    Store (DerefOf (Index (BIXT, 0x05)), Local0)</div><div class="line">                    Multiply (DerefOf (Index (BIXT, 0x02)), Local0, Index (BIXT, 0x02))</div><div class="line">                    Multiply (DerefOf (Index (BIXT, 0x03)), Local0, Index (BIXT, 0x03))</div><div class="line">                    Multiply (DerefOf (Index (BIXT, 0x06)), Local0, Index (BIXT, 0x06))</div><div class="line">                    Multiply (DerefOf (Index (BIXT, 0x07)), Local0, Index (BIXT, 0x07))</div><div class="line">                    Multiply (DerefOf (Index (BIXT, 0x0E)), Local0, Index (BIXT, 0x0E))</div><div class="line">                    Multiply (DerefOf (Index (BIXT, 0x0F)), Local0, Index (BIXT, 0x0F))</div><div class="line">                    Divide (DerefOf (Index (BIXT, 0x02)), 0x03E8, Local0, Index (BIXT, 0x02))</div><div class="line">                    Divide (DerefOf (Index (BIXT, 0x03)), 0x03E8, Local0, Index (BIXT, 0x03))</div><div class="line">                    Divide (DerefOf (Index (BIXT, 0x06)), 0x03E8, Local0, Index (BIXT, 0x06))</div><div class="line">                    Divide (DerefOf (Index (BIXT, 0x07)), 0x03E8, Local0, Index (BIXT, 0x07))</div><div class="line">                    Divide (DerefOf (Index (BIXT, 0x0E)), 0x03E8, Local0, Index (BIXT, 0x0E))</div><div class="line">                    Divide (DerefOf (Index (BIXT, 0x0F)), 0x03E8, Local0, Index (BIXT, 0x0F))</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                Store (B1B2(^^LPCB.EC0.B001,^^LPCB.EC0.B002), Index (BIXT, 0x08))</div><div class="line">                Store (0x0001869F, Index (BIXT, 0x09))</div><div class="line">                Return (BIXT)</div><div class="line">            &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>复制了之后,我们还有非常多的错误需要处理</p>
<ul>
<li>135, 6085, Object not found or not accessible from scope (^^LPCB.EC0.BATP)</li>
</ul>
<p>代码段: If (LNot (^^LPCB.EC0.BATP (Zero)))</p>
<p>^^LPCB.EC0.BATP 这个方法写法中存在 ^^这两个字符,意思上级的上级域里面的,类似于相对路径, LPCB.EC.BATP 方法,完整路径就是 _SB.PCI0.LPCB.EC0.BATP,因为这个方法不在我们的 SSDT 里面,故此我们需要外部引入他.在 External 的部分加入 <code>External(\_SB.PCI0.LPCB.EC0.BATP, MethodObj)</code></p>
<p>但是上面的 ^^LPCB.EC0.BATP 这样的调用方法猜测应该是同一 SSDT 或是在 DSDT 中存在才能这样写,如果是外部引入后,我们需要将其改成绝对路径.</p>
<p>将 <code>^^LPCB.EC0.BATP</code> 替换成 <code>\_SB.PCI0.LPCB.EC0.BATP</code>.</p>
<ul>
<li>140, 6084, Object does not exist (NBIX)</li>
</ul>
<p>代码段:Return (NBIX)</p>
<p>这个返回值应该是一个变量,我们看看 DSDT 下他是如何定义的.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">Name (NBIX, Package (0x14)</div><div class="line">            &#123;</div><div class="line">                Zero, </div><div class="line">                Zero, </div><div class="line">                0xFFFFFFFF, </div><div class="line">                0xFFFFFFFF, </div><div class="line">                One, </div><div class="line">                0xFFFFFFFF, </div><div class="line">                0xFFFFFFFF, </div><div class="line">                0xFFFFFFFF, </div><div class="line">                Zero, </div><div class="line">                0xFFFFFFFF, </div><div class="line">                0xFFFFFFFF, </div><div class="line">                0xFFFFFFFF, </div><div class="line">                0xFFFFFFFF, </div><div class="line">                0xFFFFFFFF, </div><div class="line">                0xFFFFFFFF, </div><div class="line">                0xFFFFFFFF, </div><div class="line">                &quot;&quot;, </div><div class="line">                &quot;&quot;, </div><div class="line">                &quot;&quot;, </div><div class="line">                &quot;&quot;</div><div class="line">            &#125;)</div></pre></td></tr></table></figure>
<p><strong>Name (NBIX, Package (0x14)</strong> 它是一个对象集,对象集引入的类型应当是 PkgObj</p>
<p>在头部外部引入部分加入  <code>External(\_SB.PCI0.BAT0.NBIX, PkgObj)</code></p>
<p>剩下错误用同类的方法修补</p>
<p>最终复制完整个 SSDT-BATT.dsl 是这样的:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div><div class="line">444</div><div class="line">445</div><div class="line">446</div><div class="line">447</div><div class="line">448</div><div class="line">449</div><div class="line">450</div><div class="line">451</div><div class="line">452</div><div class="line">453</div><div class="line">454</div><div class="line">455</div><div class="line">456</div><div class="line">457</div><div class="line">458</div><div class="line">459</div><div class="line">460</div><div class="line">461</div><div class="line">462</div><div class="line">463</div><div class="line">464</div><div class="line">465</div><div class="line">466</div><div class="line">467</div><div class="line">468</div><div class="line">469</div><div class="line">470</div><div class="line">471</div><div class="line">472</div><div class="line">473</div><div class="line">474</div><div class="line">475</div><div class="line">476</div><div class="line">477</div><div class="line">478</div><div class="line">479</div><div class="line">480</div><div class="line">481</div><div class="line">482</div><div class="line">483</div><div class="line">484</div><div class="line">485</div><div class="line">486</div><div class="line">487</div><div class="line">488</div><div class="line">489</div><div class="line">490</div><div class="line">491</div><div class="line">492</div><div class="line">493</div><div class="line">494</div><div class="line">495</div><div class="line">496</div><div class="line">497</div><div class="line">498</div><div class="line">499</div><div class="line">500</div><div class="line">501</div><div class="line">502</div><div class="line">503</div><div class="line">504</div><div class="line">505</div><div class="line">506</div><div class="line">507</div><div class="line">508</div><div class="line">509</div><div class="line">510</div><div class="line">511</div><div class="line">512</div><div class="line">513</div><div class="line">514</div><div class="line">515</div><div class="line">516</div><div class="line">517</div><div class="line">518</div><div class="line">519</div><div class="line">520</div><div class="line">521</div><div class="line">522</div><div class="line">523</div><div class="line">524</div><div class="line">525</div><div class="line">526</div><div class="line">527</div><div class="line">528</div><div class="line">529</div><div class="line">530</div><div class="line">531</div><div class="line">532</div><div class="line">533</div><div class="line">534</div><div class="line">535</div><div class="line">536</div><div class="line">537</div><div class="line">538</div><div class="line">539</div><div class="line">540</div><div class="line">541</div><div class="line">542</div><div class="line">543</div><div class="line">544</div><div class="line">545</div><div class="line">546</div><div class="line">547</div><div class="line">548</div><div class="line">549</div><div class="line">550</div><div class="line">551</div><div class="line">552</div><div class="line">553</div><div class="line">554</div><div class="line">555</div><div class="line">556</div><div class="line">557</div><div class="line">558</div><div class="line">559</div><div class="line">560</div><div class="line">561</div><div class="line">562</div><div class="line">563</div><div class="line">564</div><div class="line">565</div><div class="line">566</div><div class="line">567</div><div class="line">568</div><div class="line">569</div><div class="line">570</div><div class="line">571</div></pre></td><td class="code"><pre><div class="line">// battery status patched for Ausu VM510LI</div><div class="line"></div><div class="line">DefinitionBlock (&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;batt&quot;, 0)</div><div class="line">&#123;</div><div class="line">    External(\BSLF, IntObj)</div><div class="line">    External(\_SB.PCI0, DeviceObj)</div><div class="line">    External(\_SB.PCI0.BAT0, DeviceObj)</div><div class="line">    External(\_SB.PCI0.BAT0.NBIX, PkgObj)</div><div class="line">    External(\_SB.PCI0.BAT0.PBIF, PkgObj)</div><div class="line">    External(\_SB.PCI0.BAT0.BIXT, PkgObj)</div><div class="line">    External(\_SB.PCI0.BAT0._BIF, MethodObj)</div><div class="line">    External(\_SB.PCI0.LPCB, DeviceObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0, DeviceObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.ECAV, MethodObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.BATP, MethodObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.GBTT, MethodObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.RDBL, IntObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.RDWD, IntObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.RDBT, IntObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.RCBT, IntObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.RDQK, IntObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.MUEC, MutexObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.PRTC, FieldUnitObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.SBBY, IntObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.ADDR, FieldUnitObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.CMDB, FieldUnitObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.SWTC, MethodObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.BCNT, FieldUnitObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.DAT0, FieldUnitObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.PRT2, FieldUnitObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.DAT1, FieldUnitObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.ADD2, FieldUnitObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.CMD2, FieldUnitObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.BCN2, FieldUnitObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.DA20, FieldUnitObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.DA21, FieldUnitObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.SSTS, FieldUnitObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.SST2, FieldUnitObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.WRBL, IntObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.WRWD, IntObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.WRBT, IntObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.SDBT, IntObj)</div><div class="line">    External(\_SB.PCI0.LPCB.EC0.WRQK, IntObj)</div><div class="line">    </div><div class="line">    </div><div class="line">    Scope(\_SB.PCI0.LPCB.EC0)</div><div class="line">    &#123;</div><div class="line">        // This is an override for battery methods that access EC fields</div><div class="line">        // larger than 8-bit.</div><div class="line">        OperationRegion (ECOR, EmbeddedControl, Zero, 0xFF)</div><div class="line">        Field (ECOR, ByteAcc, Lock, Preserve)</div><div class="line">        &#123;</div><div class="line">            //Offset (0x04), </div><div class="line">            //CMD1,   8, </div><div class="line">            //...</div><div class="line">            Offset (0x93),</div><div class="line">            TA00,8,TA01,8, </div><div class="line">            TA20,8,TA21,8, </div><div class="line">            //...</div><div class="line">            Offset (0xBE), </div><div class="line">            ,   16, //B0TM,   16</div><div class="line">            ,   16, //B0C1,   16,</div><div class="line">            ,   16, //B0C2,   16,</div><div class="line">            B001,8,B002,8, </div><div class="line">            //...</div><div class="line">            Offset (0xF4), </div><div class="line">            B0S0,8,B0S1,8, </div><div class="line">            //Offset (0xF8), </div><div class="line">            //Offset (0xFA), </div><div class="line">            Offset (0xFC), </div><div class="line">            B1S0,8,B1S1,8</div><div class="line">        &#125;</div><div class="line">        OperationRegion (SMBX, EmbeddedControl, 0x18, 0x28)</div><div class="line">        Field (SMBX, ByteAcc, NoLock, Preserve)</div><div class="line">        &#123;</div><div class="line">            Offset (0x04), </div><div class="line">            DT01,8,DT02,8</div><div class="line">        &#125;</div><div class="line">             </div><div class="line">        // TACH methods are renamed in native DSDT, so calls land here...</div><div class="line">        Method (TACH, 1, Serialized)</div><div class="line">        &#123;</div><div class="line">            Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler</div><div class="line">            If (ECAV ())</div><div class="line">            &#123;</div><div class="line">                While (One)</div><div class="line">                &#123;</div><div class="line">                    Store (Arg0, _T_0)</div><div class="line">                    If (LEqual (_T_0, Zero))</div><div class="line">                    &#123;</div><div class="line">                        Store (B1B2(TA00,TA01), Local0)</div><div class="line">                        Break</div><div class="line">                    &#125;</div><div class="line">                    ElseIf (LEqual (_T_0, One))</div><div class="line">                    &#123;</div><div class="line">                        Store (B1B2(TA20,TA21), Local0)</div><div class="line">                        Break</div><div class="line">                    &#125;</div><div class="line">                    Else</div><div class="line">                    &#123;</div><div class="line">                        Return (Ones)</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    Break</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                Multiply (Local0, 0x02, Local0)</div><div class="line">                If (LNotEqual (Local0, Zero))</div><div class="line">                &#123;</div><div class="line">                    Divide (0x0041CDB4, Local0, Local1, Local0)</div><div class="line">                    Store(Local1, Local1) // Fix Warnings</div><div class="line">                    Return (Local0)</div><div class="line">                &#125;</div><div class="line">                Else</div><div class="line">                &#123;</div><div class="line">                    Return (Ones)</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            Else</div><div class="line">            &#123;</div><div class="line">                Return (Ones)</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">            // RE1B,RECB,WE1B,WECB Fix 64 128 256 Method</div><div class="line">            Method (RE1B, 1, NotSerialized)</div><div class="line">            &#123;</div><div class="line">                OperationRegion(ERAM, EmbeddedControl, Arg0, 1)</div><div class="line">                Field(ERAM, ByteAcc, NoLock, Preserve) &#123; BYTE, 8 &#125;</div><div class="line">                Return(BYTE)</div><div class="line">            &#125;</div><div class="line">            Method (RECB, 2, Serialized)</div><div class="line">            &#123;</div><div class="line">                ShiftRight(Arg1, 3, Arg1)</div><div class="line">                Name(TEMP, Buffer(Arg1) &#123; &#125;)</div><div class="line">                Add(Arg0, Arg1, Arg1)</div><div class="line">                Store(0, Local0)</div><div class="line">                While (LLess(Arg0, Arg1))</div><div class="line">                &#123;</div><div class="line">                    Store(RE1B(Arg0), Index(TEMP, Local0))</div><div class="line">                    Increment(Arg0)</div><div class="line">                    Increment(Local0)</div><div class="line">                &#125;</div><div class="line">                Return(TEMP)</div><div class="line">            &#125;</div><div class="line">            Method (WE1B, 2, NotSerialized)</div><div class="line">            &#123;</div><div class="line">                OperationRegion(ERAM, EmbeddedControl, Arg0, 1)</div><div class="line">                Field(ERAM, ByteAcc, NoLock, Preserve) &#123; BYTE, 8 &#125;</div><div class="line">                Store(Arg1, BYTE)</div><div class="line">            &#125;</div><div class="line">            Method (WECB, 3, Serialized)</div><div class="line">            &#123;</div><div class="line">                ShiftRight(Arg1, 3, Arg1)</div><div class="line">                Name(TEMP, Buffer(Arg1) &#123; &#125;)</div><div class="line">                Store(Arg2, TEMP)</div><div class="line">                Add(Arg0, Arg1, Arg1)</div><div class="line">                Store(0, Local0)</div><div class="line">                While (LLess(Arg0, Arg1))</div><div class="line">                &#123;</div><div class="line">                    WE1B(Arg0, DerefOf(Index(TEMP, Local0)))</div><div class="line">                    Increment(Arg0)</div><div class="line">                    Increment(Local0)</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        Method (BIFA, 0, NotSerialized)</div><div class="line">        &#123;</div><div class="line">            If (ECAV ())</div><div class="line">            &#123;</div><div class="line">                If (BSLF)</div><div class="line">                &#123;</div><div class="line">                    Store (B1B2(B1S0,B1S1), Local0)</div><div class="line">                &#125;</div><div class="line">                Else</div><div class="line">                &#123;</div><div class="line">                    Store (B1B2(B0S0,B0S1), Local0)</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            Else</div><div class="line">            &#123;</div><div class="line">                Store (Ones, Local0)</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            Return (Local0)</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        Method (SMBR, 3, Serialized)</div><div class="line">        &#123;</div><div class="line">            Store (Package (0x03)</div><div class="line">                &#123;</div><div class="line">                    0x07, </div><div class="line">                    Zero, </div><div class="line">                    Zero</div><div class="line">                &#125;, Local0)</div><div class="line">            If (LNot (ECAV ()))</div><div class="line">            &#123;</div><div class="line">                Return (Local0)</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            If (LNotEqual (Arg0, RDBL))</div><div class="line">            &#123;</div><div class="line">                If (LNotEqual (Arg0, RDWD))</div><div class="line">                &#123;</div><div class="line">                    If (LNotEqual (Arg0, RDBT))</div><div class="line">                    &#123;</div><div class="line">                        If (LNotEqual (Arg0, RCBT))</div><div class="line">                        &#123;</div><div class="line">                            If (LNotEqual (Arg0, RDQK))</div><div class="line">                            &#123;</div><div class="line">                                Return (Local0)</div><div class="line">                            &#125;</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            Acquire (MUEC, 0xFFFF)</div><div class="line">            Store (PRTC, Local1)</div><div class="line">            Store (Zero, Local2)</div><div class="line">            While (LNotEqual (Local1, Zero))</div><div class="line">            &#123;</div><div class="line">                Stall (0x0A)</div><div class="line">                Increment (Local2)</div><div class="line">                If (LGreater (Local2, 0x03E8))</div><div class="line">                &#123;</div><div class="line">                    Store (SBBY, Index (Local0, Zero))</div><div class="line">                    Store (Zero, Local1)</div><div class="line">                &#125;</div><div class="line">                Else</div><div class="line">                &#123;</div><div class="line">                    Store (PRTC, Local1)</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            If (LLessEqual (Local2, 0x03E8))</div><div class="line">            &#123;</div><div class="line">                ShiftLeft (Arg1, One, Local3)</div><div class="line">                Or (Local3, One, Local3)</div><div class="line">                Store (Local3, ADDR)</div><div class="line">                If (LNotEqual (Arg0, RDQK))</div><div class="line">                &#123;</div><div class="line">                    If (LNotEqual (Arg0, RCBT))</div><div class="line">                    &#123;</div><div class="line">                        Store (Arg2, CMDB)</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                WECB(0x1c,256,Zero)</div><div class="line">                Store (Arg0, PRTC)</div><div class="line">                Store (SWTC (Arg0), Index (Local0, Zero))</div><div class="line">                If (LEqual (DerefOf (Index (Local0, Zero)), Zero))</div><div class="line">                &#123;</div><div class="line">                    If (LEqual (Arg0, RDBL))</div><div class="line">                    &#123;</div><div class="line">                        Store (BCNT, Index (Local0, One))</div><div class="line">                        Store (RECB(0x1c,256), Index (Local0, 0x02))</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    If (LEqual (Arg0, RDWD))</div><div class="line">                    &#123;</div><div class="line">                        Store (0x02, Index (Local0, One))</div><div class="line">                        Store (B1B2(DT01,DT02), Index (Local0, 0x02))</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    If (LEqual (Arg0, RDBT))</div><div class="line">                    &#123;</div><div class="line">                        Store (One, Index (Local0, One))</div><div class="line">                        Store (DAT0, Index (Local0, 0x02))</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    If (LEqual (Arg0, RCBT))</div><div class="line">                    &#123;</div><div class="line">                        Store (One, Index (Local0, One))</div><div class="line">                        Store (DAT0, Index (Local0, 0x02))</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            Release (MUEC)</div><div class="line">            Return (Local0)</div><div class="line">        &#125;</div><div class="line">        Method (ECSB, 7, NotSerialized)</div><div class="line">        &#123;</div><div class="line">            Store (Package (0x05)</div><div class="line">                &#123;</div><div class="line">                    0x11, </div><div class="line">                    Zero, </div><div class="line">                    Zero, </div><div class="line">                    Zero, </div><div class="line">                    Buffer (0x20) &#123;&#125;</div><div class="line">                &#125;, Local1)</div><div class="line">            If (LGreater (Arg0, One))</div><div class="line">            &#123;</div><div class="line">                Return (Local1)</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            If (ECAV ())</div><div class="line">            &#123;</div><div class="line">                Acquire (MUEC, 0xFFFF)</div><div class="line">                If (LEqual (Arg0, Zero))</div><div class="line">                &#123;</div><div class="line">                    Store (PRTC, Local0)</div><div class="line">                &#125;</div><div class="line">                Else</div><div class="line">                &#123;</div><div class="line">                    Store (PRT2, Local0)</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                Store (Zero, Local2)</div><div class="line">                While (LNotEqual (Local0, Zero))</div><div class="line">                &#123;</div><div class="line">                    Stall (0x0A)</div><div class="line">                    Increment (Local2)</div><div class="line">                    If (LGreater (Local2, 0x03E8))</div><div class="line">                    &#123;</div><div class="line">                        Store (SBBY, Index (Local1, Zero))</div><div class="line">                        Store (Zero, Local0)</div><div class="line">                    &#125;</div><div class="line">                    ElseIf (LEqual (Arg0, Zero))</div><div class="line">                    &#123;</div><div class="line">                        Store (PRTC, Local0)</div><div class="line">                    &#125;</div><div class="line">                    Else</div><div class="line">                    &#123;</div><div class="line">                        Store (PRT2, Local0)</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                If (LLessEqual (Local2, 0x03E8))</div><div class="line">                &#123;</div><div class="line">                    If (LEqual (Arg0, Zero))</div><div class="line">                    &#123;</div><div class="line">                        Store (Arg2, ADDR)</div><div class="line">                        Store (Arg3, CMDB)</div><div class="line">                        If (LOr (LEqual (Arg1, 0x0A), LEqual (Arg1, 0x0B)))</div><div class="line">                        &#123;</div><div class="line">                            Store (DerefOf (Index (Arg6, Zero)), BCNT)</div><div class="line">                            WECB(0x1c,256,DerefOf (Index (Arg6, One)))</div><div class="line">                        &#125;</div><div class="line">                        Else</div><div class="line">                        &#123;</div><div class="line">                            Store (Arg4, DAT0)</div><div class="line">                            Store (Arg5, DAT1)</div><div class="line">                        &#125;</div><div class="line"></div><div class="line">                        Store (Arg1, PRTC)</div><div class="line">                    &#125;</div><div class="line">                    Else</div><div class="line">                    &#123;</div><div class="line">                        Store (Arg2, ADD2)</div><div class="line">                        Store (Arg3, CMD2)</div><div class="line">                        If (LOr (LEqual (Arg1, 0x0A), LEqual (Arg1, 0x0B)))</div><div class="line">                        &#123;</div><div class="line">                            Store (DerefOf (Index (Arg6, Zero)), BCN2)</div><div class="line">                            WECB(0x44,256,DerefOf (Index (Arg6, One)))</div><div class="line">                        &#125;</div><div class="line">                        Else</div><div class="line">                        &#123;</div><div class="line">                            Store (Arg4, DA20)</div><div class="line">                            Store (Arg5, DA21)</div><div class="line">                        &#125;</div><div class="line"></div><div class="line">                        Store (Arg1, PRT2)</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    Store (0x7F, Local0)</div><div class="line">                    If (LEqual (Arg0, Zero))</div><div class="line">                    &#123;</div><div class="line">                        While (PRTC)</div><div class="line">                        &#123;</div><div class="line">                            Sleep (One)</div><div class="line">                            Decrement (Local0)</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                    Else</div><div class="line">                    &#123;</div><div class="line">                        While (PRT2)</div><div class="line">                        &#123;</div><div class="line">                            Sleep (One)</div><div class="line">                            Decrement (Local0)</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    If (Local0)</div><div class="line">                    &#123;</div><div class="line">                        If (LEqual (Arg0, Zero))</div><div class="line">                        &#123;</div><div class="line">                            Store (SSTS, Local0)</div><div class="line">                            Store (DAT0, Index (Local1, One))</div><div class="line">                            Store (DAT1, Index (Local1, 0x02))</div><div class="line">                            Store (BCNT, Index (Local1, 0x03))</div><div class="line">                            Store (RECB(0x1c,256), Index (Local1, 0x04))</div><div class="line">                        &#125;</div><div class="line">                        Else</div><div class="line">                        &#123;</div><div class="line">                            Store (SST2, Local0)</div><div class="line">                            Store (DA20, Index (Local1, One))</div><div class="line">                            Store (DA21, Index (Local1, 0x02))</div><div class="line">                            Store (BCN2, Index (Local1, 0x03))</div><div class="line">                            Store (RECB(0x44,256), Index (Local1, 0x04))</div><div class="line">                        &#125;</div><div class="line"></div><div class="line">                        And (Local0, 0x1F, Local0)</div><div class="line">                        If (Local0)</div><div class="line">                        &#123;</div><div class="line">                            Add (Local0, 0x10, Local0)</div><div class="line">                        &#125;</div><div class="line"></div><div class="line">                        Store (Local0, Index (Local1, Zero))</div><div class="line">                    &#125;</div><div class="line">                    Else</div><div class="line">                    &#123;</div><div class="line">                        Store (0x10, Index (Local1, Zero))</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                Release (MUEC)</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            Return (Local1)</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        Method (SMBW, 5, Serialized)</div><div class="line">        &#123;</div><div class="line">            Store (Package (0x01)</div><div class="line">                &#123;</div><div class="line">                    0x07</div><div class="line">                &#125;, Local0)</div><div class="line">            If (LNot (ECAV ()))</div><div class="line">            &#123;</div><div class="line">                Return (Local0)</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            If (LNotEqual (Arg0, WRBL))</div><div class="line">            &#123;</div><div class="line">                If (LNotEqual (Arg0, WRWD))</div><div class="line">                &#123;</div><div class="line">                    If (LNotEqual (Arg0, WRBT))</div><div class="line">                    &#123;</div><div class="line">                        If (LNotEqual (Arg0, SDBT))</div><div class="line">                        &#123;</div><div class="line">                            If (LNotEqual (Arg0, WRQK))</div><div class="line">                            &#123;</div><div class="line">                                Return (Local0)</div><div class="line">                            &#125;</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            Acquire (MUEC, 0xFFFF)</div><div class="line">            Store (PRTC, Local1)</div><div class="line">            Store (Zero, Local2)</div><div class="line">            While (LNotEqual (Local1, Zero))</div><div class="line">            &#123;</div><div class="line">                Stall (0x0A)</div><div class="line">                Increment (Local2)</div><div class="line">                If (LGreater (Local2, 0x03E8))</div><div class="line">                &#123;</div><div class="line">                    Store (SBBY, Index (Local0, Zero))</div><div class="line">                    Store (Zero, Local1)</div><div class="line">                &#125;</div><div class="line">                Else</div><div class="line">                &#123;</div><div class="line">                    Store (PRTC, Local1)</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            If (LLessEqual (Local2, 0x03E8))</div><div class="line">            &#123;</div><div class="line">                WECB(0x1c,256,Zero)</div><div class="line">                ShiftLeft (Arg1, One, Local3)</div><div class="line">                Store (Local3, ADDR)</div><div class="line">                If (LNotEqual (Arg0, WRQK))</div><div class="line">                &#123;</div><div class="line">                    If (LNotEqual (Arg0, SDBT))</div><div class="line">                    &#123;</div><div class="line">                        Store (Arg2, CMDB)</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                If (LEqual (Arg0, WRBL))</div><div class="line">                &#123;</div><div class="line">                    Store (Arg3, BCNT)</div><div class="line">                    WECB(0x1c,256,Arg4)</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                If (LEqual (Arg0, WRWD))</div><div class="line">                &#123;</div><div class="line">                    Store (ShiftRight(Arg4,8),DT02)</div><div class="line">                    Store (Arg4,DT01)</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                If (LEqual (Arg0, WRBT))</div><div class="line">                &#123;</div><div class="line">                    Store (Arg4, DAT0)</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                If (LEqual (Arg0, SDBT))</div><div class="line">                &#123;</div><div class="line">                    Store (Arg4, DAT0)</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                Store (Arg0, PRTC)</div><div class="line">                Store (SWTC (Arg0), Index (Local0, Zero))</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            Release (MUEC)</div><div class="line">            Return (Local0)</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    Scope(\_SB.PCI0.BAT0)</div><div class="line">    &#123;</div><div class="line">            Method (_BIX, 0, NotSerialized)  // _BIX: Battery Information Extended</div><div class="line">            &#123;</div><div class="line">                If (LNot (\_SB.PCI0.LPCB.EC0.BATP (Zero)))</div><div class="line">                &#123;</div><div class="line">                    Return (NBIX)</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                If (LEqual (\_SB.PCI0.LPCB.EC0.GBTT (Zero), 0xFF))</div><div class="line">                &#123;</div><div class="line">                    Return (NBIX)</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                _BIF ()</div><div class="line">                Store (DerefOf (Index (PBIF, Zero)), Index (BIXT, One))</div><div class="line">                Store (DerefOf (Index (PBIF, One)), Index (BIXT, 0x02))</div><div class="line">                Store (DerefOf (Index (PBIF, 0x02)), Index (BIXT, 0x03))</div><div class="line">                Store (DerefOf (Index (PBIF, 0x03)), Index (BIXT, 0x04))</div><div class="line">                Store (DerefOf (Index (PBIF, 0x04)), Index (BIXT, 0x05))</div><div class="line">                Store (DerefOf (Index (PBIF, 0x05)), Index (BIXT, 0x06))</div><div class="line">                Store (DerefOf (Index (PBIF, 0x06)), Index (BIXT, 0x07))</div><div class="line">                Store (DerefOf (Index (PBIF, 0x07)), Index (BIXT, 0x0E))</div><div class="line">                Store (DerefOf (Index (PBIF, 0x08)), Index (BIXT, 0x0F))</div><div class="line">                Store (DerefOf (Index (PBIF, 0x09)), Index (BIXT, 0x10))</div><div class="line">                Store (DerefOf (Index (PBIF, 0x0A)), Index (BIXT, 0x11))</div><div class="line">                Store (DerefOf (Index (PBIF, 0x0B)), Index (BIXT, 0x12))</div><div class="line">                Store (DerefOf (Index (PBIF, 0x0C)), Index (BIXT, 0x13))</div><div class="line">                If (LEqual (DerefOf (Index (BIXT, One)), One))</div><div class="line">                &#123;</div><div class="line">                    Store (Zero, Index (BIXT, One))</div><div class="line">                    Store (DerefOf (Index (BIXT, 0x05)), Local0)</div><div class="line">                    Multiply (DerefOf (Index (BIXT, 0x02)), Local0, Index (BIXT, 0x02))</div><div class="line">                    Multiply (DerefOf (Index (BIXT, 0x03)), Local0, Index (BIXT, 0x03))</div><div class="line">                    Multiply (DerefOf (Index (BIXT, 0x06)), Local0, Index (BIXT, 0x06))</div><div class="line">                    Multiply (DerefOf (Index (BIXT, 0x07)), Local0, Index (BIXT, 0x07))</div><div class="line">                    Multiply (DerefOf (Index (BIXT, 0x0E)), Local0, Index (BIXT, 0x0E))</div><div class="line">                    Multiply (DerefOf (Index (BIXT, 0x0F)), Local0, Index (BIXT, 0x0F))</div><div class="line">                    Divide (DerefOf (Index (BIXT, 0x02)), 0x03E8, Local0, Index (BIXT, 0x02))</div><div class="line">                    Divide (DerefOf (Index (BIXT, 0x03)), 0x03E8, Local0, Index (BIXT, 0x03))</div><div class="line">                    Divide (DerefOf (Index (BIXT, 0x06)), 0x03E8, Local0, Index (BIXT, 0x06))</div><div class="line">                    Divide (DerefOf (Index (BIXT, 0x07)), 0x03E8, Local0, Index (BIXT, 0x07))</div><div class="line">                    Divide (DerefOf (Index (BIXT, 0x0E)), 0x03E8, Local0, Index (BIXT, 0x0E))</div><div class="line">                    Divide (DerefOf (Index (BIXT, 0x0F)), 0x03E8, Local0, Index (BIXT, 0x0F))</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                Store (B1B2(^^LPCB.EC0.B001,^^LPCB.EC0.B002), Index (BIXT, 0x08))</div><div class="line">                Store (0x0001869F, Index (BIXT, 0x09))</div><div class="line">                Return (BIXT)</div><div class="line">            &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">        Method (B1B2, 2, NotSerialized)</div><div class="line">        &#123;</div><div class="line">            ShiftLeft (Arg1, 8, Local0)</div><div class="line">            Or (Arg0, Local0, Local0)</div><div class="line">            Return (Local0)</div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>好了,以上 SSDT 编译已经通过,那么我们进行最后一步,将上述复制过来的 Method 一一的重命名,使得原有的 Method 失效,这样我们注入的 SSDT 的新 Method 才能生效.</p>
<p>我们需要重命名的 Method 有</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">- Method (TACH, 1, Serialized)</div><div class="line">- Method (_BIX, 0, NotSerialized)</div><div class="line">- Method (BIFA, 0, NotSerialized)</div><div class="line">- Method (SMBR, 3, Serialized)</div><div class="line">- Method (ECSB, 7, NotSerialized)</div><div class="line">- Method (SMBW, 5, Serialized)</div></pre></td></tr></table></figure>
<p>在 config.plist 中编写补丁 ACPI &gt; DSDT &gt; Patches</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"># TACH</div><div class="line">Comment: change Method(TACH,1,N) to XACH, optionally pair with SSDT-BATT-VM510LI.aml</div><div class="line">Find:14 40 06 54 41 43 48 09</div><div class="line">Replace:14 40 06 58 41 43 48 09</div><div class="line"></div><div class="line"># _BIX</div><div class="line">Comment: change Method(_BIX,0,N) to XBIX, optionally pair with SSDT-BATT-VM510LI.aml</div><div class="line">Find:14 49 26 5F 42 49 58 00</div><div class="line">Replace:14 49 26 58 42 49 58 00</div><div class="line"></div><div class="line"># BIFA</div><div class="line">Comment: change Method(BIFA,0,N) to XIFA, optionally pair with SSDT-BATT-VM510LI.aml</div><div class="line">Find:14 27 42 49 46 41 00</div><div class="line">Replace:14 27 58 49 46 41 00</div><div class="line"></div><div class="line"># SMBR</div><div class="line">Comment: change Method(SMBR,3,N) to XMBR, optionally pair with SSDT-BATT-VM510LI.aml</div><div class="line">Find:14 4B 13 53 4D 42 52 0B</div><div class="line">Replace:14 4B 13 58 4D 42 52 0B</div><div class="line"></div><div class="line"># ECSB</div><div class="line">Comment: change Method(ECSB,7,N) to XCSB, optionally pair with SSDT-BATT-VM510LI.aml</div><div class="line">Find:14 4F 1A 45 43 53 42 07 </div><div class="line">Replace:14 4F 1A 58 43 53 42 07 </div><div class="line"></div><div class="line"># SMBW</div><div class="line">Comment: change Method(SMBW,5,N) to XMBW, optionally pair with SSDT-BATT-VM510LI.aml</div><div class="line">Find:14 45 10 53 4D 42 57 0D</div><div class="line">Replace:14 45 10 58 4D 42 57 0D</div></pre></td></tr></table></figure>
<p><strong>提示,不放心自己找的代码,可以拿个从 Ubuntu 提取未修改过的 DSDT.aml, 用 Hex Fiend 来替换下,再反编译看看,反编译后无需修改,直接搜索我们修改的变量名,看是否已经改成 X 开头.</strong></p>
<h2 id="注入显卡-ID"><a href="#注入显卡-ID" class="headerlink" title="注入显卡 ID"></a>注入显卡 ID</h2><ol>
<li>将 GFX 更名为 IGPU</li>
<li>放入 SSDT-IGPU.aml 至 Clover &gt; ACPI &gt; patched</li>
</ol>
<h2 id="屏蔽独立显卡"><a href="#屏蔽独立显卡" class="headerlink" title="屏蔽独立显卡"></a>屏蔽独立显卡</h2><p>首先复习一下屏蔽独立显卡的方法:</p>
<blockquote>
<p>引用自:<a href="https://www.firewolf.science/2015/05/%E5%B1%8F%E8%94%BD%E5%8F%8C%E6%98%BE%E5%8D%A1%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%9A%84%E7%8B%AC%E6%98%BE/" target="_blank" rel="external">屏蔽双显卡笔记本的独显</a></p>
<p>我们的目标非常简单。通常，在SSDT里，笔记本给我们提供了一个 _OFF 方法，我们可以通过调用这个方法，来切段独显的供电。最最简单的方法，就是在 相应的_INI方法里，调用_OFF方法。需要注意，这个_OFF方法，还可能会在DSDT里，或者可能会有不同的名字（如：GPOF、OPOF、_PS3，等等）。</p>
<p>某些_OFF方法的实现，会由于它包含了对EC(Embedded Controller)的依赖，而使得它不能在_INI方法里被调用。对于这样的情况，整个_OFF方法或者它的一部分代码，需要被移动到_REG方法里，以延迟执行（当_REG方法接收的参数Arg0 == 3 且 Arg1==1时，它会在_INI方法之后被执行）（详见ACPI规范）。对于一些情况，在_REG方法里调用_OFF的时机太迟了，从而导致要么屏蔽独显失败，要么系统五国。对于这样的情况，修改_OFF方法，移除它对于EC的依赖，将变得必要。之后，我们就可以在_INI里调用它（移除了对EC的依赖的_OFF）。同时，在_OFF里移除的代码，需要加到_REG里去。这样，虽然EC关联的代码在后（_INI后）执行（因为代码加到了_REG里，所以后执行），但却能达到更好的效果。贴子提供的例子，就是这种情况。</p>
</blockquote>
<p>我是根据上面的方法来屏蔽我华硕 VM510LI 的 AMD 显卡的,很不幸的是,我的 _OFF 也包含了对 EC 的依赖,故此我在 hotpatch 当中,我并不能单纯的使用 SSDT-Disable_DGPU.aml 来禁用独立显卡.</p>
<p>那么该如何使用 hotpatch 方法来屏蔽我们的独立显卡呢?</p>
<p>于是我扒到了这个帖子:<a href="https://www.tonymacx86.com/threads/guide-disabling-discrete-graphics-in-dual-gpu-laptops.163772/page-55#post-1232166" target="_blank" rel="external">https://www.tonymacx86.com/threads/guide-disabling-discrete-graphics-in-dual-gpu-laptops.163772/page-55#post-1232166</a></p>
<p>帖子提供了一个例子.<a href="https://raw.githubusercontent.com/RehabMan/Lenovo-Z50/master/hotpatch/SSDT-NVDA.dsl" target="_blank" rel="external">https://raw.githubusercontent.com/RehabMan/Lenovo-Z50/master/hotpatch/SSDT-NVDA.dsl</a></p>
<p>仔细查看例子中的代码会发现和上述屏蔽独立显卡不同的地方.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">External(_SB.PCI0, DeviceObj)</div><div class="line">Scope(_SB.PCI0)</div><div class="line">&#123;</div><div class="line">    Device(RMD2)</div><div class="line">    &#123;</div><div class="line">        Name(_HID, &quot;RMD20000&quot;)</div><div class="line">        Method(_INI)</div><div class="line">        &#123;</div><div class="line">           If (CondRefOf(\_SB.PCI0.RP05.PEGP._OFF)) &#123; \_SB.PCI0.RP05.PEGP._OFF() &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>看上述的代码段,他会重新定义一个设备,这个设备叫 RMD20000,然后这个设备有一个 INI 方法,里面就是调用 _OFF, 关闭显卡的系统方法.</p>
<p>那么,其实关闭显卡并不一定要在显卡启动的 INI 方法中运行 OFF 切断显卡电源,我估计是 PCI0 的设备是统一时间初始化的,其他设备的 INI 也一样可以将显卡电源关闭.</p>
<p>而我 _OFF 方法中存在一个 SGOF 的方法,这个方法里面调用了 EC0 的代码,那么需要将他去掉,故此我需要用重命名代替的方法,将原来的 SGOF 方法用重命名方法禁用掉,然后再用 SSDT 注入我们修改的 SGOF 方法, 由于 SGOF 方法中的 EC 相关的代码需要在 _REG 中执行,故此我们也需要将原有的 _REG 方法重命名禁用掉,也在 SSDT 中写入我们的 _REG 方法.</p>
<p>依然老方法,我不会写 SSDT, 但是我会抄.用上述的 SSDT-NVDA.dsl 来改成我们自己的 禁用显卡 SSDT.</p>
<p>最终写出来的 SSDT 应该就是这样</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div></pre></td><td class="code"><pre><div class="line">// SSDT-DAMD: Disable AMD</div><div class="line">DefinitionBlock (&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;DAMD&quot;, 0)</div><div class="line">&#123;</div><div class="line">    External(_SB.PCI0, DeviceObj)</div><div class="line">    External(\_SB.PCI0.RP05.PEGP._OFF,MethodObj)</div><div class="line">    External (HLRS, FieldUnitObj)</div><div class="line">    External (PWEN, FieldUnitObj)</div><div class="line">    Scope(_SB.PCI0)</div><div class="line">    &#123;</div><div class="line">        Device(RMD2)</div><div class="line">        &#123;</div><div class="line">            Name(_HID, &quot;RMD20000&quot;)</div><div class="line">            Method(_INI)</div><div class="line">            &#123;</div><div class="line">               If (CondRefOf(\_SB.PCI0.RP05.PEGP._OFF)) &#123; \_SB.PCI0.RP05.PEGP._OFF() &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        External(RP05, DeviceObj)</div><div class="line">        Scope(RP05)</div><div class="line">        &#123;</div><div class="line">            External(PEGP, DeviceObj)</div><div class="line">            Scope(PEGP)</div><div class="line">            &#123;</div><div class="line">                External(CCHK, MethodObj)</div><div class="line">                External(ONOF, IntObj)</div><div class="line">                External(LCTL,IntObj)</div><div class="line">                External(ELCT, IntObj)</div><div class="line">                External(SVID, IntObj)</div><div class="line">                External(HVID, IntObj)</div><div class="line">                External(SDID, IntObj)</div><div class="line">                External(HDID, IntObj)</div><div class="line">                External(LNKD, IntObj)</div><div class="line">                External(LNKD, IntObj)</div><div class="line">                External(LNKS, IntObj)</div><div class="line">                External(SGPO, MethodObj)</div><div class="line">                Method (SGOF, 0, Serialized)</div><div class="line">                &#123;</div><div class="line">                    If (LEqual (CCHK (Zero), Zero))</div><div class="line">                    &#123;</div><div class="line">                        Return (Zero)</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    Store (Zero, ONOF)</div><div class="line">                    //Store (\_SB.PCI0.LPCB.EC0.RRAM (0x0521), Local0)</div><div class="line">                    //And (Local0, 0xCF, Local0)</div><div class="line">                    //\_SB.PCI0.LPCB.EC0.WRAM (0x0521, Local0)</div><div class="line">                    //\_SB.PCI0.LPCB.EC0.WRAM (0x0520, 0x91)</div><div class="line">                    //\_SB.PCI0.LPCB.EC0.WRAM (0x03A4, Zero)</div><div class="line">                    //\_SB.PCI0.LPCB.EC0.WRAM (0x03A5, Zero)</div><div class="line">                    Store (LCTL, ELCT)</div><div class="line">                    Store (SVID, HVID)</div><div class="line">                    Store (SDID, HDID)</div><div class="line">                    Store (One, LNKD)</div><div class="line">                    While (LNotEqual (LNKS, Zero))</div><div class="line">                    &#123;</div><div class="line">                        Sleep (One)</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    SGPO (HLRS, One)</div><div class="line">                    SGPO (PWEN, Zero)</div><div class="line">                    Return (Zero)</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        External(LPCB, DeviceObj)</div><div class="line">        Scope(LPCB)</div><div class="line">        &#123;</div><div class="line">            External(EC0, DeviceObj)</div><div class="line">            Scope(EC0)</div><div class="line">            &#123;</div><div class="line">                External(ECFL, IntObj)</div><div class="line">                External(RRAM, MethodObj)</div><div class="line">                External(WRAM, MethodObj)</div><div class="line">                Method (_REG, 2, NotSerialized)  // _REG: Region Availability</div><div class="line">                &#123;</div><div class="line">                    If (LEqual (Arg0, 0x03))</div><div class="line">                    &#123;</div><div class="line">                        Store (Arg1, ECFL)</div><div class="line">                    &#125;</div><div class="line">                    </div><div class="line">                    If (LAnd(LEqual(Arg0,3),LEqual(Arg1,1)))</div><div class="line">                    &#123;</div><div class="line">                        Store (\_SB.PCI0.LPCB.EC0.RRAM (0x0521), Local0)</div><div class="line">                        And (Local0, 0xCF, Local0)</div><div class="line">                        \_SB.PCI0.LPCB.EC0.WRAM (0x0521, Local0)</div><div class="line">                        \_SB.PCI0.LPCB.EC0.WRAM (0x0520, 0x91)</div><div class="line">                        \_SB.PCI0.LPCB.EC0.WRAM (0x03A4, Zero)</div><div class="line">                        \_SB.PCI0.LPCB.EC0.WRAM (0x03A5, Zero)</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>然后我们需要重命名的就是两个方法,一个 SGOF, 和 _REG.</p>
<p>在 Clover &gt; ACPI &gt; DSDT &gt; Patches 添加如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"># SGOF</div><div class="line">Comment:change Method(SGOF,0,Serialized) to XGOF, optionally pair with SSDT-DAMD-VM510LI.aml</div><div class="line">Find:53474F46 08</div><div class="line">Replace:58474F46 08</div><div class="line"></div><div class="line"># _REG</div><div class="line">Comment:change Method(_REG,0,Serialized) to XREG, optionally pair with SSDT-DAMD-VM510LI.aml</div><div class="line">Find:5F 52 45 47 02</div><div class="line">Replace:58 52 45 47 02</div></pre></td></tr></table></figure>
<h2 id="注入声卡-ID"><a href="#注入声卡-ID" class="headerlink" title="注入声卡 ID"></a>注入声卡 ID</h2><p>这个非常简单,只需要放入 SSDT-HDEF.aml 到 Clover &gt; ACPI &gt; patched</p>
<p>但是需要注意自己的 DSDT 有没有定义 HDEF 设备,如果没有,打开 SSDT-HDEF.dsl 将以下注释去掉.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">// Note: If your ACPI set (DSDT+SSDTs) does not define HDEF (or AZAL)</div><div class="line">// add this Device definition (by uncommenting it)</div><div class="line">//</div><div class="line">//Device(_SB.PCI0.HDEF)</div><div class="line">//&#123;</div><div class="line">//    Name(_ADR, 0x001b0000)</div><div class="line">//    Name(_PRW, Package() &#123; 0x0d, 0x05 &#125;) // may need tweaking (or not needed)</div><div class="line">//&#125;</div></pre></td></tr></table></figure>
<p><del>另外注意修改自己需要注入的 ID, 我的是4</del></p>
<p>无需修改 ID,我们只需在 SSDT-Config.aml 的 Name(AUDL, Ones)  定义我们注入的 ID 即可。（关于SSDT-Config.aml 更多的参数细节，后续会提到。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">    Method(_SB.PCI0.HDEF._DSM, 4)</div><div class="line">    &#123;</div><div class="line">        If (CondRefOf(\RMCF.AUDL)) &#123; If (Ones == \RMCF.AUDL) &#123; Return(0) &#125; &#125;</div><div class="line">        If (!Arg2) &#123; Return (Buffer() &#123; 0x03 &#125; ) &#125;</div><div class="line">        Local0 = Package()</div><div class="line">        &#123;</div><div class="line">            &quot;layout-id&quot;, Buffer(4) &#123; 4, 0, 0, 0 &#125;, </div><div class="line">            &quot;hda-gfx&quot;, Buffer() &#123; &quot;onboard-1&quot; &#125;,</div><div class="line">            &quot;PinConfigurations&quot;, Buffer() &#123; &#125;,</div><div class="line">        &#125;</div><div class="line">        If (CondRefOf(\RMCF.AUDL))</div><div class="line">        &#123;</div><div class="line">            CreateDWordField(DerefOf(Local0[1]), 0, AUDL)</div><div class="line">            AUDL = \RMCF.AUDL</div><div class="line">        &#125;</div><div class="line">        Return(Local0)</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><del>但是不清楚为什么上面的注入不正常,我用回 Clover 的 Devices 里面的 Inject 设置为4 RestHDA 设为 yes</del></p>
<p>终于知道为何放入上面 SSDT 后声卡依然无声，是因为 SSDT-config.dsl 问题。在下面的章节补上对这个非常非常重要的 SSDT-Config.aml 的讲解</p>
<p>上面的 HDEF 只是给声卡出声而已，还需要放入 SSDT-HDAU.aml 以给 HDMI 出声。</p>
<p>最终 HDMI 声音和声卡声音都能正常出声。</p>
<h2 id="SSDT-Config-说明"><a href="#SSDT-Config-说明" class="headerlink" title="SSDT-Config 说明"></a>SSDT-Config 说明</h2><p>这个漏了说，而且这个是 Hotpatch 必用的 SSDT，因为里面包含了一些配置。</p>
<p>首先我们来看看 SSDT-Config 有些啥？</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line">// configuration data for other SSDTs in this pack</div><div class="line"></div><div class="line">DefinitionBlock(&quot;&quot;, &quot;SSDT&quot;, 2, &quot;hack&quot;, &quot;RMCF&quot;, 0)</div><div class="line">&#123;</div><div class="line">    Device(RMCF)</div><div class="line">    &#123;</div><div class="line">        Name(_ADR, 0)   // do not remove</div><div class="line"></div><div class="line">        Method(HELP)</div><div class="line">        &#123;</div><div class="line">            Store(&quot;TYPE indicates type of the computer. 0: desktop, 1: laptop&quot;, Debug)</div><div class="line">            Store(&quot;HIGH selects display type. 1: high resolution, 2: low resolution&quot;, Debug)</div><div class="line">            Store(&quot;DPTS for laptops only. 1: enables/disables DGPU in _WAK/_PTS&quot;, Debug)</div><div class="line">            Store(&quot;SHUT enables shutdown fix. 1: disables _PTS code when Arg0==5&quot;, Debug)</div><div class="line">            Store(&quot;AUDL indicates audio layout-id for patched AppleHDA. Ones: no injection&quot;, Debug)</div><div class="line">            Store(&quot;BKLT indicates the type of backlight control. 0: IntelBacklight, 1: AppleBacklight&quot;, Debug)</div><div class="line">            Store(&quot;LMAX indicates max for IGPU PWM backlight. Ones: Use default, other values must match framebuffer&quot;, Debug)</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        // TYPE: Indicates the type of computer... desktop or laptop</div><div class="line">        //</div><div class="line">        //  0: desktop</div><div class="line">        //  0: 台式机</div><div class="line">        //  1: laptop</div><div class="line">        //  1: 笔记本</div><div class="line">        Name(TYPE, 1)</div><div class="line"></div><div class="line">        // HIGH: High resolution/low resolution selection.  Affects IGPU injection.</div><div class="line">        // HIGH: 高分辨率/低分辨率选择。 影响IGPU注入。</div><div class="line">        // For 1600x900+ on Sandy/Ivy, use 1</div><div class="line">        // 对于1600x900 +在Sandy / Ivy，请使用1</div><div class="line">        // For UHD/QHD+ on Haswell/Broadwell, use 1</div><div class="line">        // 对于Haswell / Broadwell的UHD / QHD +，请使用1</div><div class="line">        // Others (low resolution), use 0</div><div class="line">        // 其他（低分辨率），使用0</div><div class="line">        Name(HIGH, 0)</div><div class="line"></div><div class="line">        // DPTS: For laptops only: set to 1 if you want to enable and</div><div class="line">        // DPTS：仅适用于笔记本电脑：如果要启用和，请设置为1</div><div class="line">        //  disable the DGPU _PTS and _WAK.</div><div class="line">        //  禁用DGPU _PTS和_WAK。</div><div class="line">        //  0: does not manipulate the DGPU in _WAK and _PTS</div><div class="line">        //  0：不操作_WAK和_PTS中的DGPU</div><div class="line">        //  1: disables the DGPU in _WAK and enables it in _PTS</div><div class="line">        //  1：禁用_WAK中的DGPU，并在_PTS中启用它</div><div class="line">        Name(DPTS, 0)</div><div class="line"></div><div class="line">        // SHUT: Shutdown fix, disable _PTS code when Arg0==5 (shutdown)</div><div class="line">        // SHUT：关闭修复，当Arg0 == 5（关闭）时禁用_PTS代码，</div><div class="line">        //  0: does not affect _PTS behavior during shutdown</div><div class="line">        //  0：在关闭期间不影响_PTS行为</div><div class="line">        //  1: disables _PTS code during shutdown</div><div class="line">        //  1：在关闭期间禁用_PTS代码</div><div class="line">        Name(SHUT, 0)</div><div class="line"></div><div class="line">        // AUDL: Audio Layout</div><div class="line">        // AUDL：音频布局</div><div class="line">        // The value here will be used to inject layout-id for HDEF and HDAU</div><div class="line">        // 这里的值将用于注入HDEF和HDAU的layout-id</div><div class="line">        // If set to Ones, no audio injection will be done.</div><div class="line">        // 如果设置为Ones，则不会进行音频插入。</div><div class="line">        Name(AUDL, Ones)</div><div class="line"></div><div class="line">        // BKLT: Backlight control type</div><div class="line">        // BKLT：背光控制类型</div><div class="line">        // 0: Using IntelBacklight.kext</div><div class="line">        // 0：使用IntelBacklight.kext</div><div class="line">        // 1: Using AppleBacklight.kext + AppleBacklightInjector.kext</div><div class="line">        // 1：使用AppleBacklight.kext + AppleBacklightInjector.kext</div><div class="line">        Name(BKLT, 0)</div><div class="line"></div><div class="line">        // LMAX: Backlight PWM MAX.  Must match framebuffer in use.</div><div class="line">        // LMAX：背光PWM最大值。 必须匹配使用中的帧缓冲区。</div><div class="line">        // Ones: Default will be used (0x710 for Ivy/Sandy, 0xad9 for Haswell/Broadwell)</div><div class="line">        // Ones：将使用默认（Ivy / Sandy 的默认值是 0x710，Haswell / Broadwell 的默认值是 0xad9）</div><div class="line">        // Other values: must match framebuffer</div><div class="line">        // 其他值：必须与framebuffer相匹配</div><div class="line">        Name(LMAX, Ones)</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">//EOF</div></pre></td></tr></table></figure>
<p>上面 RM 都注释了，我以 Google 翻译过来，方便理解。</p>
<ul>
<li>第一个值，<strong>TYPE</strong> 从 SSDT-IGPU 调用，影响显卡 ID 的注入。查看了下代码，好像是区分是否注入高分屏 ID 有关。</li>
<li>第二个值，<strong>HIGH</strong> 从 SSDT-IGPU 调用，影响显卡 ID 的注入。当 TYPE 设置成笔记本才生效。</li>
<li>第三个值，<strong>DPTS</strong> 从 SSDT-PTSWAK 调用，这个 SSDT 是重写了睡眠和唤醒的方法，加入了一些我们补丁需要用到的代码，这里设置 1 则会在睡眠的时候开启显卡，唤醒后关闭显卡。</li>
<li>第四个值，<strong>SHUT</strong> 从 SSDT-PTSWAK 调用，这个 SSDT 功能同上，这里设置 1 则会在关机的时候禁用 _PTS，和 Shutdown fix 同理。</li>
<li>第五个值，<strong>AUDL</strong> 从 SSDT-HDAU 和 SSDT-HDEF 调用，这两个 SSDT 前者负责注入声卡 ID，后者则负责注入 HDMI 声卡 ID，而这个值就是控制两个 SSDT 注入声卡的行为，如果写 Ones 则什么都不注入，如果写 3，则声卡的 layout-id 则为 3。</li>
<li>第六个值，<strong>BKLT</strong> 从 SSDT-PNLF 调用，这个 SSDT 看名字大家应该都很熟悉，就是加入 PNLF 设备，用来启用我们的笔记本亮度调节驱动的，而这个值是控制亮度调节的驱动是用哪一种，0 是使用 IntelBacklight.kext，1 是使用 AppleBacklight.kext + AppleBacklightInjector.kext。</li>
<li>第七个值，<strong>LMAX</strong> 从 SSDT-PNLF 调用，这个 SSDT 同上，这个值是设置背光的 PWM 最大值，Ones 是使用默认值，Ivy / Sandy 的默认值是 0x710，Haswell / Broadwell 的默认值是 0xad9，你也可以设置其他值，但是这个值必须与 framebuffer 相匹配。</li>
</ul>
<h2 id="变频-声卡-CC-配置-USB-遮蔽器"><a href="#变频-声卡-CC-配置-USB-遮蔽器" class="headerlink" title="变频\声卡 CC 配置\USB 遮蔽器"></a>变频\声卡 CC 配置\USB 遮蔽器</h2><p>这些在黑苹果各大论坛都有介绍,我就不再论述,只需放入 SSDT 即可.</p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>全部修改后,到最重要一步,测试修改的 hotpatch 是否可用.</p>
<p>还挺幸运的,一直写下来的笔记,就 FN 因为完全无脑抄袭没有注意自己的 Q0E 和 Q0F 是在 _SB.PCI0.LPCB.EC0 设备里面,我没把他们放到这个 Scope (域) 里面,故此不生效.</p>
<h2 id="最后附上-VM510LI-Hotpatch-的-EFI"><a href="#最后附上-VM510LI-Hotpatch-的-EFI" class="headerlink" title="最后附上 VM510LI-Hotpatch 的 EFI"></a>最后附上 VM510LI-Hotpatch 的 EFI</h2><p><a href="https://blog.neroxps.cn/blog/macOS/VM510LI-hotpatch.zip" target="_blank" rel="external">VM510LI-Hotpatch.zip</a></p>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul>
<li><a href="http://luleimi.blog.163.com/blog/static/175219645201011201537841/" target="_blank" rel="external">External()用法</a></li>
<li><a href="http://bbs.pcbeta.com/viewthread-944566-1-1.html" target="_blank" rel="external">自己动手写DSDT系列教程1-ASL（ACPI Source Language）基础篇</a></li>
<li><a href="https://github.com/RehabMan/OS-X-Clover-Laptop-Config/tree/master/hotpatch" target="_blank" rel="external">OS-X-Clover-Laptop-Config</a></li>
<li><a href="https://github.com/RehabMan/HP-ProBook-4x30s-DSDT-Patch/tree/master/hotpatch" target="_blank" rel="external">HP-ProBook-4x30s-DSDT-Patch</a></li>
<li><a href="https://www.tonymacx86.com/threads/guide-using-clover-to-hotpatch-acpi.200137/" target="_blank" rel="external">Guide Using Clover to “hotpatch” ACPI</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本笔记参考 RehabMan 指南 &lt;a href=&quot;https://www.tonymacx86.com/threads/guide-using-clover-to-hotpatch-acpi.200137/&quot; target=&quot;_blank&quot; r
    
    </summary>
    
      <category term="黑苹果" scheme="http://hexo.neroxps.cn/categories/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
    
      <category term="黑苹果" scheme="http://hexo.neroxps.cn/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
      <category term="Mac" scheme="http://hexo.neroxps.cn/tags/Mac/"/>
    
      <category term="Hackintosh" scheme="http://hexo.neroxps.cn/tags/Hackintosh/"/>
    
      <category term="ASUS" scheme="http://hexo.neroxps.cn/tags/ASUS/"/>
    
      <category term="VM510LI" scheme="http://hexo.neroxps.cn/tags/VM510LI/"/>
    
  </entry>
  
  <entry>
    <title>华硕 VM510LI 屏蔽独显</title>
    <link href="http://hexo.neroxps.cn/2017/01/31/ASUS-VM510LI-Disable-graphics/"/>
    <id>http://hexo.neroxps.cn/2017/01/31/ASUS-VM510LI-Disable-graphics/</id>
    <published>2017-01-30T16:00:00.000Z</published>
    <updated>2017-07-19T12:47:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>找到了 _OFF 方法是在 SSDT11定义的。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">Scope (\_SB.PCI0.RP05.PEGP)</div><div class="line">&#123;</div><div class="line">    Method (_ON, 0, Serialized)  // _ON_: Power On</div><div class="line">    &#123;</div><div class="line">        SGON ()</div><div class="line">        Notify (\_SB.PCI0.RP05, Zero)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    Method (_OFF, 0, Serialized)  // _OFF: Power Off</div><div class="line">    &#123;</div><div class="line">        SGOF ()</div><div class="line">        Notify (\_SB.PCI0.RP05, Zero)</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>发现其中 _OFF 方法调用了 SGOF 方法。</p>
<p>查找到 SGOF 方法是在 SSDT10 定义的。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">Method (SGOF, 0, Serialized)</div><div class="line">&#123;</div><div class="line">    If (LEqual (CCHK (Zero), Zero))</div><div class="line">    &#123;</div><div class="line">        Return (Zero)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    Store (Zero, ONOF)</div><div class="line">    Store (\_SB.PCI0.LPCB.EC0.RRAM (0x0521), Local0)</div><div class="line">    And (Local0, 0xCF, Local0)</div><div class="line">    \_SB.PCI0.LPCB.EC0.WRAM (0x0521, Local0)</div><div class="line">    \_SB.PCI0.LPCB.EC0.WRAM (0x0520, 0x91)</div><div class="line">    \_SB.PCI0.LPCB.EC0.WRAM (0x03A4, Zero)</div><div class="line">    \_SB.PCI0.LPCB.EC0.WRAM (0x03A5, Zero)</div><div class="line">    Store (LCTL, ELCT)</div><div class="line">    Store (SVID, HVID)</div><div class="line">    Store (SDID, HDID)</div><div class="line">    Store (One, LNKD)</div><div class="line">    While (LNotEqual (LNKS, Zero))</div><div class="line">    &#123;</div><div class="line">        Sleep (One)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    SGPO (HLRS, One)</div><div class="line">    SGPO (PWEN, Zero)</div><div class="line">    Return (Zero)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>其中调用了有四行 EC0 的代码。记下来，然后将这些代码注释掉。修改后如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">Method (SGOF, 0, Serialized)</div><div class="line">&#123;</div><div class="line">    If (LEqual (CCHK (Zero), Zero))</div><div class="line">    &#123;</div><div class="line">        Return (Zero)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    Store (Zero, ONOF)</div><div class="line">    // Store (\_SB.PCI0.LPCB.EC0.RRAM (0x0521), Local0)</div><div class="line">    // And (Local0, 0xCF, Local0)</div><div class="line">    // \_SB.PCI0.LPCB.EC0.WRAM (0x0521, Local0)</div><div class="line">    // \_SB.PCI0.LPCB.EC0.WRAM (0x0520, 0x91)</div><div class="line">    // \_SB.PCI0.LPCB.EC0.WRAM (0x03A4, Zero)</div><div class="line">    // \_SB.PCI0.LPCB.EC0.WRAM (0x03A5, Zero)</div><div class="line">    Store (LCTL, ELCT)</div><div class="line">    Store (SVID, HVID)</div><div class="line">    Store (SDID, HDID)</div><div class="line">    Store (One, LNKD)</div><div class="line">    While (LNotEqual (LNKS, Zero))</div><div class="line">    &#123;</div><div class="line">        Sleep (One)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    SGPO (HLRS, One)</div><div class="line">    SGPO (PWEN, Zero)</div><div class="line">    Return (Zero)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>找到 _INI 方法是在 SSDT10 里面</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Method (_INI, 0, NotSerialized)  // _INI: Initialize</div><div class="line">&#123;</div><div class="line">    Store (Zero, \_SB.PCI0.RP05.PEGP._ADR)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>从中调用 _OFF 方法，修改如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Method (_INI, 0, NotSerialized)  // _INI: Initialize</div><div class="line">&#123;</div><div class="line">    Store (Zero, \_SB.PCI0.RP05.PEGP._ADR)</div><div class="line">    //added to turn nvidia/radeon off</div><div class="line">    External(\_SB.PCI0.RP05.PEGP._OFF, MethodObj)</div><div class="line">    _OFF()</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>其中 <code>External(\_SB.PCI0.RP05.PEGP._OFF, MethodObj)</code> _OFF 方法的路径必须要对，否者会出错。</p>
<p>找到 _REG 方法，在 DSDT 里。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Method (_REG, 2, NotSerialized)  // _REG: Region Availability</div><div class="line">&#123;</div><div class="line">    If (LEqual (Arg0, 0x03))</div><div class="line">    &#123;</div><div class="line">        Store (Arg1, ECFL)</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>添加之前在 SGOF 方法内注释的有关 EC0 的代码，修改后如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">Method (_REG, 2, NotSerialized)  // _REG: Region Availability</div><div class="line">&#123;</div><div class="line">    If (LEqual (Arg0, 0x03))</div><div class="line">    &#123;</div><div class="line">        Store (Arg1, ECFL)</div><div class="line">    &#125;</div><div class="line">    //added to turn nvidia/radeon off</div><div class="line">    If (LAnd(LEqual(Arg0,3),LEqual(Arg1,1)))</div><div class="line">    &#123;</div><div class="line">        Store (\_SB.PCI0.LPCB.EC0.RRAM (0x0521), Local0)</div><div class="line">        And (Local0, 0xCF, Local0)</div><div class="line">        \_SB.PCI0.LPCB.EC0.WRAM (0x0521, Local0)</div><div class="line">        \_SB.PCI0.LPCB.EC0.WRAM (0x0520, 0x91)</div><div class="line">        \_SB.PCI0.LPCB.EC0.WRAM (0x03A4, Zero)</div><div class="line">        \_SB.PCI0.LPCB.EC0.WRAM (0x03A5, Zero)</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>其中 <code>If (LAnd(LEqual(Arg0,3),LEqual(Arg1,1)))</code> 是和上面的 <code>If (LEqual (Arg0, 0x03))</code> 和 <code>Store (Arg1, ECFL)</code> 对应的，意思我猜测是：</p>
<p>上面的 <code>LEqual (Arg0, 0x03)</code> 成立且 <code>Store (Arg1, ECFL)</code> = <code>LEqual(Arg1,1)</code> 则执行我们的添加的 EC0 系列的代码，故此需要按情况修改 <code>If (LAnd(LEqual(Arg0,3),LEqual(Arg1,1)))</code>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;找到了 _OFF 方法是在 SSDT11定义的。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line
    
    </summary>
    
      <category term="黑苹果" scheme="http://hexo.neroxps.cn/categories/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
    
      <category term="黑苹果" scheme="http://hexo.neroxps.cn/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
      <category term="Mac" scheme="http://hexo.neroxps.cn/tags/Mac/"/>
    
      <category term="Hackintosh" scheme="http://hexo.neroxps.cn/tags/Hackintosh/"/>
    
      <category term="ASUS" scheme="http://hexo.neroxps.cn/tags/ASUS/"/>
    
      <category term="VM510LI" scheme="http://hexo.neroxps.cn/tags/VM510LI/"/>
    
  </entry>
  
  <entry>
    <title>华硕 VM510LI 黑苹果手记</title>
    <link href="http://hexo.neroxps.cn/2017/01/18/ASUS-VM510LI-Hackintosh/"/>
    <id>http://hexo.neroxps.cn/2017/01/18/ASUS-VM510LI-Hackintosh/</id>
    <published>2017-01-17T16:00:00.000Z</published>
    <updated>2017-07-19T12:47:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>装完我那台老掉牙的 Dell 笔记本黑苹果系统后，嫌弃它分辨率太低了，我又将我的目光转向老婆公司送的华硕 VM510LI 笔记本。😝</p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>趁目前 Windows 平台还在的时候，先下载 AIDA64 Engineer，导出以下内容：</p>
<h4 id="导出显卡-Bios-备用"><a href="#导出显卡-Bios-备用" class="headerlink" title="导出显卡 Bios 备用"></a>导出显卡 Bios 备用</h4><p>方法：</p>
<ol>
<li>打开 AIDA64 Engineer；</li>
<li>查看，勾上状态栏。（此时软件下方应该会出现了一个框。）</li>
<li>右键状态栏 Video Debug。</li>
<li>Video Bios Dump</li>
<li>点开显示设备→图形处理器（GPU）查看 PCI 设备的 ID（8086-1616）</li>
<li>将导出的 bin 文件重命名为 8086-1616.rom 备用。</li>
</ol>
<h4 id="导出-ACPI-的-DSDT-和-SSDT（Windows）"><a href="#导出-ACPI-的-DSDT-和-SSDT（Windows）" class="headerlink" title="导出 ACPI 的 DSDT 和 SSDT（Windows）"></a>导出 ACPI 的 DSDT 和 SSDT（Windows）</h4><blockquote>
<p><strong>建议使用 Ubuntu 方法提取</strong></p>
</blockquote>
<p>DSDT 和 SSDT 是必须导出的，但是有很多方法，我比较喜欢在 Linux 导出，不知道为啥感觉它纯正点（其实是一样的，就是个人感觉 Linux 好一点而已。）</p>
<p>新版的 AIDA64 Engineer 可以在 WIN10 下导出 DSDT 和 SSDT 了。老板好像是不可以的。</p>
<blockquote>
<p>本笔记的 AIDA64 Engineer 版本为 5.80.4000</p>
</blockquote>
<p>方法：</p>
<ol>
<li>菜单栏工具</li>
<li>ACPI 浏览器</li>
<li>Save DSDT</li>
<li>Save Table</li>
<li>一个一个 SSDT 保存。SSDT 开头才需要保存，其他不需要管。</li>
</ol>
<h4 id="导出-EDID-参数"><a href="#导出-EDID-参数" class="headerlink" title="导出 EDID 参数"></a>导出 EDID 参数</h4><p>这个只是备用，看远景上扒贴看到很多人驱动核心显卡后内置屏幕无法显示，只能接入 HDMI 接外屏，这时候就需要注入 EDID 参数了（还有上面提取到的 Video Bios）</p>
<p>方法：</p>
<ol>
<li>安装 EDID Viewer</li>
<li>菜单栏 Read EDID</li>
<li>选择 @monitor.inf 开头的选项，按 Show EDID Informations 按钮。</li>
<li>滚到最下面，选中 RAW Data 下方的所有16进制字符。</li>
<li>打开记事本粘贴进去，并去掉所有换行符和空格，开头的0x00-0x70这一段全部不要。</li>
</ol>
<h4 id="记下-AMD-的显卡-VEN-和-DEV-的-ID"><a href="#记下-AMD-的显卡-VEN-和-DEV-的-ID" class="headerlink" title="记下 AMD 的显卡 VEN 和 DEV 的 ID"></a>记下 AMD 的显卡 VEN 和 DEV 的 ID</h4><ol>
<li>设备管理器</li>
<li>显示适配器</li>
<li>AMD Radeon（TM）R5 M320</li>
<li>属性切换到硬件 ID</li>
<li>PCI\VEN<em> <strong>1002</strong>&amp;DEV</em><strong>6665</strong>&amp;SUBSYS_192D1043&amp;REV_83</li>
</ol>
<p>这个记下来，因为我目前不知道笔记本到底能不能驱动独立显卡，<del>这个显卡虽然不牛，但是有比没有好嘛。</del></p>
<p><del>一般笔记本的做法都是屏蔽独显，但是如果能用上独显就更好。先记下，日后扒帖子找办法驱动。</del></p>
<p>妈蛋，打完上面那句话后，上网查了下我的 R5 M320，网上说比我核心显卡 HD5500更差，看来是没必要驱动了，果断屏蔽掉，浪费电。</p>
<h4 id="Windows-最后"><a href="#Windows-最后" class="headerlink" title="Windows 最后"></a>Windows 最后</h4><p>以上都做完后，基本上就可以和 Windows 说拜拜了。当然我只会将 Windows 做一个镜像，等黑苹果吃不下的时候，或者急需要使用 Windows 系统的时候迅速还原。</p>
<p>最后你可以下载个鲁大师，保存一下配置截图，方便有啥问题到远景论坛求助。</p>
<p>AIDA64 则可以导出详细报告，这样可以快速确定鲁大师搞不清楚的一些芯片型号，例如我这个笔记本，鲁大师显示的是 Intel 的声卡，估计是 HDMI 搞鬼，但是实际上是 Realtek ALC233 这个声卡 AppleALC 项目有驱动，只是要慢慢试 ID 了。</p>
<h4 id="Ubuntu-下提取-ACPI-下的-DSDT-和-SSDT"><a href="#Ubuntu-下提取-ACPI-下的-DSDT-和-SSDT" class="headerlink" title="Ubuntu 下提取 ACPI 下的 DSDT 和 SSDT"></a>Ubuntu 下提取 ACPI 下的 DSDT 和 SSDT</h4><p>我是不太放心 Windows 下提取的 DSDT 和 SSDT，总觉得不够全，故此我又做了个 Ubuntu 的 Live CD 启动盘，来获取 DSDT 和 SSDT。</p>
<p>方法见我另一篇博客：<a href="https://blog.neroxps.cn/blog/macOS/extract_edit_dsdt.html" target="_blank" rel="external">[转载][教程] [授权翻译] 使用补丁修改DSDT/SSDT [DSDT/SSDT综合教程]</a></p>
<p>从《制作Ubuntu启动U盘》看起。</p>
<p>我这台 VM510LI 在 Windows 下提取的 SSDT 就12个，但是在 Linux 下，dynamic 文件夹下还有三个 SSDT，总共14个。</p>
<h4 id="Ubuntu-下提取-codec"><a href="#Ubuntu-下提取-codec" class="headerlink" title="Ubuntu 下提取 codec"></a>Ubuntu 下提取 codec</h4><p>codec 是制作仿冒声卡必备，虽然我这个声卡 AppleALC 项目支持，但既然已经到 Ubuntu 下了，顺手也备份下来，或许以后用得着。</p>
<p>方法同上。</p>
<h2 id="安装-macOS-Sierra"><a href="#安装-macOS-Sierra" class="headerlink" title="安装 macOS Sierra"></a>安装 macOS Sierra</h2><p>一切准备好后，我们就可以开始抛弃 Windows 系统，投入 macOS Sierra 的怀抱了，当然装之前先用 PE 备份 C盘，以后需要Windows 的时候可以立刻恢复，不需要装系统，装软件那么麻烦。</p>
<h4 id="安装思路构想"><a href="#安装思路构想" class="headerlink" title="安装思路构想"></a>安装思路构想</h4><p><del>我想法是把 Clover 安装到 U盘的 EFI 分区中，再将安装镜像也写入到 U盘中，那么以后修改了 mac 下的驱动什么的，进不去系统了，也可以用恢复盘搞回来。</del></p>
<p>实验证明，我的 U盘没法这样做，好像是需要量产后才可以一个 U盘两个分区，故此采用传统方案，将 Clover 做到 U盘里面，再将安装镜像写到硬盘里。</p>
<h4 id="下载必要的软件"><a href="#下载必要的软件" class="headerlink" title="下载必要的软件"></a>下载必要的软件</h4><ul>
<li><a href="http://www.osx86.net/files/file/4482-bootdiskutility/" target="_blank" rel="external">BootDiskUtility</a></li>
<li><a href="http://pan.baidu.com/s/1kV6WEIN" target="_blank" rel="external">Clover3961_U_macOS S 10.12.2正式版(16C67).dmg</a> 密码：l8v7</li>
<li><a href="http://www.mediafire.com/file/mtyyvnaodzu/Leopard+hd+install+helper+v0.3.zip" target="_blank" rel="external">Leopard hd install helper v0.3</a></li>
<li>一个U盘（不小于8G）</li>
</ul>
<h4 id="安装必备的驱动文件"><a href="#安装必备的驱动文件" class="headerlink" title="安装必备的驱动文件"></a>安装必备的驱动文件</h4><ul>
<li><a href="http://www.osx86.net/files/file/3465-nullcpupowermanagement-32-64-bit/" target="_blank" rel="external">NullCPUPowerManagement.kext</a></li>
<li><a href="https://bitbucket.org/RehabMan/os-x-fakesmc-kozlek/downloads" target="_blank" rel="external">FakeSMC.kext</a></li>
<li><a href="https://bitbucket.org/RehabMan/os-x-voodoo-ps2-controller/downloads" target="_blank" rel="external">VoodooPS2Controller.kext</a></li>
</ul>
<blockquote>
<p>NullCPUPowerManagement.kext 和 FakeSMC.kext 是必须的，第一个禁用苹果原生电源驱动，第二个是骗过 macOS install 告诉他运行在一台白苹果当中。</p>
<p>VoodooPS2Controller.kext 是键盘驱动，不放的话，安装盘内无法用触摸板和键盘。</p>
</blockquote>
<h4 id="将-Clover-安装到-U盘"><a href="#将-Clover-安装到-U盘" class="headerlink" title="将 Clover 安装到 U盘"></a>将 Clover 安装到 U盘</h4><ol>
<li>打开 BootDiskUtility 选择自己的 U盘。</li>
<li>点击菜单栏的 Options → Configuration</li>
<li>【Check at Satrtup】 勾上</li>
<li>【Save after DL】 勾上</li>
<li>点击 【Check Now】 按钮获取最新版的 Clover</li>
<li>点击 【OK】按钮</li>
<li>点击 【Format Disk】按钮【确定】等待软件写入，提示 All done 表示制作完成。</li>
<li></li>
</ol>
<h4 id="将-macOS-安装盘写入系统硬盘中（Win10为例）"><a href="#将-macOS-安装盘写入系统硬盘中（Win10为例）" class="headerlink" title="将 macOS 安装盘写入系统硬盘中（Win10为例）"></a>将 macOS 安装盘写入系统硬盘中（Win10为例）</h4><ol>
<li>右键【开始】按钮，【磁盘管理】。</li>
<li>选择 D盘右键【压缩卷】输入【11264】（也就是11GB）【确定】</li>
<li>右键压缩出来的11G 空间【新建简单卷】，点三次【下一步】，选择【不要格式化这个卷】→【下一步】→【完成】</li>
<li>管理员权限运行 Leopard hd install helper v0.3 文件夹下的 ddmac.exe </li>
<li>选择镜像文件为下载的 Clover3961_U_macOS S 10.12.2正式版(16C67)，取消所有的勾，目标分区选择刚刚压缩的卷，我这里是 E盘，注意别选错，否则会丢失数据。点击【开始】</li>
<li>此时程序进度条在动，中途会无响应，无需理会，等待恢复即可。</li>
</ol>
<h4 id="安装-macOS"><a href="#安装-macOS" class="headerlink" title="安装 macOS"></a>安装 macOS</h4><ol>
<li>插入已经安装好 Clover 的U盘。</li>
<li>Bios 选择此 U盘启动。</li>
<li>移动光标到 macOS，回车。</li>
<li>但是进入后立即重启，猜测是和苹果原生电源管理问题，将 NullCPUPowerManagement.kext 放入 <code>EFI/CLOVER/kexts/10.12</code>（10.12这个文件夹需要自己新建）</li>
<li>五国处理，见下一章节。</li>
<li>进入后点下一步，一直到选择硬盘地方，此时应当无法看到可安装的盘，点击上方菜单栏，工具，磁盘工具，找到我们需要安装的 SSD 盘，分区图选择 GUID，点击确定抹掉。后面就可以选择这个磁盘安装了。</li>
</ol>
<h4 id="五国处理"><a href="#五国处理" class="headerlink" title="五国处理"></a>五国处理</h4><h5 id="can’t-perform-kext-scan-no-kext-summary"><a href="#can’t-perform-kext-scan-no-kext-summary" class="headerlink" title="can’t perform kext scan: no kext summary"></a>can’t perform kext scan: no kext summary</h5><p>进入进行入安装盘出现五国 can’t perform kext scan: no kext summary。</p>
<p><img src="/2017/01/18/ASUS-VM510LI-Hackintosh/no_kext_summary.JPG" alt="can&#39;t perform kext scan: no kext summary"></p>
<p>出现以上五国信息，我上网查了下，有几个可能。</p>
<ul>
<li>下载的安装镜像盘有问题，后来我校验我的镜像盘的 md5 和对方发布的时候写的一样，而且我 dell 也是用这个盘来装的，故此不应该出现这样的问题。</li>
<li>主板 Bios 设置问题，需要关闭 VT-d，但是我关闭了问题依旧。</li>
<li>内存问题，MacOS 无法正确识别笔记本的内存导致的。</li>
</ul>
<p>后来经过排查，发现我的笔记本共8G内存，4GX2。但是其中有一条内存是直接焊在主板上，根本没法拆下来的，我再翻查了下我用 AIDA64 生成的 Reports，SDP 也只能看到添加的那条三星内存，焊接在主板上的内存是看不到的。</p>
<p><img src="/2017/01/18/ASUS-VM510LI-Hackintosh/RAM.jpg" alt="RAM"></p>
<p>后来搜索后发现 Clover 是可以解决这种情况，仅需要将 SMBIOS&gt;Trust 勾上就可以解决这个五国问题了。</p>
<h5 id="ACPI-Error-DSM-Namespace-lookup-failure"><a href="#ACPI-Error-DSM-Namespace-lookup-failure" class="headerlink" title="ACPI Error: [_DSM] Namespace lookup failure"></a>ACPI Error: [_DSM] Namespace lookup failure</h5><p>这个 _DSM 是与显卡相关的错误，遇到这个错误我们就要利用之前在 Ubuntu 提取的 DSDT 和 SSDT 来解决了。</p>
<p>反编译得到的 SSDT.aml 和 DSDT.aml 文件，最终得到的是 *.dsl 文件。</p>
<p>用 MaciASL 打开 DSDT.dsl，点击界面上方的 Patch 按钮，找到 [syn] Remove _DSM methods，点击它，再点击 Apply 应用。</p>
<p>修改 DSDT 和 SSDT 的方法请参考我上一篇转载的博文 :<a href="https://blog.neroxps.cn/blog/macOS/extract_edit_dsdt.html" target="_blank" rel="external">[转载][教程] [授权翻译] 使用补丁修改DSDT/SSDT [DSDT/SSDT综合教程]</a></p>
<p>将编译好的 DSDT 和 SSDT 放入到 U盘的 EFI/CLOVER/ACPI/patched 目录，**注意：SSDT的命名方式必须为 SSDT-1.aml、SSDT-2.aml。</p>
<p>在 Clover 的配置文件加入 SSDT 的排列顺序，ACPI&gt;SortedOrder。从 SSDT-1.aml 排序下去。DSDT name 填写 DSDT.aml。</p>
<p>最后勾上 Drop OEM，我理解的意思应该就是拒绝所有主板提供的 SSDT 和 DSDT。</p>
<p>其实去除了这个 _DSM methods 后，后面要驱动显卡还得加回来，但是这个函数的内容肯定不是原始那样，具体 ASL 编程我也不懂，都是依葫芦画瓢。</p>
<h4 id="DSDT-与-SSDT-的错误修复及常用补丁应用。"><a href="#DSDT-与-SSDT-的错误修复及常用补丁应用。" class="headerlink" title="DSDT 与 SSDT 的错误修复及常用补丁应用。"></a>DSDT 与 SSDT 的错误修复及常用补丁应用。</h4><p>在利用 DSDT 和 SSDT 帮我们解决我们的驱动问题的之前，我们需要修复反编译带来的错误。</p>
<p>我使用 iasl -da -dl *.aml 反编译后得到的 dsl 遇到几个错误的问题这里记录一下。</p>
<p>首先需要将 MaciASL 的编译器改成6.1，Preference&gt;iASL&gt;ACPI 6.1。</p>
<p><strong>DSDT.dsl 错误修复</strong></p>
<ul>
<li><p>4500, 6126, syntax error, unexpected PARSEOP_ZERO<br>这里有一大段 Zero，我猜测是反编译出来的垃圾，这里可以全部删掉。</p>
</li>
<li><p>4525, 6126, syntax error, unexpected PARSEOP_ZERO<br>同上</p>
</li>
<li><p>11019, 6126, syntax error, unexpected ‘}’</p>
</li>
</ul>
<p>出错代码段如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Method (ADBG, 1, Serialized)</div><div class="line">&#123;</div><div class="line">    If (CondRefOf (MDBG))</div><div class="line">    &#123;</div><div class="line">        Return (MDBG)</div><div class="line">        Arg0</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    Return (Zero)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>ADBG 错误，利用 [syn]Fix ADBG Error 修复。</p>
<p>修复后：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Method (ADBG, 1, Serialized)</div><div class="line">&#123;</div><div class="line">    </div><div class="line">    Return(0)</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>SSDT-3.dsl 错误修复</strong></p>
<ul>
<li>477, 6126, syntax error, unexpected PARSEOP_ADD</li>
</ul>
<p>错误代码段如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">If (ECON)</div><div class="line">                &#123;</div><div class="line">                    Store (\_SB.PCI0.LPCB.H_EC.ECRD, RefOf (\_SB.PCI0.LPCB.H_EC.PLMX))</div><div class="line">                    Local0  //是这行导致错误</div><div class="line">                    Add (0x0AAC, Multiply (Local0, 0x0A), Local0)</div><div class="line">                    Store (Local0, PTMP)</div><div class="line">                    Return (Local0)</div><div class="line">                &#125;</div></pre></td></tr></table></figure>
<p>修改为</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">If (ECON)</div><div class="line">&#123;</div><div class="line">    Store (\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PLMX)), Local0) //改法</div><div class="line">    Add (0x0AAC, Multiply (Local0, 0x0A), Local0)</div><div class="line">    Store (Local0, PTMP)</div><div class="line">    Return (Local0)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>549, 6126, syntax error, unexpected PARSEOP_MULTIPLY</li>
</ul>
<p>错误代码段如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">If (ECON)</div><div class="line">&#123;</div><div class="line">    Store (\_SB.PCI0.LPCB.H_EC.ECRD, RefOf (\_SB.PCI0.LPCB.H_EC.PECH))</div><div class="line">    Local0  //语法错误</div><div class="line">    Multiply (Local0, 0x0A, Local0)</div><div class="line">    Store (\_SB.PCI0.LPCB.H_EC.ECRD, RefOf (\_SB.PCI0.LPCB.H_EC.PECL))</div><div class="line">    Local1  //语法错误</div><div class="line">    ShiftRight (Local1, 0x02, Local1)</div><div class="line">    Store (Divide (Multiply (Local1, 0x0A), 0x40, ), Local1)</div><div class="line">    Add (Local0, Local1, Local0)</div><div class="line">    Add (0x0AAC, Local0, Local0)</div><div class="line">    Store (Local0, PTMP)</div><div class="line">    Return (Local0)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>修改为</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">If (ECON)</div><div class="line">&#123;</div><div class="line">    Store (\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PECH)),Local0)</div><div class="line">    Multiply (Local0, 0x0A, Local0)</div><div class="line">    Store (\_SB.PCI0.LPCB.H_EC.ECRD (RefOf (\_SB.PCI0.LPCB.H_EC.PECL)),Local1)</div><div class="line">    ShiftRight (Local1, 0x02, Local1)</div><div class="line">    Store (Divide (Multiply (Local1, 0x0A), 0x40, ), Local1)</div><div class="line">    Add (Local0, Local1, Local0)</div><div class="line">    Add (0x0AAC, Local0, Local0)</div><div class="line">    Store (Local0, PTMP)</div><div class="line">    Return (Local0)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>475, 6086, Not a control method, cannot invoke (_SB.PCI0.LPCB.H_EC.ECRD is a Integer)</li>
<li>547, 6086, Not a control method, cannot invoke (_SB.PCI0.LPCB.H_EC.ECRD is a Integer)</li>
<li>549, 6086, Not a control method, cannot invoke (_SB.PCI0.LPCB.H_EC.ECRD is a Integer)</li>
</ul>
<p>这三个错误其实是一个意思，就是没有找到引入的模块（瞎猜的），我的解决办法。</p>
<p>搜索 H_EC.ECRD 找到头部附近 External</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">External (_SB_.PCI0.LPCB.H_EC.ECRD, IntObj)    // Warning: Unknown object</div></pre></td></tr></table></figure>
<p>H_EC.ECRD 应该是一个方法，但是这里引入方法方式不对，应该是 MethodObj 才对。</p>
<p>修改为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">External (_SB_.PCI0.LPCB.H_EC.ECRD, MethodObj)</div></pre></td></tr></table></figure>
<p>其余 SSDT 均无错误。</p>
<h4 id="常用补丁应用"><a href="#常用补丁应用" class="headerlink" title="常用补丁应用"></a>常用补丁应用</h4><p>在 <a href="https://blog.neroxps.cn/blog/macOS/extract_edit_dsdt.html" target="_blank" rel="external">[转载][教程] [授权翻译] 使用补丁修改DSDT/SSDT [DSDT/SSDT综合教程]</a> 中，常用补丁里面提及了一些常用补丁，并且这些补丁一般不会造成什么问题，后来我翻查了 RehabMan 的原帖，有两个补丁是有条件限制的，这些补丁要看自己的情况而添加。</p>
<p>引用原话</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&quot;Fix _WAK Arg0 v2&quot;</div><div class="line">&quot;HPET Fix&quot;</div><div class="line">&quot;SMBUS Fix&quot;</div><div class="line">&quot;IRQ Fix&quot;</div><div class="line">&quot;RTC Fix&quot;</div><div class="line">&quot;OS Check Fix&quot;</div><div class="line">&quot;Fix Mutex with non-zero SyncLevel&quot;</div><div class="line">&quot;Fix PNOT/PPNT&quot; (use only if you&apos;re dropping CPU related SSDTs) 仅适用于删除了 CPU 的 SSDT 使用。</div><div class="line">&quot;Add IMEI&quot; (do not use if your DSDT or SSDTs already have IMEI/HECI/MEI device) 如果你的 DSDT 或 SSDT 存在 IMEI/HECI/MEI 的 device 的话，就不要用这个补丁。</div></pre></td></tr></table></figure>
<p>最终我只应用了以下补丁</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&quot;Fix _WAK Arg0 v2&quot;</div><div class="line">&quot;HPET Fix&quot;</div><div class="line">&quot;SMBUS Fix&quot;</div><div class="line">&quot;IRQ Fix&quot;</div><div class="line">&quot;RTC Fix&quot;</div><div class="line">&quot;OS Check Fix&quot;</div><div class="line">&quot;Fix Mutex with non-zero SyncLevel&quot;</div></pre></td></tr></table></figure>
<p>注意，一般应用 RehabMan 大神写的补丁不会造成编译错误，但是也会有例外情况，故此应用补丁，每应用一个后都需要编译（Compile）一下，看看是否有错误。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;装完我那台老掉牙的 Dell 笔记本黑苹果系统后，嫌弃它分辨率太低了，我又将我的目光转向老婆公司送的华硕 VM510LI 笔记本。😝&lt;/p
    
    </summary>
    
      <category term="黑苹果" scheme="http://hexo.neroxps.cn/categories/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
    
      <category term="黑苹果" scheme="http://hexo.neroxps.cn/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
      <category term="Mac" scheme="http://hexo.neroxps.cn/tags/Mac/"/>
    
      <category term="Hackintosh" scheme="http://hexo.neroxps.cn/tags/Hackintosh/"/>
    
      <category term="ASUS" scheme="http://hexo.neroxps.cn/tags/ASUS/"/>
    
      <category term="VM510LI" scheme="http://hexo.neroxps.cn/tags/VM510LI/"/>
    
  </entry>
  
  <entry>
    <title>【转载】【教程】 【授权翻译】 使用补丁修改DSDT/SSDT 【DSDT/SSDT综合教程】</title>
    <link href="http://hexo.neroxps.cn/2017/01/16/extract_edit_dsdt/"/>
    <id>http://hexo.neroxps.cn/2017/01/16/extract_edit_dsdt/</id>
    <published>2017-01-15T16:00:00.000Z</published>
    <updated>2017-07-20T00:40:44.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<h2 id="本文说明"><a href="#本文说明" class="headerlink" title="本文说明"></a>本文说明</h2><p>本文转载至远景论坛 daxuexinsheng 的帖子 <a href="http://bbs.pcbeta.com/viewthread-1571455-1-1.html" target="_blank" rel="external">[教程] [授权翻译] 使用补丁修改DSDT/SSDT [DSDT/SSDT综合教程]</a></p>
<p>近期远景论坛访问异常，还需要改 hosts 才能正常访问，而远景几乎是国内比较大的黑苹果权威论坛，为了防止一些珍贵的文献无法访问，而又方便日后翻查，我决定转载一些有用的文章。</p>
</blockquote>
<p>[toc]</p>
<h2 id="翻译授权信息"><a href="#翻译授权信息" class="headerlink" title="翻译授权信息"></a>翻译授权信息</h2><p>  本教程原作者是tonymacx86网站的Rehabman。本贴，是对原贴的 翻译 与 补充。已经得到Rehabman的授权。相关信息如下：</p>
<p><img src="/2017/01/16/extract_edit_dsdt/extract_edit_dsdt-01.png" alt="授权信息"></p>
<p>  请尊重原贴作者 与 本贴楼主。原作者把自己丰富的经验分享给了大家，本贴作者每个贴子平均花了3个小时翻译。<br>所以，转载请注明出处：</p>
<p>原贴地址：<a href="http://www.tonymacx86.com/yosemite-laptop-support/152573-guide-patching-laptop-dsdt-ssdts.html" target="_blank" rel="external">http://www.tonymacx86.com/yosemite-laptop-support/152573-guide-patching-laptop-dsdt-ssdts.html</a></p>
<p>本贴地址：<a href="http://bbs.pcbeta.com/viewthread-1571455-1-1.html" target="_blank" rel="external">http://bbs.pcbeta.com/viewthread-1571455-1-1.html</a></p>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>  为了能让OS X的特性能够在普通PC上正常工作，就需要修改（可以利用补丁）DSDT和SSDT。本教程的目的，就是介绍如何利用现有补丁，修改你电脑的原始OEM DSDT/SSDT。</p>
<p>  虽然你可以用其它型号的电脑的DSDT，但这样的后果是会造成更多问题。你不能保证用别的型号电脑的DSDT是没问题的。如果你用了别的电脑的ACPI文件，即便是硬件配置非常相似，也可能会造成 系统不稳定 和 一些奇葩的问题。</p>
<p>使用补丁修改DSDT/SSDT包含了以下步骤：</p>
<ul>
<li>提取原始ACPI文件</li>
<li>反编译原始文件</li>
<li>分析并筛选这些原始文件</li>
<li>使用补丁修改</li>
<li>编译并保存，再放到引导特定的目录</li>
</ul>
<h2 id="提取原始ACPI文件"><a href="#提取原始ACPI文件" class="headerlink" title="提取原始ACPI文件"></a>提取原始ACPI文件</h2><p>  所有BIOS都实现了把ACPI文件提交给操作系统的功能。所以，基于任何操作系统，你都可以通过操作系统提取出原始ACPI文件，之后再进行修改。Linux、OS X、Windows、Clover都可以用来提取原始ACPI文件。这些方式提取的文件是完全相同的，只是由于使用的提取工具不同，文件名会不同。</p>
<p>  本教程将主要介绍3种提取方式：在OS X使用patchmatic工具（Rehabman编写的终端程序），在Clover启动界面按F4，还有使用Linux。</p>
<h3 id="使用patchmatic工具提取"><a href="#使用patchmatic工具提取" class="headerlink" title="使用patchmatic工具提取"></a>使用patchmatic工具提取</h3><p>  如果你已经有了OS X环境，并且还没有使用修改过的DSDT/SSDT，就可以使用patchmatic工具提取原始DSDT/SSDT。到这里下载编译好的patchmatic工具：<a href="https://github.com/RehabMan/OS-X-MaciASL-patchmatic" target="_blank" rel="external">https://github.com/RehabMan/OS-X-MaciASL-patchmatic</a> （仔细阅读patchmatic工具的README）。为了方便使用，你可以把程序拷贝到 /usr/bin 文件夹。（放到这里，在任何地方都可以调用）</p>
<p>  放好patchmatic之后，就可以在终端调用它了：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">cd ~/Desktop</div><div class="line">mkdir extract</div><div class="line">cd extract</div><div class="line">patchmatic -extract</div></pre></td></tr></table></figure>
<p>  patchmatic 工具将会提取这次启动被加载的 ACPI 文件 到当前目录。如果你用了 Clover 的 Fix 功能（Clover 会向 DSDT/SSDT 注入代码），那么得到的就不是原始文件了，所以，要确认你没有使用 Clover 的 Fix 功能。</p>
<p>另外的情况是，如果你设置了(变色龙) <code>DropSSDT=Yes</code>，或者 (Clover) <code>DropOem=true</code>，那么，引导程序就会自动屏蔽原始的 SSDT，这时用patchmatic 提取，就不会得到 SSDT 文件。还有就是，变色龙的 <code>GeneratePStates/GenerateCStates=Yes</code>,参数，或 Clover 的 <code>/ACPI/SSDT/Generate/CStates</code>，<code>/ACPI/SSDT/Generate/PStates</code> 参数，会生成并注入新的 SSDT（非原始 SSDT），这时，提取的 SSDT 在反编译的时候会出现问题。</p>
<p>  以上就是提取原始文件的注意事项。一般，在 Linux 提取或在 Clover 启动界面按 F4 提取更容易一些。</p>
<p>  注意：使用 <code>patchmatic -extract</code> 命令可以作为 确认你修改的 DSDT/SSDT 是否被成功加载了的非常有用的诊断工具。</p>
<h3 id="在Clover启动界面按F4提取"><a href="#在Clover启动界面按F4提取" class="headerlink" title="在Clover启动界面按F4提取"></a>在Clover启动界面按F4提取</h3><p>  在Clover启动界面，你可以按 “F4”键，Clover 会把原始ACPI文件提取到 EFI/Clover/ACPI/origin 目录。再进入系统，就可以在那个目录看到提取到的原始文件了。之后，就可以开始反编译、修改了。注意，有的 BIOS 可能按 F4 键没用，而需要 Fn+F4，所以，如果不确定的话，F4 和 Fn+F4 都按一次。提取的时候，你不会看到任何是否完成的提示，只是会因为正在写文件而出现一点延迟现象。如果是用 Clover 的USB 设备（U盘、硬盘）启动的，文件会被提取到USB设备，这样会感到比较明显的延迟。</p>
<p>  有时候，Clover 提取的 SSDT 可能会重复。重复的文件，会影响到反编译。如果你反编译的时候看到了这样的提示信息（duplicate definitions），就需要仔细检查重复的是哪个了（例如，看大小）。由于存在这样的问题，所以在 Linux 提取比较好。因为我还没有见过在 Linux 提取的出现重复的情况。</p>
<h3 id="在Linux提取（推荐，还可以顺便提取声卡codec）"><a href="#在Linux提取（推荐，还可以顺便提取声卡codec）" class="headerlink" title="在Linux提取（推荐，还可以顺便提取声卡codec）"></a>在Linux提取（推荐，还可以顺便提取声卡codec）</h3><p>  在Linux系统里，可以直接在系统分区里找到原始ACPI文件。你可以在 /sys/firmware/acpi/tables 和 /sys/firmware/acpi/tables/dynamic 看到。可以简单地用命令进行拷贝。</p>
<p>  Linux系统不需要安装，做一个启动U盘就可以了：<a href="http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-windows（3楼有楼主翻译的制作步骤）" target="_blank" rel="external">http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-windows（3楼有楼主翻译的制作步骤）</a></p>
<p>打开Linux的终端输入：<br>sudo cp -R /sys/firmware/acpi/tables DEST<br>注意： 用FAT32格式的USB设备（U盘、硬盘）的挂载点的路径，替换命令里的 DEST</p>
<p>（提取DSDT/SSDT的图文说明，请看下一楼）</p>
<p>  你的U盘或硬盘需要是FAT32格式的。FAT32格式可以避免出现文件权限问题，因为FAT32格式在Linux系统里没有文件权限的问题。用于替换DEST的 自动挂载的USB设备的名字，取决于你的Linux版本和它的启动方式。你可以在终端输入 mount 命令，来查看当前的挂载点。或者，在图形界面，把鼠标移到文件管理器上相应的USB设备名上。</p>
<blockquote>
<p>Nero：我将原帖三楼的步骤迁移到这里来了。</p>
</blockquote>
<h4 id="制作Ubuntu启动U盘"><a href="#制作Ubuntu启动U盘" class="headerlink" title="制作Ubuntu启动U盘"></a>制作Ubuntu启动U盘</h4><p>（感谢stevechen962464的点评，对于UEFI引导的，可以这样：直接下载Ubuntu的x64版本。然后所有文件丢进U盘。即可从UEFI启动ubuntu。不需要这样写入。）</p>
<p>以下为传统BIOS引导的情况：</p>
<p>要在U盘运行Ubuntu，需要一个空闲空间至少2G的U盘。<br>制作Ubuntu启动U盘的最简单的方法，是使用 Universal USB installer 。</p>
<p>软件下载地址：<br><a href="http://www.pendrivelinux.com/universal-usb-installer-easy-as-1-2-3/#button" target="_blank" rel="external">http://www.pendrivelinux.com/universal-usb-installer-easy-as-1-2-3/#button</a></p>
<p>制作步骤：</p>
<h5 id="1-下载制作软件："><a href="#1-下载制作软件：" class="headerlink" title="1. 下载制作软件："></a>1. 下载制作软件：</h5><p><a href="http://www.pendrivelinux.com/universal-usb-installer-easy-as-1-2-3/#button" target="_blank" rel="external">http://www.pendrivelinux.com/universal-usb-installer-easy-as-1-2-3/#button</a></p>
<h5 id="2-下载Ubuntu"><a href="#2-下载Ubuntu" class="headerlink" title="2. 下载Ubuntu"></a>2. 下载Ubuntu</h5><p>楼主提供的是 Ubuntu 14.10 64位。如果需要其它版本，或者下载速度慢的话，请自行搜索下载。<br><del>下载地址：<a href="http://pan.baidu.com/s/1o6zD0Lk" target="_blank" rel="external">http://pan.baidu.com/s/1o6zD0Lk</a> 提取码:u9d</del></p>
<blockquote>
<p>以上地址已失效。最新 Ubuntu 官方地址。<a href="http://releases.ubuntu.com/16.04.1/" target="_blank" rel="external">Ubuntu  16.04.1 LTS</a></p>
<p>16.04 和 14.10提取的操作步骤完全一样，这里就不提供14.10的下载地址，如果需要 Ubuntu 官网上有。<br>我下载的镜像是 64-bit PC (AMD64) desktop image，可以根据自己实际情况选择。</p>
</blockquote>
<h5 id="3-在下拉列表选择-Ubuntu"><a href="#3-在下拉列表选择-Ubuntu" class="headerlink" title="3. 在下拉列表选择 Ubuntu"></a>3. 在下拉列表选择 Ubuntu</h5><p><img src="/2017/01/16/extract_edit_dsdt/extract_edit_dsdt-02.jpg" alt="Universal USB Installer 01"></p>
<h5 id="4-点击“Browser”浏览，选择下载好的iso镜像"><a href="#4-点击“Browser”浏览，选择下载好的iso镜像" class="headerlink" title="4. 点击“Browser”浏览，选择下载好的iso镜像"></a>4. 点击“Browser”浏览，选择下载好的iso镜像</h5><p><img src="/2017/01/16/extract_edit_dsdt/extract_edit_dsdt-03.jpg" alt="Universal USB Installer 03"></p>
<h5 id="5-选择U盘，点击“Create”，开始创建启动U盘"><a href="#5-选择U盘，点击“Create”，开始创建启动U盘" class="headerlink" title="5. 选择U盘，点击“Create”，开始创建启动U盘"></a>5. 选择U盘，点击“Create”，开始创建启动U盘</h5><p><img src="/2017/01/16/extract_edit_dsdt/extract_edit_dsdt-04.jpg" alt="Universal USB Installer 04"></p>
<h5 id="6-从U盘启动，选择试用-Ubuntu。"><a href="#6-从U盘启动，选择试用-Ubuntu。" class="headerlink" title="6. 从U盘启动，选择试用 Ubuntu。"></a>6. 从U盘启动，选择试用 Ubuntu。</h5><h4 id="提取-DSDT-SSDT"><a href="#提取-DSDT-SSDT" class="headerlink" title="提取 DSDT/SSDT"></a>提取 DSDT/SSDT</h4><h5 id="1-查看U盘或硬盘的挂载点（把鼠标移动到U盘名字上）。"><a href="#1-查看U盘或硬盘的挂载点（把鼠标移动到U盘名字上）。" class="headerlink" title="1. 查看U盘或硬盘的挂载点（把鼠标移动到U盘名字上）。"></a>1. 查看U盘或硬盘的挂载点（把鼠标移动到U盘名字上）。</h5><p>如图，楼主的U盘挂载点是 <code>/media/ubuntu/DISK_IMG</code></p>
<p><img src="/2017/01/16/extract_edit_dsdt/extract_edit_dsdt-05.png" alt="Ubuntu extract DSDT/SSDT-1"></p>
<h5 id="2-点击左上角第一个图标，搜索，找到终端。"><a href="#2-点击左上角第一个图标，搜索，找到终端。" class="headerlink" title="2. 点击左上角第一个图标，搜索，找到终端。"></a>2. 点击左上角第一个图标，搜索，找到终端。</h5><p><img src="/2017/01/16/extract_edit_dsdt/extract_edit_dsdt-06.png" alt="Ubuntu extract DSDT/SSDT-2"></p>
<p>搜索 ter，找到终端</p>
<p><img src="/2017/01/16/extract_edit_dsdt/extract_edit_dsdt-07.png" alt="Ubuntu extract DSDT/SSDT-3"></p>
<h5 id="3-使用命令拷贝文件"><a href="#3-使用命令拷贝文件" class="headerlink" title="3. 使用命令拷贝文件"></a>3. 使用命令拷贝文件</h5><p>（注意，不能使用图形界面的复制、粘贴，会提示权限不允许）</p>
<p>如图，前面一个路径都是一样的，我们需要从这个获取文件。中间空格隔开。后面一个路径，是你第一步看好的挂载点。</p>
<p>（<strong>还可以 在空格 后把自己的目标目录拖至此处。</strong>也就是先输好前面的命令和路径，再输一个空格，再在图形界面把U盘拖到终端。）</p>
<p><img src="/2017/01/16/extract_edit_dsdt/extract_edit_dsdt-08.png" alt="Ubuntu extract DSDT/SSDT-4"></p>
<h5 id="4-在U盘新建一个文件夹，放-DSDT-SSDT（U盘必须是FAT32格式）"><a href="#4-在U盘新建一个文件夹，放-DSDT-SSDT（U盘必须是FAT32格式）" class="headerlink" title="4. 在U盘新建一个文件夹，放 DSDT/SSDT（U盘必须是FAT32格式）"></a>4. 在U盘新建一个文件夹，放 DSDT/SSDT（U盘必须是FAT32格式）</h5><p>因为，我们拷贝的目录结构是这样的：</p>
<p><strong>tables （有DSDT和SSDT）</strong></p>
<p><strong>—-dynamic （还有SSDT）</strong></p>
<p>我们需要把两处的文件，移动到同一个文件夹。这样才好管理，也方便以后一起反编译。</p>
<p>如图，楼主在U盘新建了一个名为my_acpi的文件夹（文件夹名自己取就行），来存放文件。</p>
<p><img src="/2017/01/16/extract_edit_dsdt/extract_edit_dsdt-09.png" alt="Ubuntu extract DSDT/SSDT-5"></p>
<h5 id="5-给所有文件，都加上-aml-后缀名。"><a href="#5-给所有文件，都加上-aml-后缀名。" class="headerlink" title="5. 给所有文件，都加上 .aml 后缀名。"></a>5. 给所有文件，都加上 .aml 后缀名。</h5><p>操作如图所示：（楼主用的是虚拟机，文件不全）</p>
<p><img src="/2017/01/16/extract_edit_dsdt/extract_edit_dsdt-10.png" alt="Ubuntu extract DSDT/SSDT-6"></p>
<p><img src="/2017/01/16/extract_edit_dsdt/extract_edit_dsdt-11.png" alt="Ubuntu extract DSDT/SSDT-7"></p>
<p><img src="/2017/01/16/extract_edit_dsdt/extract_edit_dsdt-12.png" alt="Ubuntu extract DSDT/SSDT-8"></p>
<h5 id="6-所有操作完成后，可以再按下面的方法提取声卡codec。"><a href="#6-所有操作完成后，可以再按下面的方法提取声卡codec。" class="headerlink" title="6. 所有操作完成后，可以再按下面的方法提取声卡codec。"></a>6. 所有操作完成后，可以再按下面的方法提取声卡codec。</h5><p>制作Ubuntu启动U盘，一方面，可以提取ACPI文件。另一方面，还可以提取声卡codec。</p>
<p>提取ACPI文件，请看本贴前面的内容。这里补充下提取声卡codec。</p>
<p>打开终端（Terminal）：</p>
<p>输入 </p>
<p><code>cat /proc/asound/card0/codec#0 &gt; ~/Desktop/Codec.txt</code>；</p>
<p>或者 </p>
<p><code>cat /proc/asound/card0/codec#1 &gt; ~/Desktop/Codec.txt</code>；</p>
<p>或者 </p>
<p><code>cat /proc/asound/card0/codec#2 &gt; ~/Desktop/Codec.txt</code>。</p>
<p>(取決声卡的 Address，这几个命令都试试，直到看到桌面出现了Codec.txt文件)</p>
<p>成功的话，在桌面会出现一个 Codec.txt （打开看看，应该有很多内容，确认不是空的）</p>
<p>把Codec.txt拷贝到U盘。</p>
<p>这种方法是先把文件拷贝到桌面，就可以用图形界面的复制、粘贴了。</p>
<p>（拷贝文件，可以和前面的结合参考，哪种方便用哪种。只是要注意，U盘格式最好是 FAT32 格式。）</p>
<h2 id="反编译ACPI文件"><a href="#反编译ACPI文件" class="headerlink" title="反编译ACPI文件"></a>反编译ACPI文件</h2><p>  虽然提取到的 aml 文件可以用 MaciASL 直接打开，但不建议这样做。用 MaciASL 直接打开 aml 文件，是软件在做对打开的这个文件的单独反编译。然而，ACPI 文件之间有着紧密的联系，只对一个文件单独反编译，得到的文件会包含许多难于修复的错误。</p>
<p>  所以，最好的方法是，使用 iasl 编译器，同时反编译所有文件。要做的准备工作有，新建一个文件夹用于存放所有 DSDT 和 SSDT 文件，并重命名所有文件，例如加上 .aml 扩展名。下载最新的iasl 编译器来进行反编译。这里是 Rehabman 的修改版编译器：<a href="https://bitbucket.org/RehabMan/acpica/downloads" target="_blank" rel="external">https://bitbucket.org/RehabMan/acpica/downloads</a>。把iasl编译器拷贝到/usr/bin目录，会让调用iasl更方便。</p>
<p>终端的反编译命令：<br>cd “你存放DSDT和SSDT的文件夹名”<br>iasl -da -dl *.aml</p>
<p><strong>楼主补充：</strong></p>
<p>1、反编译介绍：<a href="http://bbs.pcbeta.com/viewthread-1475332-1-1.html" target="_blank" rel="external">http://bbs.pcbeta.com/viewthread-1475332-1-1.html</a></p>
<p>2、视频教程：<a href="http://bbs.pcbeta.com/viewthread-1569867-1-1.html" target="_blank" rel="external">http://bbs.pcbeta.com/viewthread-1569867-1-1.html</a></p>
<p>  注意：不要用-da 命令去反编译 DSDT和SSDT以外的 ACPI文件，那将是无效的。</p>
<p>  反编译成功后，你将得到 所有文件的dsl形式，修改就是使用dsl文件进行。修改好dsl文件后，使用MaciASL的 另存为，并选择 文件格式 “ACPI Machine Language Binary” ，再在文件名那里加上 .aml扩展名，保存。编译保存为aml之后，把它们放到引导程序规定的加载目录（变色龙 /Extra，Clover /EFI/Clover/ACPI/patched）。保存好dsl文件，以后修改还要用dsl文件。</p>
<h2 id="筛选ACPI文件"><a href="#筛选ACPI文件" class="headerlink" title="筛选ACPI文件"></a>筛选ACPI文件</h2><p>  生成的 SSDT 和原始的 SSDT 会产生冲突。大部分关于电源管理的贴子，会让删除所有原始的 SSDT。但删除所有 SSDT 并不好，特别是对于一些新的电脑来说，很多代码都从 DSDT 移到了 SSDT 里，最好不要一棒子把所有 SSDT 都打掉。只需要 把和 CPU 相关的 SSDT 删除就可以了，因为这样的 SSDT 对黑苹果没有效果（也许它们还会造成其它问题），留下其它有用的 SSDT，用于打补丁或者就保留着不做修改。</p>
<p>  在反编译成功后，一个一个地打开检查 dsl 文件，以确认每一个具有的功能。如果是和 CPU 有关的，就把它拖到其它地方（也可以直接删除），最后放到加载目录的，<del>不需要这些提取的 CPU 相关的 SSDT。一般，和 CPU 相关的 SSDT 包含了 Scope _PR.CPIx 这样的声明，可以通过这样的名字排除文件。</del></p>
<blockquote>
<p>Nero：这里作者在别的帖子里面修正了这种说法，只需要删掉 <code>OEM Table ID     &quot;CpuPm&quot;</code>这个 SSDT，利用 ssdtPRGen 脚本重新生成这个 SSDT 即可。</p>
</blockquote>
<p>  额外说明：对于 Rehabman 的联想 U430，他试验了使用这些提取的 CPU 相关的 SSDT（当然，是修复了错误的）。不确定这是不是有什么好处，但使用了提取的 CPU 相关 SSDT，使得他的 DSDT 不再需要打”Fix PNOT/PPNT”这样的补丁了，好像电脑工作得很完美。</p>
<p>以下是常见的SSDT的特点和功能：</p>
<ul>
<li><p>SATA：可以留，也可以不留，自己决定就好。</p>
</li>
<li><p>PTID：一般对苹果系统来说，是没用的。也许这个文件还会有很多错误。一种比较少的应用情况是，在这个文件里，可以找到 读取风扇转速，温度，或者其它系统状态 的线索。</p>
</li>
<li><p>IAOE：如果存在这个文件，通常来讲，它会在DSDT里的 _PTS 和 _WAK 方法被调用。如果删除这个文件，就会影响到睡眠。</p>
</li>
<li><p>GFX0：通常包含了 Device GFX0 的SSDT，是和 集成显卡 相关的。亮度补丁就是针对这样的文件的。老的笔记本（Haswell以前的），GFX0一般是定义在DSDT里。Haswell的笔记本，它被定义在SSDT里（虽然也可以移到DSDT里）。</p>
</li>
<li><p>PEGP：包含PEGP的文件，一般是和 独显 和 双显卡切换 有关。有时候不只有一个这样的SSDT，为了实现 屏蔽独显 等功能，你需要保留所有包含PEGP的SSDT，并对它们做一些修改。</p>
</li>
</ul>
<p>我们需要弄清楚，每个SSDT的大概是做什么的，哪些需要删除，哪些需要不做修改地保留，哪些需要修改。</p>
<h2 id="修复错误"><a href="#修复错误" class="headerlink" title="修复错误"></a>修复错误</h2><p>  即使同时反编译所有文件（使用iasl的-da参数），还是难免存在错误。反编译后的文件之所以还会有错误，是因为一直以来iasl编译器的版本都在更新、iasl的实现细节变化了、不同的电脑与系统环境。存在这些错误的原因可能是（Rehabman认为），里面调用到的一些方法，实际上是Windows内部实现的（例如 MMTB方法和MDBG方法）。实际也有这样的情况，ACPI文件的代码原本就存在缺陷或者某些代码本来就是无效的（很难说得清楚）。</p>
<p>  好了，在确认哪些文件是你需要的之后，就需要开始对它们进行修改了（修复错误、添加功能性代码），直到编译没有错误。现在有很多补丁源可以提供使用。</p>
<p>MaciASL软件：<a href="https://github.com/RehabMan/OS-X-MaciASL-patchmatic" target="_blank" rel="external">https://github.com/RehabMan/OS-X-MaciASL-patchmatic</a></p>
<p>Rehabman的综合补丁源：<a href="https://github.com/RehabMan/Laptop-DSDT-Patch" target="_blank" rel="external">https://github.com/RehabMan/Laptop-DSDT-Patch</a></p>
<p><strong>楼主补充：</strong></p>
<p>1、MaciASL汉化版：<a href="http://bbs.pcbeta.com/viewthread-1495779-1-1.html" target="_blank" rel="external">http://bbs.pcbeta.com/viewthread-1495779-1-1.html</a></p>
<p>2、Rehabman补丁源（汉化版自带，添加到软件才能访问）：<a href="http://raw.github.com/RehabMan/Laptop-DSDT-Patch/master" target="_blank" rel="external">http://raw.github.com/RehabMan/Laptop-DSDT-Patch/master</a></p>
<p>  注意：以上补丁源里的补丁，没有在DSDT Editor软件里测试过。DSDT Editor软件存在着很多bug，内置的编译器也很老了。</p>
<p>  在看别人的项目页面的时候，都请仔细阅读作者提供的README，到正确的地址下载软件，学习配置MaciASL。修复语法错误的补丁的名字，以[syn]开头。例如，对于一些比较老的电脑，提供了”Fix _PLD Buffer/Package Error”, “Fix TNOT Error”, 和 “Fix FPED Parse Error”补丁。为了确定你需要用哪个补丁，需要看 编译结果 窗口给出的 提示信息，再定位到提示的行，查看错误行前后都有什么样的代码。你也可以尝试，只要Changes不为0或者预览框里有显示（说明可以打）的补丁，都可以打。如果你不熟悉编译结果的错误提示，可以一个一个试验看看能不能打。</p>
<p>  对于一些错误，你可以简单地删除造成错误的那行代码来解决。当然，这要取决于这一行代码对于功能的实现，是否是必需的。例如，对于由External语句造成的错误，一般可以删除那行代码以修复错误。如果需要，你自己可以做一个删除这样的错误行代码的补丁。</p>
<p>  学习一下ACPI规范 和 具有一些编程经验，有助于处理DSDT和SSDT。</p>
<p>  我们的最终目的，是得到 编译没有错误的dsl文件（warnings/remarks/optimizations都不用管）。一旦你修复了所有错误，就可以开始为了你的黑苹果 添加功能、解决某些问题，而修改dsl文件了（使用现有补丁或手工修改）。</p>
<h2 id="常用补丁"><a href="#常用补丁" class="headerlink" title="常用补丁"></a>常用补丁</h2><p>  一般，你需要先弄清自己的需求，再根据需求选择要用的补丁。但也有一些补丁是通用的，并且这些补丁一般不会造成什么问题。例如，Rehabman的补丁源里的：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&quot;Fix _WAK Arg0 v2&quot;</div><div class="line">&quot;HPET Fix&quot;</div><div class="line">&quot;SMBUS Fix&quot;</div><div class="line">&quot;IRQ Fix&quot;</div><div class="line">&quot;RTC Fix&quot;</div><div class="line">&quot;OS Check Fix&quot;</div><div class="line">&quot;Fix Mutex with non-zero SyncLevel&quot;</div><div class="line">&quot;Fix PNOT/PPNT&quot;</div><div class="line">&quot;Add IMEI”</div></pre></td></tr></table></figure>
<p>USB补丁，用于解决 睡眠自动唤醒 的问题。</p>
<p>根据自己电脑的硬件配置选择USB补丁：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&quot;6-series USB&quot;</div><div class="line">&quot;7-series/8-series USB”</div></pre></td></tr></table></figure>
<p>  USB3 Mutliplex补丁，有助于加载AppleUSBXHCI.kext（原生USB3.0驱动），于是就不需要安装第三方的GenericUSBXCHI.kext了。这个补丁是基于Mieze的发现而制作的。大部分DSDT需要对它做一些修改，才能使用（不然可能会提示有错误）。例如，对于惠普的Probook，Rehabman制作了这个补丁的修改版本。联想u310/u410可以直接使用这个补丁：</p>
<p><code>&quot;7-series USB3 Multiplex”</code></p>
<p>  如果你的电脑是Haswell架构、8系列芯片组的，并且还没有加载AppleLPC.kext（电源管理的一种），你可以使用这个补丁，注入一个兼容ID，以加载AppleLPC：</p>
<p><code>&quot;Haswell LPC”</code></p>
<p>  还需要考虑对一些设备名进行改名，并且，改名还要改得彻底。可以把一些设备名改成符合苹果规范的名字。（例如，使用”Rename GFX0 to IGPU”补丁，可以加载集成显卡的电源管理）。对于这一情况，DSDT/SSDT里，包含的所有GFX0，都需要改成IGPU（对所有含有GFX0的文件，都应用这个补丁）。</p>
<p>  关于重复的标识符定义：你必须确保，你修改后的文件，不包含重复的标识符。典型的例子有，在需要添加一个_DSM方法的时候，在同一个范围里，原本已经存在_DSM方法了。编译器就会提示标识符重复。为了避免这样的问题，你可以一开始就对DSDT/SSDT用”Remove _DSM methods”补丁，删除原本存在的所有_DSM方法。</p>
<h2 id="关于一些特别的需求的修改"><a href="#关于一些特别的需求的修改" class="headerlink" title="关于一些特别的需求的修改"></a>关于一些特别的需求的修改</h2><h4 id="电池状态显示："><a href="#电池状态显示：" class="headerlink" title="电池状态显示："></a>电池状态显示：</h4><p>1、原贴：<a href="http://www.tonymacx86.com/mavericks-laptop-support/116102-how-patch-dsdt-working-battery-status.html" target="_blank" rel="external">[GUIDE] How to patch DSDT for working battery status</a></p>
<p>2、楼主翻译：<a href="http://bbs.pcbeta.com/viewthread-1521462-1-1.html" target="_blank" rel="external">http://bbs.pcbeta.com/viewthread-1521462-1-1.html</a></p>
<h4 id="屏幕亮度调节："><a href="#屏幕亮度调节：" class="headerlink" title="屏幕亮度调节："></a>屏幕亮度调节：</h4><p>1、原贴：<a href="http://www.tonymacx86.com/yosemite-laptop-support/152659-guide-patching-dsdt-ssdt-laptop-backlight-control.html" target="_blank" rel="external">http://www.tonymacx86.com/yosemite-laptop-support/152659-guide-patching-dsdt-ssdt-laptop-backlight-control.html</a></p>
<p>2、楼主翻译：<a href="http://bbs.pcbeta.com/viewthread-1571456-1-1.html" target="_blank" rel="external">http://bbs.pcbeta.com/viewthread-1571456-1-1.html</a></p>
<p>  当你在看某个特定型号的安装教程的时候，作者都会介绍用了哪些补丁，或者直接提供下载。你能容易的看出来，他们的补丁和Rehabman的补丁，在语法上是相似的。（例如这样的语法：’into_all method label FOO code_regex xxyy removeall_matched;’）。这些补丁语句需要粘贴到MaciASL的补丁窗口，再应用。</p>
<p>  如果你对制作补丁有兴趣，可以去看这里的MaciASL补丁语法说明：<a href="http://sourceforge.net/p/maciasl/wiki/Patching%20Syntax%20Grammar/" target="_blank" rel="external">http://sourceforge.net/p/maciasl/wiki/Patching%20Syntax%20Grammar/</a></p>
<p>  注意：在许多情况下，DSDT的补丁是和某个第三方kext、打过补丁的kext、Clover实时打补丁的kext相结合使用的（通过DSDT代码加载kext）。</p>
<h2 id="仿冒声卡驱动相关的补丁"><a href="#仿冒声卡驱动相关的补丁" class="headerlink" title="仿冒声卡驱动相关的补丁"></a>仿冒声卡驱动相关的补丁</h2><p>  有两个和仿冒声卡驱动相关的补丁，需要和仿冒的声卡kext一起使用：<br>“Audio Layout 12” (根据实际情况，自己修改 layout-id，例如把 12 改成 28 等)<br>“IRQ Fix”（解决需要-f才能加载声卡驱动的问题）</p>
<p>  注意，你需要有适合你的声卡的AppleHDA，还要知道这个仿冒声卡驱动用的是哪个layout-id。layout-id的值，是由修改驱动的人决定的。</p>
<p>  要查看别人修改的AppleHDA用的layout-id是哪个值，首先，你需要知道自己声卡的codec id的十进制形式（例如，0x10ec0269 = 283902569）。然后，去查看 AppleHDA.kext/Contents/PlugIns/AppleHDAHardwareConfigDriver.kext/Contents/Info.plist，查看HDAConfigDefault节点下面的codec id（这个节点下，可能有一组或多组数据，所以，刚才的283902569就用上了）。和你的codec id匹配的那组里，LayoutID的值，就是你需要的layout-id值。有的驱动修改者，同一个codec id可能会对应多个layout-id，选择一个你需要的layout-id注入。</p>
<h2 id="让引导加载修改、编译好的文件"><a href="#让引导加载修改、编译好的文件" class="headerlink" title="让引导加载修改、编译好的文件"></a>让引导加载修改、编译好的文件</h2><p>  为了使用你修改、编译好的DSDT/SSDT，你需要把它们放到引导能加载它们的目录。每种引导的加载目录是唯一的，且对文件的命名要求也不同。如果用MaciASL保存，另存为的时候，文件格式一定要选择”ACPI Machine Language Binary”（文件－另存为－文件格式），再自己加上 .aml 后缀。如果不选择文件格式，就相当于，硬是把dsl文本文件，存成了aml字节码文件（没有经过编译器转换），这会造成无法预知的问题。</p>
<p>  Clover：aml文件应该放到Clover所在的分区（通常是EFI分区），如果存在 EFI/Clover/ACPI/patched. DSDT.aml，引导程序就会用这里的DSDT，替代掉原始的DSDT，提交给系统。Clover 3062版本以前，SSDT的命名必须是这样的：SSDT-x 或 SSDT-xx，x是一个整数（一直支持到SSDT-19）。Clover允许SSDT的名字不连续（例如，SSDT-1.aml, SSDT-5.aml, SSDT-6.aml是可以的）。Clover 3062以后的版本，会加载所有在ACPI/patched里的aml文件，对名字没有严格限制了。一定要注意，SSDT的加载顺序非常重要，你留下来的SSDT，要保持提取的时候的顺序。</p>
<p>  关于Clover 3062版本以后的注意事项：ACPI/patched里SSDT的加载方式的改变，造成了加载顺序的不确定性。你应该要使用 config.plist/ACPI/SortedOrder 功能，指定SSDT的加载顺序。到这里可以看到更多细节：<a href="http://www.projectosx.com/forum/index.php?showtopic=2656&amp;view=findpost&amp;p=43690" target="_blank" rel="external">http://www.projectosx.com/forum/index.php?showtopic=2656&amp;view=findpost&amp;p=43690</a>。</p>
<p>  Clover 3088版本以后，实现了SortedOrder参数。更多相关信息可以到这里查看：<a href="http://www.projectosx.com/forum/index.php?showtopic=2562&amp;view=findpost&amp;p=43674" target="_blank" rel="external">http://www.projectosx.com/forum/index.php?showtopic=2562&amp;view=findpost&amp;p=43674</a></p>
<p>  变色龙（或Chimera）：修改、编译好的DSDT/SSDT，应该放到 系统盘的 /Extra（或者你的引导程序所在的其它地方的 /Extra）。如果/Extra里存在DSDT.aml，引导程序就会用这里的DSDT，替代掉原始的DSDT，提交给系统。变色龙要求，SSDT的名字是连续的。这样的情况，文件都会被加载：SSDT.aml, SSDT-1.aml, SSDT-2.aml, SSDT-3.aml，直到引导找不到接下来的名字的文件。另外，这样的情况：SSDT.aml, SSDT-1.aml, SSDT-4.aml, SSDT-5.aml，只会加载SSDT.aml 和 SSDT-1.aml。SSDT-4.aml 和 SSDT-5.aml不会被加载（变色龙会忽略这些文件）。</p>
<p>  最后，如果不先屏蔽原始的OEM SSDT，就不能放自己修改的SSDT。最简单的方法，是设置DropSSDT=Yes（变色龙） 或者 ACPI/SSDT/DropOem=true（Clover），从而在系统启动的时候，先屏蔽原始的SSDT，之后再把目录里的SSDT（没有修改或修改过）提交给系统。</p>
<h2 id="Floating-regions"><a href="#Floating-regions" class="headerlink" title="Floating regions"></a>Floating regions</h2><p>  根据ACPI规范，OperationRegion可以被具体定义为 MMIO region, SystemMemory region, EmbeddedControl region 等。这些region通常包含了 修正过的 地址值，这些地址值 由 硬件构成、BIOS版本、BIOS设置 决定。这些region随时可能 随机地、不可预计地 发生改变。也就是所谓的”floating regions”（动态域）。</p>
<p>  我们提取的DSDT/SSDT里的Regin，只是某一个时间点的状态，当BIOS发出命令，需要变动地址值时，我们提取的文件是做不到这样的变动的。在这样的情况下，你也许能注意到，某一个特定的功能变得断断续续，或者可能随机地出现一些稳定性问题。</p>
<p>  综上而论，使用Clover的FixRegions功能，将是很好的解决办法。你可以在Clover的Wiki找到关于这个功能的说明。（国外的）论坛里的安装教程提供的config.plist都配置了这个参数。注意：只有在DSDT里的floating region，才能用这个参数修复。要修复SSDT里的floating region是非常困难的，目前，除了不处理SSDT里随机变动的floating region以外，还没有什么好的解决方案。研究floating region的处理，超出了本教程讨论的范围。</p>
<h2 id="本教程用到的资源"><a href="#本教程用到的资源" class="headerlink" title="本教程用到的资源"></a>本教程用到的资源</h2><p>MaciASL (RehabMan fork): <a href="https://github.com/RehabMan/OS-X-MaciASL-patchmatic" target="_blank" rel="external">https://github.com/RehabMan/OS-X-MaciASL-patchmatic</a></p>
<p>patchmatic: <a href="https://github.com/RehabMan/OS-X-MaciASL-patchmatic" target="_blank" rel="external">https://github.com/RehabMan/OS-X-MaciASL-patchmatic</a></p>
<p>iasl (RehabMan fork): <a href="https://bitbucket.org/RehabMan/acpica/downloads" target="_blank" rel="external">https://bitbucket.org/RehabMan/acpica/downloads</a></p>
<p>ACPI 规范: <a href="http://acpi.info/spec.htm" target="_blank" rel="external">http://acpi.info/spec.htm</a></p>
<p>RehabMan github: <a href="https://github.com/RehabMan?tab=repositories" target="_blank" rel="external">https://github.com/RehabMan?tab=repositories</a></p>
<p>Clover laptop guide: <a href="http://www.tonymacx86.com/yosemite-laptop-support/146864-guide-booting-os-x-installer-laptops-unibeast.html" target="_blank" rel="external">[GUIDE] Booting the OS X installer on LAPTOPS with Clover UEFI</a></p>
<p>Clover config.plist files for laptops: <a href="https://github.com/RehabMan/OS-X-Clover-Laptop-Config" target="_blank" rel="external">https://github.com/RehabMan/OS-X-Clover-Laptop-Config</a></p>
<p>Clover thread: <a href="http://www.projectosx.com/forum/index.php?showtopic=2562" target="_blank" rel="external">http://www.projectosx.com/forum/index.php?showtopic=2562</a></p>
<p>Clover changes: <a href="http://www.projectosx.com/forum/index.php?showtopic=2656" target="_blank" rel="external">http://www.projectosx.com/forum/index.php?showtopic=2656</a></p>
<p>Clover installer discussion: <a href="http://www.projectosx.com/forum/index.php?showtopic=3191" target="_blank" rel="external">http://www.projectosx.com/forum/index.php?showtopic=3191</a></p>
<h2 id="楼主总结"><a href="#楼主总结" class="headerlink" title="楼主总结"></a>楼主总结</h2><p>  对DSDT/SSDT的修改，首先，提取这一步也很关键，虽然提取的方法很多，但最推荐的是用Linux提取。对提取好的文件，同时反编译所有文件，可以得到错误少的dsl文件。修改就用这些dsl文件修改，根据教程，筛选出要留下来的文件。再用很多现有的补丁源（有修复的，也有添加某些功能的）修改。修改好后，编译成aml文件使用（不要用软件打开aml文件）。还要注意SSDT的命名，最好名字连续。最后，放到相应的加载目录。</p>
<p>可以结合楼主录制的视频教程学习：</p>
<p>1、新视频（2015.1.2发布）：<a href="http://bbs.pcbeta.com/viewthread-1569867-1-1.html" target="_blank" rel="external">http://bbs.pcbeta.com/viewthread-1569867-1-1.html</a></p>
<p>2、老视频（2014.6.8发布）：<a href="http://bbs.pcbeta.com/viewthread-1517830-1-1.html" target="_blank" rel="external">http://bbs.pcbeta.com/viewthread-1517830-1-1.html</a></p>
<p>3、反编译介绍：<a href="http://bbs.pcbeta.com/viewthread-1475332-1-1.html" target="_blank" rel="external">http://bbs.pcbeta.com/viewthread-1475332-1-1.html</a></p>
<p>4、MaciASL汉化版：<a href="http://bbs.pcbeta.com/viewthread-1495779-1-1.html" target="_blank" rel="external">http://bbs.pcbeta.com/viewthread-1495779-1-1.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h2 id=&quot;本文说明&quot;&gt;&lt;a href=&quot;#本文说明&quot; class=&quot;headerlink&quot; title=&quot;本文说明&quot;&gt;&lt;/a&gt;本文说明&lt;/h2&gt;&lt;p&gt;本文转载至远景论坛 daxuexinsheng 的帖子 &lt;a href=&quot;http://bbs.p
    
    </summary>
    
      <category term="黑苹果" scheme="http://hexo.neroxps.cn/categories/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
    
      <category term="黑苹果" scheme="http://hexo.neroxps.cn/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
      <category term="Mac" scheme="http://hexo.neroxps.cn/tags/Mac/"/>
    
      <category term="Hackintosh" scheme="http://hexo.neroxps.cn/tags/Hackintosh/"/>
    
      <category term="dsdt" scheme="http://hexo.neroxps.cn/tags/dsdt/"/>
    
  </entry>
  
  <entry>
    <title>最近小记（2017年01月14日）</title>
    <link href="http://hexo.neroxps.cn/2017/01/14/2017-1-14-blog/"/>
    <id>http://hexo.neroxps.cn/2017/01/14/2017-1-14-blog/</id>
    <published>2017-01-13T16:00:00.000Z</published>
    <updated>2017-07-19T12:47:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>农历年末了，等着放假，人都懒惰了。之前一直利用空余时间研究黑苹果，终于把辣鸡Dell 笔记本装上 macOS Sierra 驱动完所有能驱动的东东后，就好像虚脱了一样啥事都没干，说要把黑苹果的心路历程写下来的，开了个草稿现在就晾在那里了。</p>
<p>我装黑苹果其实是想找一款逼格好点的 Markdown 编辑器，后来发现妈蛋都好贵啊，动辄上百，轻则上几十块，完全玩不起啊。</p>
<p>后来找到开源的 MacDown，目前用着挺好，但是发现这家伙删除线不支持预览，胜在体积小，写 blog 方便。</p>
<p>MWeb Lite 也挺不错，但是那个按照建站方式管理的文档管理模式我感觉不方便，所以日常写博客还是用 MacDown。</p>
<p>翻了下我的 Seafile 上的个人维基，以前写了几篇关于翻墙的文章，因为站点备案了，我也不敢放这里，待会改天找我喝茶就不太好。</p>
<p>年初八去柬埔寨旅游，不知道有啥好玩的呢，到时候拍点好照片更新到 blog 上。</p>
<p>分享一首歌，我觉得挺好听，今天在网易云音乐听到。</p>
<p>陈奕迅-几许风雨</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=5268118&auto=1&height=66"></iframe>

<p>live 版更好听，但是无法生成外链。</p>
<p>总结下今年的计划：</p>
<ul>
<li><strong>买房</strong> √</li>
<li><strong>生孩</strong> X</li>
<li><strong>换工作</strong> √</li>
<li><strong>涨工资</strong> √</li>
</ul>
<p>这样总结下来貌似还算可以喔。明年继续努力，装修房子要好多钱钱，生娃更需要努力工作。突然发现男人很累啊。</p>
<h4 id="END"><a href="#END" class="headerlink" title="END"></a><strong>END</strong></h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;农历年末了，等着放假，人都懒惰了。之前一直利用空余时间研究黑苹果，终于把辣鸡Dell 笔记本装上 macOS Sierra 驱动完所有能驱动的东东后，就好像虚脱了一样啥事都没干，说要把黑苹果的心路历程写下来的，开了个草稿现在就晾在那里了。&lt;/p&gt;
&lt;p&gt;我装黑苹果其实是想找
    
    </summary>
    
      <category term="日记" scheme="http://hexo.neroxps.cn/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="日记" scheme="http://hexo.neroxps.cn/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>【转载】 VMware Fusion 8 Pro 序列号</title>
    <link href="http://hexo.neroxps.cn/2017/01/12/vmware-fusion-8-pro-key/"/>
    <id>http://hexo.neroxps.cn/2017/01/12/vmware-fusion-8-pro-key/</id>
    <published>2017-01-11T16:00:00.000Z</published>
    <updated>2017-07-20T00:39:16.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文转载自 <a href="http://www.tianwaihome.com/2015/08/vmware-fusion-8-pro-key.html" target="_blank" rel="external">天外之家-VMware Fusion 8 Pro 序列号</a></p>
</blockquote>
<p><img src="/2017/01/12/vmware-fusion-8-pro-key/download-vmware-fusion-or-fusion-pro-trial.jpg" alt="vmware-fusion-or-fusion-pro-trial"></p>
<h3 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h3><p><a href="http://www.vmware.com/cn/products/fusion/fusion-evaluation" target="_blank" rel="external">http://www.vmware.com/cn/products/fusion/fusion-evaluation</a></p>
<h3 id="提供几枚key："><a href="#提供几枚key：" class="headerlink" title="提供几枚key："></a>提供几枚key：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">FA3RK-FHGD5-M88TZ-V4WEZ-MVAW0</div><div class="line">FU75U-4KD5L-0845Z-JEXNZ-MLKD8</div><div class="line">UV7XK-4PXEJ-080WY-4WXQT-NC0ZF</div><div class="line">VC79R-6NF81-M84XZ-VNW5G-NKUW8</div><div class="line">GC1HA-01Z14-H8D2P-04NNZ-Z6RY0</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文转载自 &lt;a href=&quot;http://www.tianwaihome.com/2015/08/vmware-fusion-8-pro-key.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;天外之家-VMware F
    
    </summary>
    
      <category term="macOS" scheme="http://hexo.neroxps.cn/categories/macOS/"/>
    
    
      <category term="虚拟机、VMware" scheme="http://hexo.neroxps.cn/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA%E3%80%81VMware/"/>
    
      <category term="Fusion 8" scheme="http://hexo.neroxps.cn/tags/Fusion-8/"/>
    
  </entry>
  
  <entry>
    <title>黑苹果手记</title>
    <link href="http://hexo.neroxps.cn/2017/01/05/Hackintosh-00/"/>
    <id>http://hexo.neroxps.cn/2017/01/05/Hackintosh-00/</id>
    <published>2017-01-04T16:00:00.000Z</published>
    <updated>2017-07-19T12:47:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在3年前，接触过黑苹果，在家里的台式机里面装过一个，当时安装的是懒人版，也没有怎么系统的学习过黑苹果的相关知识，纯粹乱搞。</p>
<p>2016年12月份，突发奇想尝试下这台老掉牙的 Dell Inspiron 14z 5423 笔记本能否安装黑苹果，就开始尝试安装之路了。</p>
<h2 id="安装-macOS-Sierra"><a href="#安装-macOS-Sierra" class="headerlink" title="安装 macOS Sierra"></a>安装 macOS Sierra</h2><p>我是要么不搞，要么就搞最新的，也准备常用 Mac 系统。</p>
<p>我下载的系统版本是《macOS Sierra 10.12.2(16C67)正式版》，这个是一个 dmg 镜像文件，引用原帖的一句话：</p>
<blockquote>
<p>原版dmg镜像只能安装在 GPT 分区格式的硬盘上，懒人版cdr镜像可以安装在MBR格式和 GPT 分区格式的硬盘上。</p>
</blockquote>
<p>镜像下载原帖链接：<a href="http://bbs.pcbeta.com/viewthread-1729052-1-2.html" target="_blank" rel="external">[下载] 【迎新年礼品】Clover3961_U_macOS Sierra 10.12.2(16C67)正式版dmg原版免费下载</a></p>
<p>故此我们安装的硬盘分区格式必须为 GPT。</p>
<p>我是安装在笔记本的SSD上，也是淘宝的二手货，挺耐用的，反正比机械硬盘快就行了。故此</p>
<h2 id="笔记本配置"><a href="#笔记本配置" class="headerlink" title="笔记本配置"></a>笔记本配置</h2><p>我的笔记本的配置如下。</p>
<p><img src="/2017/01/05/Hackintosh-00/ludashi.jpg" alt="笔记本配置"></p>
<ul>
<li>CPU：一般笔记本只要 CPU 是 Intel I 系列，都可以装黑苹果。</li>
<li>网卡：一般 Dell 都是配的 Intel 的无线网卡，图中显示的是博通的无线网卡是我从淘宝淘的，才 18 块，而且支持 5G，唯一缺点就是没有了蓝牙。想了下，不要蓝牙也没关系了，就是我的蓝牙鼠标用不了罢了。</li>
<li>独立显卡：笔记本就别想独立显卡能用了，因为基本上黑苹果是无法切换使用的，而且如果不屏蔽它的话，还会耗电。</li>
<li>声卡：IDT 的声卡有驱动，这个驱动折腾了我很久很久才完美，后续会将过程写上。</li>
</ul>
<h2 id="引导"><a href="#引导" class="headerlink" title="引导"></a>引导</h2><p>其实安装黑苹果遇到第一个问题就是引导，因为苹果系统只认他们自己的主板，其他主板是不认的，故此很多人第一步连进入安装都进不去。</p>
<p>黑苹果引导需要引导工具，需要有一个工具欺骗苹果系统，让苹果系统认为自己是跑在 Mac 的主机里。这引导系统目前有二个。</p>
<ul>
<li>变色龙 （Chameleon）</li>
<li>四叶草 （Clover）</li>
</ul>
<p>变色龙年代比较早了，前期黑苹果都用变色龙搞。</p>
<p>四叶草比变色龙出生迟一点，但是并不影响它的实用性。我推荐使用四叶草，因为对新手来说，他提供更多补丁功能。</p>
<p>对于</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在3年前，接触过黑苹果，在家里的台式机里面装过一个，当时安装的是懒人版，也没有怎么系统的学习过黑苹果的相关知识，纯粹乱搞。&lt;/p&gt;
&lt;p&gt;2
    
    </summary>
    
      <category term="黑苹果" scheme="http://hexo.neroxps.cn/categories/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
    
      <category term="黑苹果" scheme="http://hexo.neroxps.cn/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
      <category term="Mac" scheme="http://hexo.neroxps.cn/tags/Mac/"/>
    
      <category term="Hackintosh" scheme="http://hexo.neroxps.cn/tags/Hackintosh/"/>
    
  </entry>
  
  <entry>
    <title>利用 Seafile 命令行客户端同步 GitBlog</title>
    <link href="http://hexo.neroxps.cn/2016/12/15/seaf-cli-gitblog-sync/"/>
    <id>http://hexo.neroxps.cn/2016/12/15/seaf-cli-gitblog-sync/</id>
    <published>2016-12-14T16:00:00.000Z</published>
    <updated>2017-07-19T12:47:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于 GitBlog 无后台编辑，故此每次在电脑写好博客，还需要用 SSH 或其他方式上传文件比较麻烦，而服务器本来就部署了 Seafile，故此可以使用 Seafile 的命令行客户端来作为同步工具。</p>
<h2 id="需要使用工具"><a href="#需要使用工具" class="headerlink" title="需要使用工具"></a>需要使用工具</h2><ul>
<li>已搭建好的 Seafile 服务器（搭建方法详细请看<a href="https://manual-cn.seafile.com/deploy/using_mysql.html" target="_blank" rel="external">官方手册</a>）</li>
<li>Seafile Terminal 客户端和 Windows 客户端（<a href="https://www.seafile.com/download/" target="_blank" rel="external">https://www.seafile.com/download/</a>）</li>
</ul>
<h2 id="Seaf-Cli-安装方法"><a href="#Seaf-Cli-安装方法" class="headerlink" title="Seaf-Cli 安装方法"></a>Seaf-Cli 安装方法</h2><p>####下载客户端</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wget https://bintray.com/artifact/download/seafile-org/seafile/seafile-cli_4.3.2_x86-64.tar.gz</div><div class="line">tar xzf seafile-cli_4.3.2_x86-64.tar.gz</div></pre></td></tr></table></figure>
<p>####初始化和安装守护进程</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> seafile-cli-4.3.2</div><div class="line"><span class="comment"># 选择存储seafile客户端设置的文件夹（例如）~/.seafile-client</span></div><div class="line">mkdir ~/.seafile-client            <span class="comment"># 创建客户端设置文件夹</span></div><div class="line">./seaf-cli init -d ~/.seafile-client  <span class="comment"># 初始化客户端，并指定客户端的配置文件目录</span></div><div class="line">./seaf-cli start	<span class="comment"># 启动守护程序</span></div></pre></td></tr></table></figure>
<p>####在您的环境中安装 Seafile 客户端</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 建立 seaf-cli 命令软连接到系统环境中</span></div><div class="line">ln -s `readlink -f seaf-cli` /usr/bin/</div></pre></td></tr></table></figure>
<p>####建立同步</p>
<ol>
<li>到 Seafile Web 上新建 GitBlog 资料库。</li>
<li>点击资料库，抄下 <code>https://demo.myseafile.com/#my-libs/lib/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx</code> 最后面的资料库 ID。</li>
<li>到服务器中建立同步</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">seaf-cli sync -l [资料库 ID] -s [Seafile 服务器 URL] -d [Gitblog目录] -u [Seafile 用户邮箱] -p [Seafile 登陆密码]</div><div class="line"></div><div class="line"><span class="comment">#查询已同步资料库</span></div><div class="line">seaf-cli status</div><div class="line"><span class="comment">#Name  Status  Progress</span></div><div class="line"></div><div class="line"><span class="comment">#Name  Status</span></div><div class="line">gitblog synchronized</div></pre></td></tr></table></figure>
<ol>
<li>Windows 安装 Seafile 客户端，同步 GitBlog 资料库，就可以在本地编辑 Blog 目录下的内容了。保存过几秒就刷新页面就可以看到自己写的博客，方便简单，无需再敲命令。</li>
</ol>
<h2 id="Seaf-Cli-开机启动"><a href="#Seaf-Cli-开机启动" class="headerlink" title="Seaf-Cli 开机启动"></a>Seaf-Cli 开机启动</h2><p><strong> vim /etc/systemd/system/seaf-cli.service </strong></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">[Unit]</div><div class="line">Description=Seafile Terminal Client</div><div class="line"><span class="comment"># add mysql.service or postgresql.service depending on your database to the line below</span></div><div class="line">After=network.target seafile.service</div><div class="line"></div><div class="line"></div><div class="line">[Service]</div><div class="line">Type=oneshot</div><div class="line">ExecStart=/opt/seafile-cli/seaf-cli start</div><div class="line">ExecStop=/opt/seafile-cli/seaf-cli stop</div><div class="line">RemainAfterExit=yes</div><div class="line"></div><div class="line">User=root</div><div class="line">Group=root</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div></pre></td></tr></table></figure>
<p><strong> systemctl daemon-reload</strong></p>
<p><strong> systemctl enable seaf-cli </strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;由于 GitBlog 无后台编辑，故此每次在电脑写好博客，还需要用 SSH 或其他方式上传文件比较麻烦，而服务器本来就部署了 Seafile
    
    </summary>
    
      <category term="Seafile,IT技术" scheme="http://hexo.neroxps.cn/categories/Seafile-IT%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Seafile" scheme="http://hexo.neroxps.cn/tags/Seafile/"/>
    
      <category term="Gitblog" scheme="http://hexo.neroxps.cn/tags/Gitblog/"/>
    
      <category term="seaf-cli" scheme="http://hexo.neroxps.cn/tags/seaf-cli/"/>
    
  </entry>
  
  <entry>
    <title>Centos7 部署 http2</title>
    <link href="http://hexo.neroxps.cn/2016/12/08/nginx-https-http2-installation/"/>
    <id>http://hexo.neroxps.cn/2016/12/08/nginx-https-http2-installation/</id>
    <published>2016-12-07T16:00:00.000Z</published>
    <updated>2017-07-19T12:47:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在折腾 GitBlog，顺便想将网站的 http1.1 协议更改为 http2，修改好 nginx 配置后发现依然还是 http1.1。后来 Google 了一番，发现 http2 需要 openssl 1.0.2 版本支持，而 Centos7 默认 yum 的 openssl 版本是 1.0.1 故此需要使用新版的 openssl 1.1.0c 编译 nginx。</p>
<h2 id="下载-openssl-源码"><a href="#下载-openssl-源码" class="headerlink" title="下载 openssl 源码"></a>下载 openssl 源码</h2><p>到 openssl 官网下载源码：<a href="https://www.openssl.org/source/" target="_blank" rel="external">https://www.openssl.org/source/</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd /usr/src</div><div class="line">wget https://www.openssl.org/source/openssl-1.1.0c.tar.gz</div><div class="line">tar xzf openssl-1.1.0c.tar.gz &amp;&amp; rm openssl-1.1.0c.tar.gz -f</div></pre></td></tr></table></figure>
<h2 id="卸载旧版-nginx-编译安装-nginx"><a href="#卸载旧版-nginx-编译安装-nginx" class="headerlink" title="卸载旧版 nginx 编译安装 nginx"></a>卸载旧版 nginx 编译安装 nginx</h2><h3 id="下载-nginx-源码包"><a href="#下载-nginx-源码包" class="headerlink" title="下载 nginx 源码包"></a>下载 nginx 源码包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">cd /usr/src</div><div class="line">yum remove nginx</div><div class="line">wget http://nginx.org/download/nginx-1.10.2.tar.gz</div><div class="line">tar xzf nginx-1.10.2.tar.gz &amp;&amp; rm -f nginx-1.10.2.tar.gz</div><div class="line">cd nginx-1.10.2</div></pre></td></tr></table></figure>
<h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"># 使用官方参数配置，仅添加 openssl 源码 --with-openssl=/usr/src/openssl-1.1.0c</div><div class="line">./configure --prefix=/etc/nginx \</div><div class="line">--sbin-path=/usr/sbin/nginx \</div><div class="line">--conf-path=/etc/nginx/nginx.conf \</div><div class="line">--error-log-path=/var/log/nginx/error.log \</div><div class="line">--http-log-path=/var/log/nginx/access.log \</div><div class="line">--pid-path=/var/run/nginx.pid \</div><div class="line">--lock-path=/var/run/nginx.lock \</div><div class="line">--http-client-body-temp-path=/var/cache/nginx/client_temp \</div><div class="line">--http-proxy-temp-path=/var/cache/nginx/proxy_temp \</div><div class="line">--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \</div><div class="line">--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \</div><div class="line">--http-scgi-temp-path=/var/cache/nginx/scgi_temp \</div><div class="line">--user=nginx \</div><div class="line">--group=nginx \</div><div class="line">--with-openssl=/usr/src/openssl-1.1.0c \</div><div class="line">--with-http_ssl_module \</div><div class="line">--with-http_realip_module \</div><div class="line">--with-http_addition_module \</div><div class="line">--with-http_sub_module \</div><div class="line">--with-http_dav_module \</div><div class="line">--with-http_flv_module \</div><div class="line">--with-http_mp4_module \</div><div class="line">--with-http_gunzip_module \</div><div class="line">--with-http_gzip_static_module \</div><div class="line">--with-http_random_index_module \</div><div class="line">--with-http_secure_link_module \</div><div class="line">--with-http_stub_status_module \</div><div class="line">--with-http_auth_request_module \</div><div class="line">--with-threads \</div><div class="line">--with-stream \</div><div class="line">--with-stream_ssl_module \</div><div class="line">--with-http_slice_module \</div><div class="line">--with-mail \</div><div class="line">--with-mail_ssl_module \</div><div class="line">--with-file-aio \</div><div class="line">--with-http_v2_module \</div><div class="line">--with-ipv6 </div><div class="line"></div><div class="line">make &amp;&amp; make install</div></pre></td></tr></table></figure>
<p>查询 nginx 版本</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@vultr conf.d]# nginx -V</div><div class="line">nginx version: nginx/1.10.2</div><div class="line">built by gcc 4.8.5 20150623 (Red Hat 4.8.5-4) (GCC) </div><div class="line">built with OpenSSL 1.1.0c  10 Nov 2016</div><div class="line">TLS SNI support enabled</div><div class="line">configure arguments: --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-openssl=/usr/src/openssl-1.1.0c --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module --with-http_stub_status_module --with-http_auth_request_module --with-threads --with-stream --with-stream_ssl_module --with-http_slice_module --with-mail --with-mail_ssl_module --with-file-aio --with-http_v2_module --with-ipv6</div></pre></td></tr></table></figure>
<p>已经是 openssl 1.1.0c 版本了</p>
<h3 id="编写-systemd-服务文件"><a href="#编写-systemd-服务文件" class="headerlink" title="编写 systemd 服务文件"></a>编写 systemd 服务文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div></pre></td><td class="code"><pre><div class="line">vim /etc/systemd/system/multi-user.target.wants/nginx.service</div><div class="line"></div><div class="line"># 输入以下内容</div><div class="line"></div><div class="line">[Unit]</div><div class="line">Description=nginx - high performance web server</div><div class="line">Documentation=http://nginx.org/en/docs/</div><div class="line">After=network.target remote-fs.target nss-lookup.target</div><div class="line"> </div><div class="line">[Service]</div><div class="line">Type=forking</div><div class="line">PIDFile=/run/nginx.pid</div><div class="line">ExecStartPre=/usr/sbin/nginx -t -c /etc/nginx/nginx.conf</div><div class="line">ExecStart=/usr/sbin/nginx -c /etc/nginx/nginx.conf</div><div class="line">ExecReload=/bin/kill -s HUP $MAINPID</div><div class="line">ExecStop=/bin/kill -s QUIT $MAINPID</div><div class="line">PrivateTmp=true</div><div class="line"> </div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div><div class="line">[root@localhost ~]# cat /etc/systemd/system/multi-user.target.wants/nginx.service</div><div class="line">[Unit]</div><div class="line">Description=nginx - high performance web server</div><div class="line">Documentation=http://nginx.org/en/docs/</div><div class="line">After=network.target remote-fs.target nss-lookup.target</div><div class="line"> </div><div class="line">[Service]</div><div class="line">Type=forking</div><div class="line">PIDFile=/run/nginx.pid</div><div class="line">ExecStartPre=/usr/sbin/nginx -t -c /etc/nginx/nginx.conf</div><div class="line">ExecStart=/usr/sbin/nginx -c /etc/nginx/nginx.conf</div><div class="line">ExecReload=/bin/kill -s HUP $MAINPID</div><div class="line">ExecStop=/bin/kill -s QUIT $MAINPID</div><div class="line">PrivateTmp=true</div><div class="line"> </div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div><div class="line"></div><div class="line">:wq</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">systemctl daemon-reload</div><div class="line">systemctl start nginx</div><div class="line"></div><div class="line"># 修改 nginx 主配置提取自 rpm 包</div><div class="line"></div><div class="line">vim /etc/nginx/nginx.conf</div><div class="line"></div><div class="line"></div><div class="line">user  nginx;</div><div class="line">worker_processes  1;</div><div class="line"></div><div class="line">error_log  /var/log/nginx/error.log warn;</div><div class="line">pid        /var/run/nginx.pid;</div><div class="line"></div><div class="line"></div><div class="line">events &#123;</div><div class="line">    worker_connections  1024;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">http &#123;</div><div class="line">    include       /etc/nginx/mime.types;</div><div class="line">    default_type  application/octet-stream;</div><div class="line"></div><div class="line">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</div><div class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</div><div class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</div><div class="line"></div><div class="line">    access_log  /var/log/nginx/access.log  main;</div><div class="line"></div><div class="line">    sendfile        on;</div><div class="line">    #tcp_nopush     on;</div><div class="line"></div><div class="line">    keepalive_timeout  65;</div><div class="line"></div><div class="line">    #gzip  on;</div><div class="line"></div><div class="line">    include /etc/nginx/conf.d/*.conf;</div><div class="line">&#125;</div><div class="line"></div><div class="line">[root@vultr ~]# nginx -s reload</div></pre></td></tr></table></figure>
<h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><p>刷新一下页面，发现已经是 http2 协议了。</p>
<p>END</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近在折腾 GitBlog，顺便想将网站的 http1.1 协议更改为 http2，修改好 nginx 配置后发现依然还是 http1.1。
    
    </summary>
    
      <category term="Linux" scheme="http://hexo.neroxps.cn/categories/Linux/"/>
    
    
      <category term="nginx" scheme="http://hexo.neroxps.cn/tags/nginx/"/>
    
      <category term="http2.https" scheme="http://hexo.neroxps.cn/tags/http2-https/"/>
    
      <category term="安全" scheme="http://hexo.neroxps.cn/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>TP-Link AC1000 在锐捷网路内设置 AP 上线</title>
    <link href="http://hexo.neroxps.cn/2016/12/06/ac1000-reijie/"/>
    <id>http://hexo.neroxps.cn/2016/12/06/ac1000-reijie/</id>
    <published>2016-12-05T16:00:00.000Z</published>
    <updated>2017-07-19T12:47:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="网络拓扑及环境说明"><a href="#网络拓扑及环境说明" class="headerlink" title="网络拓扑及环境说明"></a>网络拓扑及环境说明</h2><p><img src="/2016/12/06/ac1000-reijie/01.png" alt="拓扑图"></p>
<ul>
<li>配置目的:实现不同 SSID 分配不同 VLAN<ul>
<li>SSID = Office = Vlan 53</li>
<li>SSID = Guest = Vlan 54</li>
<li>管理 VLAN = VLAN 52</li>
</ul>
</li>
<li>无线产品<ul>
<li>TP-Link AC1000</li>
<li>TP-Link TL-AP306I-PoE</li>
</ul>
</li>
<li>交换机产品<ul>
<li>核心交换机: 锐捷 S8610</li>
<li>接入交换机: 锐捷 S3760E-24<blockquote>
<p>POE供电交换机接在接入交换机后,这里并不体现.</p>
</blockquote>
</li>
</ul>
</li>
</ul>
<h2 id="配置要点"><a href="#配置要点" class="headerlink" title="配置要点"></a>配置要点</h2><ul>
<li>AC 与核心交换机连接链路为 Trunk </li>
<li>无线管理 VLAN,AP SSID VLAN,需要配通.</li>
<li>部署 AP 上线需要的 DHCP.</li>
</ul>
<h2 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h2><h3 id="1-配置核心交换机"><a href="#1-配置核心交换机" class="headerlink" title="1. 配置核心交换机"></a>1. 配置核心交换机</h3><pre><code>#新建管理 VLAN 52
vlan 52
 name AP管理

#新建业务 VLAN 53 ; VLAN 54
vlan 53
 name SSID-Office
vlan 54
 name SSID-Guest

# 配置各 VLAN 网关
interface VLAN 52
 ip address 172.16.52.254 255.255.255.0
!
interface VLAN 53
 ip address 172.16.53.254 255.255.255.0
!
interface VLAN 54
 ip address 172.16.54.254 255.255.255.0

# 配置 interface GigabitEthernet 2/3 为 Trunk口,且只允许 VLAN 52-54 通过.
interface GigabitEthernet 2/3
 switchport mode trunk
 switchport trunk allowed vlan remove 1-51,55-4094

# 配置各 VLAN DHCP 服务器,这里我只配置两个业务 VLAN 的 DHCP,AP 的 DHCP 由 AC 分配.
ip dhcp pool vlan053
 network 172.16.53.0 255.255.255.0
 dns-server 202.96.128.166
 default-router 172.16.53.254
!
ip dhcp pool vlan054
 network 172.16.54.0 255.255.255.0
 dns-server 202.96.128.166
 default-router 172.16.54.254
</code></pre><h3 id="2-接入交换机配置"><a href="#2-接入交换机配置" class="headerlink" title="2. 接入交换机配置"></a>2. 接入交换机配置</h3><pre><code># 配置 AP 管理 VLAN 与业务 VLAN.
vlan 52
 name AP管理
vlan 53
 name SSID-Office
vlan 54
 name SSID-Guest

# 配置 interface FastEthernet 0/17 为 Trunk,并且只允许 VLAN 52-54 通过;修改默认 VLAN 为 vlan 52
interface FastEthernet 0/17
 switchport mode trunk
 switchport trunk native vlan 52
 switchport trunk allowed vlan remove 1-51,55-4094
</code></pre><h2 id="3-配置-AC1000"><a href="#3-配置-AC1000" class="headerlink" title="3. 配置 AC1000"></a>3. 配置 AC1000</h2><ul>
<li>VLAN 配置</li>
</ul>
<p><img src="/2016/12/06/ac1000-reijie/02.png" alt="VLAN 配置"></p>
<ul>
<li>接口配置</li>
</ul>
<p><img src="/2016/12/06/ac1000-reijie/03.png" alt="接口配置"></p>
<ul>
<li>DHCP 服务</li>
</ul>
<p><img src="/2016/12/06/ac1000-reijie/04.png" alt="DHCP 服务"></p>
<ul>
<li>新建无线服务 Office-test</li>
</ul>
<p><img src="/2016/12/06/ac1000-reijie/05.png" alt="Office-test"></p>
<ul>
<li>新建无线服务 Guest</li>
</ul>
<p><img src="/2016/12/06/ac1000-reijie/06.png" alt="Guest"></p>
<ul>
<li>分别将无线服务绑定到 A202 AP(TL-AP306I-PoE)</li>
</ul>
<p><img src="/2016/12/06/ac1000-reijie/07.png" alt="SSID:Office-test"></p>
<p><img src="/2016/12/06/ac1000-reijie/08.png" alt="SSID:Guest"></p>
<h3 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h3>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;网络拓扑及环境说明&quot;&gt;&lt;a href=&quot;#网络拓扑及环境说明&quot; class=&quot;headerlink&quot; title=&quot;网络拓扑及环境说明&quot;&gt;&lt;/a&gt;网络拓扑及环境说明&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/2016/12/06/ac1000-reijie/01.png
    
    </summary>
    
      <category term="网络" scheme="http://hexo.neroxps.cn/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="锐捷" scheme="http://hexo.neroxps.cn/tags/%E9%94%90%E6%8D%B7/"/>
    
      <category term="TP-Link" scheme="http://hexo.neroxps.cn/tags/TP-Link/"/>
    
      <category term="无线" scheme="http://hexo.neroxps.cn/tags/%E6%97%A0%E7%BA%BF/"/>
    
  </entry>
  
</feed>
